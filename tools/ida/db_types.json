{
  "sceAjmBatchCancel": "int sceAjmBatchCancel(const unsigned int uiContext, const unsigned int uiBatch)",
  "sceAjmBatchErrorDump": "void sceAjmBatchErrorDump(const SceAjmBatchInfo * const pInfo, SceAjmBatchError * const pBatchError)",
  "sceAjmBatchJobControlBufferRa": "void *sceAjmBatchJobControlBufferRa(void * const pBatchPosition, const SceAjmInstanceId uiInstance, const uint64_t uiFlags, const void * const pSidebandInput, const size_t szSidebandInputSize, void * const pSidebandOutput, const size_t szSidebandOutputSize, const void *pReturnAddress)",
  "sceAjmBatchJobInlineBuffer": "void *sceAjmBatchJobInlineBuffer(void * const pBatchPosition, const void * const pDataInput, const size_t szDataInputSize, const void **pBatchAddress)",
  "sceAjmBatchJobRunBufferRa": "void *sceAjmBatchJobRunBufferRa(void * const pBatchPosition, const SceAjmInstanceId uiInstance, const uint64_t uiFlags, const void * const pDataInput, const size_t szDataInputSize, void * const pDataOutput, const size_t szDataOutputSize, void * const pSidebandOutput, const size_t szSidebandOutputSize, const void *pReturnAddress)",
  "sceAjmBatchJobRunSplitBufferRa": "void *sceAjmBatchJobRunSplitBufferRa(void * const pBatchPosition, const SceAjmInstanceId uiInstance, const uint64_t uiFlags, const SceAjmBuffer * const pDataInputBuffers, const size_t szNumDataInputBuffers, const SceAjmBuffer * const pDataOutputBuffers, const size_t szNumDataOutputBuffers, void * const pSidebandOutput, const size_t szSidebandOutputSize, const void *pReturnAddress)",
  "sceAjmBatchStartBuffer": "int sceAjmBatchStartBuffer(const SceAjmContextId uiContext, const void * const pBatchCommands, const size_t szBatchSize, const int iPriority, SceAjmBatchError * const pBatchError, SceAjmBatchId * const pBatch)",
  "sceAjmBatchWait": "int sceAjmBatchWait(const unsigned int uiContext, const unsigned int uiBatch, const unsigned int uiTimeout, SceAjmBatchError * const pBatchError)",
  "sceAjmDecAt9ParseConfigData": "int sceAjmDecAt9ParseConfigData(const void *pConfigData, SceAjmDecAt9ConfigDataInfo *pConfigDataInfo)",
  "sceAjmDecMp3ParseFrame": "int sceAjmDecMp3ParseFrame(const void *pBitstream, size_t szBitstream, int iParseOfl, SceAjmDecMp3ParseFrame *pFrameInfo)",
  "sceAjmFinalize": "int sceAjmFinalize(const unsigned int uiContext)",
  "sceAjmInitialize": "int sceAjmInitialize(int64_t iReserved, unsigned int * const pContext)",
  "sceAjmInstanceCreate": "int sceAjmInstanceCreate(const unsigned int uiContext, const unsigned int uiCodec, const uint64_t uiFlags, unsigned int * const pInstance)",
  "sceAjmInstanceDestroy": "int sceAjmInstanceDestroy(const unsigned int uiContext, const unsigned int uiInstance)",
  "sceAjmInstanceExtend": "int sceAjmInstanceExtend(const unsigned int uiContext, const unsigned int uiCodec, const uint64_t uiFlags, unsigned int uiInstance)",
  "sceAjmInstanceSwitch": "int sceAjmInstanceSwitch(const unsigned int uiContext, const unsigned int uiCodec, const uint64_t uiFlags, const unsigned int uiInstance)",
  "sceAjmMemoryRegister": "int sceAjmMemoryRegister(const unsigned int uiContext, void * const pRegion, const size_t szNumPages)",
  "sceAjmMemoryUnregister": "int sceAjmMemoryUnregister(const unsigned int uiContext, void * const pRegion)",
  "sceAjmModuleRegister": "int sceAjmModuleRegister(const unsigned int uiContext, const unsigned int uiCodec, int64_t iReserved)",
  "sceAjmModuleUnregister": "int sceAjmModuleUnregister(const unsigned int uiContext, const unsigned int uiCodec)",
  "sceAjmStaticConstructor": "void sceAjmStaticConstructor()",
  "sceAjmStaticDestructor": "void sceAjmStaticDestructor()",
  "sceAjmStrError": "const char * sceAjmStrError(int iErrorCode)",
  "sceAt9EncClearContext": "int32_t sceAt9EncClearContext(void *pAt9EncWorkArea, int32_t *pInternalResult)",
  "sceAt9EncCreateEncoder": "int32_t sceAt9EncCreateEncoder(void *pAt9EncWorkArea, struct *pAt9EncParam, int32_t memSize, int32_t *pInternalResult)",
  "sceAt9EncEncode": "int32_t sceAt9EncEncode(void *pAt9EncWorkArea, const void *pInputBuf, void *pOutputBuf, uint32_t inputBufSize, uint32_t outputBufSize, uint32_t *pOutputDataByte, uint32_t *pUsedBufSize, int32_t *pInternalResult)",
  "sceAt9EncFlush": "int32_t sceAt9EncFlush(void *pAt9EncWorkArea, void *pOutputBuf, uint32_t outputBufSize, uint32_t *pOutputDataByte, int32_t *pInternalResult)",
  "sceAt9EncQueryMemSize": "int32_t sceAt9EncQueryMemSize(struct *pAt9EncParam, int32_t *pMemSize, int32_t *pInternalResult)",
  "sceAudio3dAudioOutClose": "int32_t sceAudio3dAudioOutClose(int32_t handle)",
  "sceAudio3dAudioOutOpen": "int32_t sceAudio3dAudioOutOpen(unsigned int uiPortId, int userId, int32_t type, int32_t index, uint32_t len, uint32_t freq, uint32_t param)",
  "sceAudio3dAudioOutOutput": "int32_t sceAudio3dAudioOutOutput(int32_t handle, const void *ptr)",
  "sceAudio3dAudioOutOutputs": "int32_t sceAudio3dAudioOutOutputs(SceAudioOutOutputParam *param, uint32_t num)",
  "sceAudio3dBedWrite": "int sceAudio3dBedWrite(unsigned int uiPortId, unsigned int uiNumChannels, SceAudio3dFormat eFormat, const void *pBuffer, unsigned int uiNumSamples)",
  "sceAudio3dBedWrite2": "int sceAudio3dBedWrite2(unsigned int uiPortId, unsigned int uiNumChannels, SceAudio3dFormat eFormat, const void *pBuffer, unsigned int uiNumSamples, SceAudio3dOutputRoute eOutputRoute, bool bRestricted)",
  "sceAudio3dCreateSpeakerArray": "int sceAudio3dCreateSpeakerArray(void * *pHandle, const SceAudio3dSpeakerArrayParameters *pParameters)",
  "sceAudio3dDeleteSpeakerArray": "int sceAudio3dDeleteSpeakerArray(void * handle)",
  "sceAudio3dGetSpeakerArrayMemorySize": "size_t sceAudio3dGetSpeakerArrayMemorySize(unsigned int uiNumSpeakers, bool bIs3d)",
  "sceAudio3dGetSpeakerArrayMixCoefficients": "int sceAudio3dGetSpeakerArrayMixCoefficients(void * handle, SceAudio3dPosition pos, float fSpread, float *pCoefficients, unsigned int uiNumCoefficients)",
  "sceAudio3dInitialize": "int sceAudio3dInitialize(int64_t iReserved)",
  "sceAudio3dObjectReserve": "int sceAudio3dObjectReserve(unsigned int uiPortId, unsigned int *pId)",
  "sceAudio3dObjectSetAttributes": "int sceAudio3dObjectSetAttributes(unsigned int uiPortId, unsigned int uiObjectId, size_t szNumAttributes, const SceAudio3dAttribute *pAttributeArray)",
  "sceAudio3dObjectUnreserve": "int sceAudio3dObjectUnreserve(unsigned int uiPortId, unsigned int uiObjectId)",
  "sceAudio3dPortAdvance": "int sceAudio3dPortAdvance(unsigned int uiPortId)",
  "sceAudio3dPortClose": "int sceAudio3dPortClose(unsigned int uiPortId)",
  "sceAudio3dPortCreate": "int sceAudio3dPortCreate(unsigned int uiGranularity, SceAudio3dRate eRate, int64_t iReserved, unsigned int *pId)",
  "sceAudio3dPortDestroy": "int sceAudio3dPortDestroy(unsigned int uiPortId)",
  "sceAudio3dPortFlush": "int sceAudio3dPortFlush(unsigned int uiPortId)",
  "sceAudio3dPortFreeState": "int sceAudio3dPortFreeState(SceAudio3dPortDebugState *pState)",
  "sceAudio3dPortGetAttributesSupported": "int sceAudio3dPortGetAttributesSupported(unsigned int uiPortId, unsigned int *pCapabilities, unsigned int *pNumCapabilities)",
  "sceAudio3dPortGetList": "int sceAudio3dPortGetList(SceAudio3dPortId *pPorts, unsigned int *pNumPorts)",
  "sceAudio3dPortGetParameters": "int sceAudio3dPortGetParameters(SceAudio3dPortId uiPortId, SceAudio3dOpenParameters *pParameters)",
  "sceAudio3dPortGetQueueLevel": "int sceAudio3dPortGetQueueLevel(unsigned int uiPortId, unsigned int *pQueueLevel, unsigned int *pQueueAvailable)",
  "sceAudio3dPortGetState": "int sceAudio3dPortGetState(SceAudio3dPortId uiPortId, SceAudio3dPortDebugState *pState)",
  "sceAudio3dPortOpen": "int sceAudio3dPortOpen(int iUserId, const SceAudio3dOpenParameters *pParameters, unsigned int *pId)",
  "sceAudio3dPortPush": "int sceAudio3dPortPush(unsigned int uiPortId, SceAudio3dBlocking eBlocking)",
  "sceAudio3dPortQueryDebug": "int sceAudio3dPortQueryDebug(SceAudio3dPortId uiPortId, SceAudio3dObjectId uiObjectId, SceAudio3dDebugQuery eQuery, void *pBuffer, size_t szBuffer)",
  "sceAudio3dPortSetAttribute": "int sceAudio3dPortSetAttribute(unsigned int uiPortId, unsigned int uiAttributeId, const void *pAttribute, size_t szAttribute)",
  "sceAudio3dStrError": "const char *sceAudio3dStrError(int iErrorCode)",
  "sceAudio3dTerminate": "int sceAudio3dTerminate(void)",
  "sceAudioInClose": "int32_t sceAudioInClose(int32_t handle)",
  "sceAudioInGetSilentState": "int32_t sceAudioInGetSilentState(int32_t handle)",
  "sceAudioInHqOpen": "int32_t sceAudioInHqOpen(int32_t userId, int32_t type, int32_t index, uint32_t timeLen, uint32_t freq, uint32_t param)",
  "sceAudioInInput": "int32_t sceAudioInInput(int32_t handle, void *dest)",
  "sceAudioInOpen": "int32_t sceAudioInOpen(int32_t userId, int32_t type, int32_t index, uint32_t len, uint32_t freq, uint32_t param)",
  "sceAudioLatencyEstimationGetDelayTime": "int32_t sceAudioLatencyEstimationGetDelayTime(int8_t * handle, float *delayTime,float *score)",
  "sceAudioLatencyEstimationInitialize": "int8_t * sceAudioLatencyEstimationInitialize(int8_t * handle)",
  "sceAudioLatencyEstimationRelease": "int32_t sceAudioLatencyEstimationRelease(int8_t * handle)",
  "sceAudioOutClose": "int32_t sceAudioOutClose(int32_t handle)",
  "sceAudioOutGetLastOutputTime": "int32_t sceAudioOutGetLastOutputTime (int32_t handle, uint64_t *outputTime)",
  "sceAudioOutGetPortState": "int32_t sceAudioOutGetPortState (int32_t handle, SceAudioOutPortState *state)",
  "sceAudioOutGetSystemState": "int32_t sceAudioOutGetSystemState (SceAudioOutSystemState *state)",
  "sceAudioOutInit": "int32_t sceAudioOutInit(void)",
  "sceAudioOutMasteringGetState": "int32_t sceAudioOutMasteringGetState(SceAudioOutMasteringStatesHeader *state)",
  "sceAudioOutMasteringInit": "int32_t sceAudioOutMasteringInit(uint32_t flags)",
  "sceAudioOutMasteringSetParam": "int32_t sceAudioOutMasteringSetParam(const SceAudioOutMasteringParamsHeader *param, uint32_t flags)",
  "sceAudioOutMasteringTerm": "int32_t sceAudioOutMasteringTerm(void)",
  "sceAudioOutOpen": "int32_t sceAudioOutOpen(SceUserServiceUserId userId, int32_t type, int32_t index, uint32_t len, uint32_t freq, uint32_t param)",
  "sceAudioOutOutput": "int32_t sceAudioOutOutput(int32_t handle, const void *ptr)",
  "sceAudioOutOutputs": "int32_t sceAudioOutOutputs(struct *param, uint32_t num)",
  "sceAudioOutSetMixLevelPadSpk": "int32_t sceAudioOutSetMixLevelPadSpk(int32_t handle, int32_t mixLevel)",
  "sceAudioOutSetSystemDebugState": "int32_t sceAudioOutSetSystemDebugState (SceAudioOutSystemDebugStateElement elem, struct *param)",
  "sceAudioOutSetVolume": "int32_t sceAudioOutSetVolume(int32_t handle, int32_t flag, int32_t *vol)",
  "sceAudiodecClearContext": "int32_t sceAudiodecClearContext(int32_t handle)",
  "sceAudiodecCpuClearContext": "int32_t sceAudiodecCpuClearContext(SceAudiodecCpuResource *pRes, uint32_t uiCodecType)",
  "sceAudiodecCpuDecode": "int32_t sceAudiodecCpuDecode(SceAudiodecCpuCtrl *pCtrl, SceAudiodecCpuResource *pRes, uint32_t uiCodecType)",
  "sceAudiodecCpuInitDecoder": "int32_t sceAudiodecCpuInitDecoder(SceAudiodecCpuCtrl *pCtrl, SceAudiodecCpuResource *pRes, uint32_t uiCodecType)",
  "sceAudiodecCpuQueryMemSize": "int32_t sceAudiodecCpuQueryMemSize(SceAudiodecCpuCtrl *pCtrl, SceAudiodecCpuResource *pRes, uint32_t uiCodecType)",
  "sceAudiodecCreateDecoder": "int32_t sceAudiodecCreateDecoder(struct *pCtrl, uint32_t uiCodecType)",
  "sceAudiodecDecode": "int32_t sceAudiodecDecode(int32_t handle, struct *pCtrl)",
  "sceAudiodecDeleteDecoder": "int32_t sceAudiodecDeleteDecoder(int32_t handle)",
  "sceAudiodecInitLibrary": "int32_t sceAudiodecInitLibrary(uint32_t uiCodecType)",
  "sceAudiodecTermLibrary": "int32_t sceAudiodecTermLibrary(uint32_t uiCodecType)",
  "sceAvPlayerAddSource": "int32_t sceAvPlayerAddSource(void* h, const char* argFilename)",
  "sceAvPlayerAddSourceEx": "int32_t sceAvPlayerAddSourceEx(SceAvPlayerHandle h, structType uriType, struct* sourceDetails)",
  "sceAvPlayerChangeStream": "int32_t sceAvPlayerChangeStream(void* h, uint32_t argOldStreamID, uint32_t argNewStreamID)",
  "sceAvPlayerClose": "int32_t sceAvPlayerClose(void* h)",
  "sceAvPlayerCurrentTime": "uint64_t sceAvPlayerCurrentTime(void* h)",
  "sceAvPlayerDisableStream": "int32_t sceAvPlayerDisableStream(void* h, uint32_t argStreamID)",
  "sceAvPlayerEnableStream": "int32_t sceAvPlayerEnableStream(void* h, uint32_t argStreamID)",
  "sceAvPlayerGetAudioData": "bool sceAvPlayerGetAudioData(void* h, struct* audioInfo)",
  "sceAvPlayerGetStreamInfo": "int32_t sceAvPlayerGetStreamInfo(void* h, uint32_t argStreamID, struct* argInfo)",
  "sceAvPlayerGetVideoData": "bool sceAvPlayerGetVideoData(void* h, struct* videoInfo)",
  "sceAvPlayerGetVideoDataEx": "bool sceAvPlayerGetVideoDataEx(SceAvPlayerHandle h, struct* videoInfo)",
  "sceAvPlayerInit": "void* sceAvPlayerInit(struct* pInit)",
  "sceAvPlayerInitEx": "int32_t sceAvPlayerInitEx(const struct* initDataEx, SceAvPlayerHandle* playerHandle)",
  "sceAvPlayerIsActive": "bool sceAvPlayerIsActive(void* h)",
  "sceAvPlayerJumpToTime": "int32_t sceAvPlayerJumpToTime(void* h, uint64_t argJumpTimeMsec)",
  "sceAvPlayerPause": "int32_t sceAvPlayerPause(void* h)",
  "sceAvPlayerPostInit": "int32_t sceAvPlayerPostInit(void* h, struct* pPostInit)",
  "sceAvPlayerResume": "int32_t sceAvPlayerResume(void* h)",
  "sceAvPlayerSetAvSyncMode": "int32_t sceAvPlayerSetAvSyncMode(void* h, enum argSyncMode)",
  "sceAvPlayerSetLogCallback": "int32_t sceAvPlayerSetLogCallback(SceAvPlayerLogCallback logCb, void* userData)",
  "sceAvPlayerSetLooping": "int32_t sceAvPlayerSetLooping(void* h, bool loopFlag)",
  "sceAvPlayerSetTrickSpeed": "int32_t sceAvPlayerSetTrickSpeed(void* h, int32_t argTrickSpeed)",
  "sceAvPlayerStart": "int32_t sceAvPlayerStart(void* h)",
  "sceAvPlayerStop": "int32_t sceAvPlayerStop(void* h)",
  "sceAvPlayerStreamCount": "int32_t sceAvPlayerStreamCount(void* h)",
  "sceAvPlayerVprintf": "int32_t sceAvPlayerVprintf(const char* format, va_list args)",
  "sceCameraClose": "int SCE_CAMERA_API sceCameraClose(int32_t handle)",
  "sceCameraCloseVrTraceHook": "int32_t sceCameraCloseVrTraceHook(int32_t handle)",
  "sceCameraGetAttribute": "int SCE_CAMERA_API sceCameraGetAttribute(int32_t handle, struct* pAttribute)",
  "sceCameraGetAutoExposureGain": "int SCE_CAMERA_API sceCameraGetAutoExposureGain(int32_t handle, enum channel, uint32_t* pEnable, void* pOption)",
  "sceCameraGetAutoWhiteBalance": "int SCE_CAMERA_API sceCameraGetAutoWhiteBalance(int32_t handle, enum channel, uint32_t* pEnable, void* pOption)",
  "sceCameraGetCalibrationData": "int SCE_CAMERA_API sceCameraGetCalibrationData(const SceCameraGetCalibrationDataParameter* pGetCalibrationDataParameter, SceCameraCalibrationData* pCalibrationData)",
  "sceCameraGetConfig": "int SCE_CAMERA_API sceCameraGetConfig(int32_t handle, struct *pConfig)",
  "sceCameraGetConfigVrTraceHook": "int32_t sceCameraGetConfigVrTraceHook(int32_t handle, SceCameraConfig *pConfig)",
  "sceCameraGetContrast": "int SCE_CAMERA_API sceCameraGetContrast(int32_t handle, enum channel, uint32_t* pContrast, void* pOption)",
  "sceCameraGetDefectivePixelCancellation": "int SCE_CAMERA_API sceCameraGetDefectivePixelCancellation(int32_t handle, enum channel, uint32_t* pEnable, void* pOption)",
  "sceCameraGetDeviceInfo": "int SCE_CAMERA_API sceCameraGetDeviceInfo (int32_t reserved, struct* pDeviceInfo)",
  "sceCameraGetDeviceInfoVrTraceHook": "int32_t sceCameraGetDeviceInfoVrTraceHook(int32_t reserved, SceCameraDeviceInfo *pDeviceInfo)",
  "sceCameraGetExposureGain": "int SCE_CAMERA_API sceCameraGetExposureGain(int32_t handle, enum channel, struct* pExposureGain, void* pOption)",
  "sceCameraGetFrameData": "int SCE_CAMERA_API sceCameraGetFrameData(int handle, struct* pFrameData)",
  "sceCameraGetFrameDataVrTraceHook": "int32_t sceCameraGetFrameDataVrTraceHook(int32_t handle, SceCameraFrameData *pFrameData)",
  "sceCameraGetGamma": "int SCE_CAMERA_API sceCameraGetGamma(int32_t handle, enum channel, struct* pGamma, void* pOption)",
  "sceCameraGetHue": "int SCE_CAMERA_API sceCameraGetHue(int32_t handle, enum channel, int32_t* pHue, void* pOption)",
  "sceCameraGetLensCorrection": "int SCE_CAMERA_API sceCameraGetLensCorrection(int32_t handle, enum channel, uint32_t* pEnable, void* pOption)",
  "sceCameraGetSaturation": "int SCE_CAMERA_API sceCameraGetSaturation(int32_t handle, enum channel, uint32_t* pSaturation, void* pOption)",
  "sceCameraGetSharpness": "int SCE_CAMERA_API sceCameraGetSharpness(int32_t handle, enum channel, uint32_t* pSharpness, void* pOption)",
  "sceCameraGetWhiteBalance": "int SCE_CAMERA_API sceCameraGetWhiteBalance(int32_t handle, enum channel, struct* pWhiteBalance, void* pOption)",
  "sceCameraIsAttached": "int SCE_CAMERA_API sceCameraIsAttached(int32_t index)",
  "sceCameraIsAttachedVrTraceHook": "int32_t sceCameraIsAttachedVrTraceHook(int32_t index)",
  "sceCameraIsValidFrameData": "int SCE_CAMERA_API sceCameraIsValidFrameData(int handle, struct *pFrameData)",
  "sceCameraIsValidFrameDataVrTraceHook": "int32_t sceCameraIsValidFrameDataVrTraceHook(int32_t handle, SceCameraFrameData *pFrameData)",
  "sceCameraOpen": "int SCE_CAMERA_API sceCameraOpen(SceUserServiceUserId userId, int32_t type, int32_t index, struct *pParam)",
  "sceCameraOpenVrTraceHook": "int32_t sceCameraOpenVrTraceHook(SceUserServiceUserId userId, int32_t type, int32_t index, SceCameraOpenParameter *pParam)",
  "sceCameraSetAttribute": "int SCE_CAMERA_API sceCameraSetAttribute(int32_t handle, struct* pAttribute)",
  "sceCameraSetAutoExposureGain": "int SCE_CAMERA_API sceCameraSetAutoExposureGain(int32_t handle, enum channel, uint32_t enable, void* pOption)",
  "sceCameraSetAutoWhiteBalance": "int SCE_CAMERA_API sceCameraSetAutoWhiteBalance(int32_t handle, enum channel, uint32_t enable, void* pOption)",
  "sceCameraSetConfig": "int SCE_CAMERA_API sceCameraSetConfig(int32_t handle, struct *pConfig)",
  "sceCameraSetConfigVrTraceHook": "int32_t sceCameraSetConfigVrTraceHook(int32_t handle, SceCameraConfig *pConfig)",
  "sceCameraSetContrast": "int SCE_CAMERA_API sceCameraSetContrast(int32_t handle, enum channel, uint32_t contrast, void* pOption)",
  "sceCameraSetDefectivePixelCancellation": "int SCE_CAMERA_API sceCameraSetDefectivePixelCancellation(int32_t handle, enum channel, uint32_t enable, void* pOption)",
  "sceCameraSetExposureGain": "int SCE_CAMERA_API sceCameraSetExposureGain(int32_t handle, enum channel, struct* pExposureGain, void* pOption)",
  "sceCameraSetGamma": "int SCE_CAMERA_API sceCameraSetGamma(int32_t handle, enum channel, struct* pGamma, void* pOption)",
  "sceCameraSetHue": "int SCE_CAMERA_API sceCameraSetHue(int32_t handle, enum channel, int32_t hue, void* pOption)",
  "sceCameraSetLensCorrection": "int SCE_CAMERA_API sceCameraSetLensCorrection(int32_t handle, enum channel, uint32_t enable, void* pOption)",
  "sceCameraSetSaturation": "int SCE_CAMERA_API sceCameraSetSaturation(int32_t handle, enum channel, uint32_t saturation, void* pOption)",
  "sceCameraSetSharpness": "int SCE_CAMERA_API sceCameraSetSharpness(int32_t handle, enum channel, uint32_t sharpness, void* pOption)",
  "sceCameraSetVideoSync": "int SCE_CAMERA_API sceCameraSetVideoSync(int32_t handle, struct *pVideoSync)",
  "sceCameraSetVideoSyncVrTraceHook": "int32_t sceCameraSetVideoSyncVrTraceHook(int32_t handle, SceCameraVideoSyncParameter *pVideoSync)",
  "sceCameraSetWhiteBalance": "int SCE_CAMERA_API sceCameraSetWhiteBalance(int32_t handle, enum channel, struct* pWhiteBalance, void* pOption)",
  "sceCameraStart": "int SCE_CAMERA_API sceCameraStart(int32_t handle, struct *pParam)",
  "sceCameraStartVrTraceHook": "int32_t sceCameraStartVrTraceHook(int32_t handle, SceCameraStartParameter *pParam)",
  "sceCameraStop": "int SCE_CAMERA_API sceCameraStop(int32_t handle)",
  "sceCameraStopVrTraceHook": "int32_t sceCameraStopVrTraceHook(int32_t handle)",
  "sceCesBig5ToUcs2": "int sceCesBig5ToUcs2(const union*p, const uint8_t*big5Buf, uint32_t big5Max, uint32_t*big5Size, uint16_t *ucs2)",
  "sceCesBig5ToUtf16": "int sceCesBig5ToUtf16(const union*p, const uint8_t*big5Buf, uint32_t big5Max, uint32_t*big5Size, uint16_t* utf16buf, uint32_t utf16max, uint32_t*utf16Len)",
  "sceCesBig5ToUtf16be": "int sceCesBig5ToUtf16be(const union*p, const uint8_t*big5Buf, uint32_t big5Max, uint32_t*big5Size, uint16_t* utf16buf, uint32_t utf16max, uint32_t*utf16Len)",
  "sceCesBig5ToUtf16le": "int sceCesBig5ToUtf16le(const union*p, const uint8_t*big5Buf, uint32_t big5Max, uint32_t*big5Size, uint16_t* utf16buf, uint32_t utf16max, uint32_t*utf16Len)",
  "sceCesBig5ToUtf32": "int sceCesBig5ToUtf32(const union*p, const uint8_t*big5Buf, uint32_t big5Max, uint32_t*big5Size, uint32_t*utf32)",
  "sceCesBig5ToUtf32be": "int sceCesBig5ToUtf32be(const union*p, const uint8_t*big5Buf, uint32_t big5Max, uint32_t*big5Size, uint32_t*utf32be)",
  "sceCesBig5ToUtf32le": "int sceCesBig5ToUtf32le(const union*p, const uint8_t*big5Buf, uint32_t big5Max, uint32_t*big5Size, uint32_t*utf32le)",
  "sceCesBig5ToUtf8": "int sceCesBig5ToUtf8(const union*p, const uint8_t*big5Buf, uint32_t big5Max, uint32_t*big5Size, uint8_t* utf8buf, uint32_t utf8max, uint32_t*utf8Len)",
  "sceCesEucCnToUcs2": "int sceCesEucCnToUcs2(const union*p, const uint8_t*eucBuf, uint32_t eucMax, uint32_t*eucSize, uint16_t* ucs2)",
  "sceCesEucCnToUtf16": "int sceCesEucCnToUtf16(const union*p, const uint8_t*eucBuf, uint32_t eucMax, uint32_t*eucSize, uint16_t* utf16buf, uint32_t utf16max, uint32_t*utf16Len)",
  "sceCesEucCnToUtf16be": "int sceCesEucCnToUtf16be(const union*p, const uint8_t*eucBuf, uint32_t eucMax, uint32_t*eucSize, uint16_t* utf16buf, uint32_t utf16max, uint32_t*utf16Len)",
  "sceCesEucCnToUtf16le": "int sceCesEucCnToUtf16le(const union*p, const uint8_t*eucBuf, uint32_t eucMax, uint32_t*eucSize, uint16_t* utf16buf, uint32_t utf16max, uint32_t*utf16Len)",
  "sceCesEucCnToUtf32": "int sceCesEucCnToUtf32(const union*p, const uint8_t*eucBuf, uint32_t eucMax, uint32_t* eucSize, uint32_t* utf32)",
  "sceCesEucCnToUtf32be": "int sceCesEucCnToUtf32be(const union*p, const uint8_t*eucBuf, uint32_t eucMax, uint32_t*eucSize, uint32_t* utf32be)",
  "sceCesEucCnToUtf32le": "int sceCesEucCnToUtf32le(const union*p, const uint8_t*eucBuf, uint32_t eucMax, uint32_t*eucSize, uint32_t* utf32le)",
  "sceCesEucCnToUtf8": "int sceCesEucCnToUtf8(const union*p, const uint8_t*eucBuf, uint32_t eucMax, uint32_t*eucSize, uint8_t* utf8buf, uint32_t utf8max, uint32_t*utf8Len)",
  "sceCesEucCnUcsProfileSetSbcs": "int sceCesEucCnUcsProfileSetSbcs(union*p, const SceCesSbcsUcsProfile*sbcs)",
  "sceCesEucJpToUcs2": "int sceCesEucJpToUcs2(const union*p, const uint8_t*eucBuf, uint32_t eucMax, uint32_t*eucSize, uint16_t *ucs2)",
  "sceCesEucJpToUtf16": "int sceCesEucJpToUtf16(const union*p, const uint8_t*eucBuf, uint32_t eucMax, uint32_t*eucSize, uint16_t* utf16buf, uint32_t utf16max, uint32_t*utf16Len)",
  "sceCesEucJpToUtf16be": "int sceCesEucJpToUtf16be(const union*p, const uint8_t*eucBuf, uint32_t eucMax, uint32_t*eucSize, uint16_t* utf16buf, uint32_t utf16max, uint32_t*utf16Len)",
  "sceCesEucJpToUtf16le": "int sceCesEucJpToUtf16le(const union*p, const uint8_t*eucBuf, uint32_t eucMax, uint32_t*eucSize, uint16_t* utf16buf, uint32_t utf16max, uint32_t*utf16Len)",
  "sceCesEucJpToUtf32": "int sceCesEucJpToUtf32(const union*p, const uint8_t*eucBuf, uint32_t eucMax, uint32_t*eucSize, uint32_t*utf32code)",
  "sceCesEucJpToUtf32be": "int sceCesEucJpToUtf32be(const union*p, const uint8_t*eucBuf, uint32_t eucMax, uint32_t*eucSize, uint32_t*utf32be)",
  "sceCesEucJpToUtf32le": "int sceCesEucJpToUtf32le(const union*p, const uint8_t*eucBuf, uint32_t eucMax, uint32_t*eucSize, uint32_t*utf32le)",
  "sceCesEucJpToUtf8": "int sceCesEucJpToUtf8(const union*p, const uint8_t*eucBuf, uint32_t eucMax, uint32_t*eucSize, uint8_t* utf8buf, uint32_t utf8max, uint32_t*utf8Len)",
  "sceCesEucJpUcsProfileSetSbcs": "int sceCesEucJpUcsProfileSetSbcs(union*p, const SceCesSbcsUcsProfile* sbcs)",
  "sceCesEucKrToUcs2": "int sceCesEucKrToUcs2(const union*p, const uint8_t*eucBuf, uint32_t eucMax, uint32_t* eucSize, uint16_t* ucs2)",
  "sceCesEucKrToUtf16": "int sceCesEucKrToUtf16(const union*p, const uint8_t *eucBuf, uint32_t eucMax, uint32_t* eucSize, uint16_t* utf16buf, uint32_t utf16max, uint32_t* utf16Len)",
  "sceCesEucKrToUtf16be": "int sceCesEucKrToUtf16be(const union*p, const uint8_t *eucBuf, uint32_t eucMax, uint32_t* eucSize, uint16_t* utf16buf, uint32_t utf16max, uint32_t* utf16Len)",
  "sceCesEucKrToUtf16le": "int sceCesEucKrToUtf16le(const union*p, const uint8_t *eucBuf, uint32_t eucMax, uint32_t* eucSize, uint16_t* utf16buf, uint32_t utf16max, uint32_t* utf16Len)",
  "sceCesEucKrToUtf32": "int sceCesEucKrToUtf32(const union*p, const uint8_t*eucBuf, uint32_t eucMax, uint32_t* eucSize, uint32_t* utf32)",
  "sceCesEucKrToUtf32be": "int sceCesEucKrToUtf32be(const union*p, const uint8_t*eucBuf, uint32_t eucMax, uint32_t* eucSize, uint32_t* utf32be)",
  "sceCesEucKrToUtf32le": "int sceCesEucKrToUtf32le(const union*p, const uint8_t*eucBuf, uint32_t eucMax, uint32_t* eucSize, uint32_t* utf32le)",
  "sceCesEucKrToUtf8": "int sceCesEucKrToUtf8(const union*p, const uint8_t *eucBuf, uint32_t eucMax, uint32_t* eucSize, uint8_t* utf8buf, uint32_t utf8max, uint32_t* utf8Len)",
  "sceCesEucKrUcsProfileSetSbcs": "int sceCesEucKrUcsProfileSetSbcs(union*p, const SceCesSbcsUcsProfile* sbcs)",
  "sceCesGbToUcs2": "int sceCesGbToUcs2(const union*p, const uint8_t *gbBuf, uint32_t gbMax, uint32_t*gbSize, uint16_t *ucs2)",
  "sceCesGbToUtf16": "int sceCesGbToUtf16(const union*p, const uint8_t *gbBuf, uint32_t gbMax, uint32_t*gbSize, uint16_t* utf16buf, uint32_t utf16max, uint32_t* utf16Len)",
  "sceCesGbToUtf16be": "int sceCesGbToUtf16be(const union*p, const uint8_t *gbBuf, uint32_t gbMax, uint32_t*gbSize, uint16_t* utf16buf, uint32_t utf16max, uint32_t* utf16Len)",
  "sceCesGbToUtf16le": "int sceCesGbToUtf16le(const union*p, const uint8_t *gbBuf, uint32_t gbMax, uint32_t*gbSize, uint16_t* utf16buf, uint32_t utf16max, uint32_t* utf16Len)",
  "sceCesGbToUtf32": "int sceCesGbToUtf32(const union*p, const uint8_t *gbBuf, uint32_t gbMax, uint32_t*gbSize, uint32_t *utf32)",
  "sceCesGbToUtf32be": "int sceCesGbToUtf32be(const union*p, const uint8_t *gbBuf, uint32_t gbMax, uint32_t*gbSize, uint32_t *utf32be)",
  "sceCesGbToUtf32le": "int sceCesGbToUtf32le(const union*p, const uint8_t *gbBuf, uint32_t gbMax, uint32_t*gbSize, uint32_t *utf32le)",
  "sceCesGbToUtf8": "int sceCesGbToUtf8(const union*p, const uint8_t *gbBuf, uint32_t gbMax, uint32_t*gbSize, uint8_t* utf8buf, uint32_t utf8max, uint32_t* utf8Len)",
  "sceCesGbUcsProfileSet4ByteCharRange": "int sceCesGbUcsProfileSet4ByteCharRange(union*p, int gb4byteRange)",
  "sceCesGbUcsProfileSetSbcs": "int sceCesGbUcsProfileSetSbcs(union*p, const SceCesSbcsUcsProfile*sbcs)",
  "sceCesGbUcsProfileSetUdaMapping": "int sceCesGbUcsProfileSetUdaMapping(union*p, int udaMapping)",
  "sceCesJisGetLevel": "int sceCesJisGetLevel(uint8_t men, uint8_t ku, uint8_t ten, uint32_t* level)",
  "sceCesJisX0208ToSJisCode": "int sceCesJisX0208ToSJisCode(uint8_t ku, uint8_t ten, uint16_t* sjisCode)",
  "sceCesJisX0213ToSJisCode": "int sceCesJisX0213ToSJisCode(uint8_t men, uint8_t ku, uint8_t ten, uint16_t* sjisCode)",
  "sceCesJiscsToUcs": "int sceCesJiscsToUcs(const union* prof, uint32_t jcode, uint32_t *ucode)",
  "sceCesMbcToUcs2": "int sceCesMbcToUcs2(const union*p, const uint8_t *mbcBuf, uint32_t mbcMax, uint32_t*mbcLen, uint16_t *ucs2)",
  "sceCesMbcToUtf16": "int sceCesMbcToUtf16(const union*p, const uint8_t *mbcBuf, uint32_t mbcMax, uint32_t*mbcLen, uint16_t* utf16buf, uint32_t utf16max, uint32_t* utf16Len)",
  "sceCesMbcToUtf16be": "int sceCesMbcToUtf16be(const union*p, const uint8_t *mbcBuf, uint32_t mbcMax, uint32_t*mbcLen, uint16_t* utf16buf, uint32_t utf16max, uint32_t* utf16Len)",
  "sceCesMbcToUtf16le": "int sceCesMbcToUtf16le(const union*p, const uint8_t *mbcBuf, uint32_t mbcMax, uint32_t*mbcLen, uint16_t* utf16buf, uint32_t utf16max, uint32_t* utf16Len)",
  "sceCesMbcToUtf32": "int sceCesMbcToUtf32(const union*p, const uint8_t *mbcBuf, uint32_t mbcMax, uint32_t*mbcLen, uint32_t *utf32code)",
  "sceCesMbcToUtf32be": "int sceCesMbcToUtf32be(const union*p, const uint8_t *mbcBuf, uint32_t mbcMax, uint32_t*mbcLen, uint32_t *utf32code)",
  "sceCesMbcToUtf32le": "int sceCesMbcToUtf32le(const union*p, const uint8_t *mbcBuf, uint32_t mbcMax, uint32_t*mbcLen, uint32_t *utf32code)",
  "sceCesMbcToUtf8": "int sceCesMbcToUtf8(const union*p, const uint8_t *mbcBuf, uint32_t mbcMax, uint32_t*mbcLen, uint8_t* utf8buf, uint32_t utf8max, uint32_t* utf8Len)",
  "sceCesMbcsStrGetUcs2Len": "int sceCesMbcsStrGetUcs2Len(union* context, const uint8_t* mbcsStr, uint32_t mbcsMax, uint32_t*mbcsLen, uint32_t*ucs2Len)",
  "sceCesMbcsStrGetUtf16Len": "int sceCesMbcsStrGetUtf16Len(union* context, const uint8_t* mbcsStr, uint32_t mbcsMax, uint32_t*mbcsLen, uint32_t*utf16Len)",
  "sceCesMbcsStrGetUtf32Len": "int sceCesMbcsStrGetUtf32Len(union* context, const uint8_t* mbcsStr, uint32_t mbcsMax, uint32_t*mbcsLen, uint32_t*utf32Len)",
  "sceCesMbcsStrGetUtf8Len": "int sceCesMbcsStrGetUtf8Len(union* context, const uint8_t* mbcsStr, uint32_t mbcsMax, uint32_t*mbcsLen, uint32_t*utf8Len)",
  "sceCesMbcsStrToUcs2Str": "int sceCesMbcsStrToUcs2Str(union* context, const uint8_t *mbcsStr, uint32_t mbcsMax, uint32_t*mbcsSize, uint16_t *ucs2buf, uint32_t ucs2max, uint32_t*ucs2Len)",
  "sceCesMbcsStrToUtf16Str": "int sceCesMbcsStrToUtf16Str(union* context, const uint8_t* mbcsStr , uint32_t mbcsMax , uint32_t*mbcsLen, uint16_t* utf16buf, uint32_t utf16max, uint32_t*utf16Len)",
  "sceCesMbcsStrToUtf32Str": "int sceCesMbcsStrToUtf32Str(union* context, const uint8_t* mbcsStr, uint32_t mbcsMax, uint32_t*mbcsLen, uint32_t* utf32buf, uint32_t utf32max, uint32_t*utf32Len)",
  "sceCesMbcsStrToUtf8Str": "int sceCesMbcsStrToUtf8Str(union* context, const uint8_t* mbcsStr, uint32_t mbcsMax, uint32_t*mbcsLen, uint8_t* utf8buf, uint32_t utf8max, uint32_t*utf8Len)",
  "sceCesMbcsUcsContextInit": "int sceCesMbcsUcsContextInit(union* context, const union* mbcsUcsPrf)",
  "sceCesMbcsUcsContextInitCopy": "int sceCesMbcsUcsContextInitCopy(union* context, const union* context0)",
  "sceCesMbcsUcsSetMbcsReplacementCharCode": "int sceCesMbcsUcsSetMbcsReplacementCharCode(union* context, uint32_t code)",
  "sceCesMbcsUcsSetMbcsReplacementCharUCode": "int sceCesMbcsUcsSetMbcsReplacementCharUCode(union* context, uint32_t ucode)",
  "sceCesRefersUcsProfileAscii": "const struct* sceCesRefersUcsProfileAscii(void)",
  "sceCesRefersUcsProfileAsciiWithKatakana": "const struct* sceCesRefersUcsProfileAsciiWithKatakana(void)",
  "sceCesRefersUcsProfileBs4730": "const struct* sceCesRefersUcsProfileBs4730(void)",
  "sceCesRefersUcsProfileCp1250": "const struct* sceCesRefersUcsProfileCp1250(void)",
  "sceCesRefersUcsProfileCp1251": "const struct* sceCesRefersUcsProfileCp1251(void)",
  "sceCesRefersUcsProfileCp1252": "const struct* sceCesRefersUcsProfileCp1252(void)",
  "sceCesRefersUcsProfileCp1253": "const struct* sceCesRefersUcsProfileCp1253(void)",
  "sceCesRefersUcsProfileCp1254": "const struct* sceCesRefersUcsProfileCp1254(void)",
  "sceCesRefersUcsProfileCp1255": "const struct* sceCesRefersUcsProfileCp1255(void)",
  "sceCesRefersUcsProfileCp1256": "const struct* sceCesRefersUcsProfileCp1256(void)",
  "sceCesRefersUcsProfileCp1257": "const struct* sceCesRefersUcsProfileCp1257(void)",
  "sceCesRefersUcsProfileCp1258": "const struct* sceCesRefersUcsProfileCp1258(void)",
  "sceCesRefersUcsProfileCp437": "const struct* sceCesRefersUcsProfileCp437(void)",
  "sceCesRefersUcsProfileCp737": "const struct* sceCesRefersUcsProfileCp737(void)",
  "sceCesRefersUcsProfileCp775": "const struct* sceCesRefersUcsProfileCp775(void)",
  "sceCesRefersUcsProfileCp850": "const struct* sceCesRefersUcsProfileCp850(void)",
  "sceCesRefersUcsProfileCp852": "const struct* sceCesRefersUcsProfileCp852(void)",
  "sceCesRefersUcsProfileCp855": "const struct* sceCesRefersUcsProfileCp855(void)",
  "sceCesRefersUcsProfileCp857": "const struct* sceCesRefersUcsProfileCp857(void)",
  "sceCesRefersUcsProfileCp858": "const struct* sceCesRefersUcsProfileCp858(void)",
  "sceCesRefersUcsProfileCp860": "const struct* sceCesRefersUcsProfileCp860(void)",
  "sceCesRefersUcsProfileCp861": "const struct* sceCesRefersUcsProfileCp861(void)",
  "sceCesRefersUcsProfileCp862": "const struct* sceCesRefersUcsProfileCp862(void)",
  "sceCesRefersUcsProfileCp863": "const struct* sceCesRefersUcsProfileCp863(void)",
  "sceCesRefersUcsProfileCp864": "const struct* sceCesRefersUcsProfileCp864(void)",
  "sceCesRefersUcsProfileCp865": "const struct* sceCesRefersUcsProfileCp865(void)",
  "sceCesRefersUcsProfileCp866": "const struct* sceCesRefersUcsProfileCp866(void)",
  "sceCesRefersUcsProfileCp869": "const struct* sceCesRefersUcsProfileCp869(void)",
  "sceCesRefersUcsProfileCp874": "const struct* sceCesRefersUcsProfileCp874(void)",
  "sceCesRefersUcsProfileGbT1988": "const struct* sceCesRefersUcsProfileGbT1988(void)",
  "sceCesRefersUcsProfileGbT1988Tilde0x7e": "const struct* sceCesRefersUcsProfileGbT1988Tilde0x7e(void)",
  "sceCesRefersUcsProfileIso8859_1": "const struct* sceCesRefersUcsProfileIso8859_1(void)",
  "sceCesRefersUcsProfileIso8859_10": "const struct* sceCesRefersUcsProfileIso8859_10(void)",
  "sceCesRefersUcsProfileIso8859_11": "const struct* sceCesRefersUcsProfileIso8859_11(void)",
  "sceCesRefersUcsProfileIso8859_13": "const struct* sceCesRefersUcsProfileIso8859_13(void)",
  "sceCesRefersUcsProfileIso8859_14": "const struct* sceCesRefersUcsProfileIso8859_14(void)",
  "sceCesRefersUcsProfileIso8859_15": "const struct* sceCesRefersUcsProfileIso8859_15(void)",
  "sceCesRefersUcsProfileIso8859_16": "const struct* sceCesRefersUcsProfileIso8859_16(void)",
  "sceCesRefersUcsProfileIso8859_2": "const struct* sceCesRefersUcsProfileIso8859_2(void)",
  "sceCesRefersUcsProfileIso8859_3": "const struct* sceCesRefersUcsProfileIso8859_3(void)",
  "sceCesRefersUcsProfileIso8859_4": "const struct* sceCesRefersUcsProfileIso8859_4(void)",
  "sceCesRefersUcsProfileIso8859_5": "const struct* sceCesRefersUcsProfileIso8859_5(void)",
  "sceCesRefersUcsProfileIso8859_6": "const struct* sceCesRefersUcsProfileIso8859_6(void)",
  "sceCesRefersUcsProfileIso8859_7": "const struct* sceCesRefersUcsProfileIso8859_7(void)",
  "sceCesRefersUcsProfileIso8859_8": "const struct* sceCesRefersUcsProfileIso8859_8(void)",
  "sceCesRefersUcsProfileIso8859_9": "const struct* sceCesRefersUcsProfileIso8859_9(void)",
  "sceCesRefersUcsProfileJisX0201": "const struct* sceCesRefersUcsProfileJisX0201(void)",
  "sceCesRefersUcsProfileJisX0201Katakana": "const struct* sceCesRefersUcsProfileJisX0201Katakana(void)",
  "sceCesRefersUcsProfileJisX0201Roman": "const struct* sceCesRefersUcsProfileJisX0201Roman(void)",
  "sceCesRefersUcsProfileJisX0201RomanTilde0x7e": "const struct* sceCesRefersUcsProfileJisX0201RomanTilde0x7e(void)",
  "sceCesRefersUcsProfileJisX0201Tilde0x7e": "const struct* sceCesRefersUcsProfileJisX0201Tilde0x7e(void)",
  "sceCesRefersUcsProfileKoi8R": "const struct* sceCesRefersUcsProfileKoi8R(void)",
  "sceCesRefersUcsProfileKoi8U": "const struct* sceCesRefersUcsProfileKoi8U(void)",
  "sceCesRefersUcsProfileKsX1003": "const struct* sceCesRefersUcsProfileKsX1003(void)",
  "sceCesRefersUcsProfileKsX1003Tilde0x7e": "const struct* sceCesRefersUcsProfileKsX1003Tilde0x7e(void)",
  "sceCesSJisCodeToJisX0208": "int sceCesSJisCodeToJisX0208(uint16_t sjisCode, uint8_t* ku, uint8_t* ten)",
  "sceCesSJisCodeToJisX0213": "int sceCesSJisCodeToJisX0213(uint16_t sjisCode, uint8_t* men, uint8_t* ku, uint8_t* ten)",
  "sceCesSJisGetCode": "int sceCesSJisGetCode(const uint8_t* sjisBuf, uint32_t sjisMax, uint32_t *sjisSize, uint16_t* sjisCode)",
  "sceCesSJisPutCode": "int sceCesSJisPutCode(uint16_t sjisCode, uint8_t* sjisBuf, uint32_t sjisMax, uint32_t* sjisSize)",
  "sceCesSJisToUcs2": "int sceCesSJisToUcs2(const union*p, const uint8_t*sjisBuf, uint32_t sjisMax, uint32_t*sjisSize, uint16_t *ucs2)",
  "sceCesSJisToUtf16": "int sceCesSJisToUtf16(const union*p, const uint8_t*sjisBuf, uint32_t sjisMax, uint32_t*sjisSize, uint16_t* utf16buf, uint32_t utf16max, uint32_t* utf16Len)",
  "sceCesSJisToUtf16be": "int sceCesSJisToUtf16be(const union*p, const uint8_t*sjisBuf, uint32_t sjisMax, uint32_t*sjisSize, uint16_t* utf16buf, uint32_t utf16max, uint32_t* utf16Len)",
  "sceCesSJisToUtf16le": "int sceCesSJisToUtf16le(const union*p, const uint8_t*sjisBuf, uint32_t sjisMax, uint32_t*sjisSize, uint16_t* utf16buf, uint32_t utf16max, uint32_t* utf16Len)",
  "sceCesSJisToUtf32": "int sceCesSJisToUtf32(const union*p, const uint8_t*sjisBuf, uint32_t sjisMax, uint32_t*sjisSize, uint32_t*utf32code)",
  "sceCesSJisToUtf32be": "int sceCesSJisToUtf32be(const union*p, const uint8_t*sjisBuf, uint32_t sjisMax, uint32_t*sjisSize, uint32_t*utf32be)",
  "sceCesSJisToUtf32le": "int sceCesSJisToUtf32le(const union*p, const uint8_t*sjisBuf, uint32_t sjisMax, uint32_t*sjisSize, uint32_t*utf32le)",
  "sceCesSJisToUtf8": "int sceCesSJisToUtf8(const union*p, const uint8_t*sjisBuf, uint32_t sjisMax, uint32_t*sjisSize, uint8_t* utf8buf, uint32_t utf8max, uint32_t* utf8Len)",
  "sceCesSJisUcsProfileSetSbcs": "int sceCesSJisUcsProfileSetSbcs(union*p, const SceCesSbcsUcsProfile* sbcs)",
  "sceCesSbcToUcs2": "int sceCesSbcToUcs2(const struct*p, uint8_t sbc, uint16_t* ucs2)",
  "sceCesSbcToUtf16": "int sceCesSbcToUtf16(const struct*p, uint8_t sbc, uint16_t* utf16, uint32_t utf16max, uint32_t*utf16Len)",
  "sceCesSbcToUtf16be": "int sceCesSbcToUtf16be(const struct*p, uint8_t sbc, uint16_t* utf16be, uint32_t utf16max, uint32_t*utf16Len)",
  "sceCesSbcToUtf16le": "int sceCesSbcToUtf16le(const struct*p, uint8_t sbc, uint16_t* utf16le, uint32_t utf16max, uint32_t*utf16Len)",
  "sceCesSbcToUtf32": "int sceCesSbcToUtf32(const struct*p, uint8_t sbc, uint32_t* utf32)",
  "sceCesSbcToUtf32be": "int sceCesSbcToUtf32be(const struct*p, uint8_t sbc, uint32_t* utf32be)",
  "sceCesSbcToUtf32le": "int sceCesSbcToUtf32le(const struct*p, uint8_t sbc, uint32_t* utf32le)",
  "sceCesSbcToUtf8": "int sceCesSbcToUtf8(const struct*p, uint8_t sbc, uint8_t* utf8buf, uint32_t utf8max, uint32_t* utf8Len)",
  "sceCesSetErrorOperation": "int sceCesSetErrorOperation(struct* context, int errorType, int errorOperation)",
  "sceCesSetReplacementCharUCode": "int sceCesSetReplacementCharUCode(union* uctx, uint32_t ucode)",
  "sceCesSetStrBegin": "int sceCesSetStrBegin(struct* context)",
  "sceCesSetStrContinue": "int sceCesSetStrContinue(struct* context)",
  "sceCesSetStrEnd": "int sceCesSetStrEnd(struct* context)",
  "sceCesSetStrLast": "int sceCesSetStrLast(struct* context)",
  "sceCesSetStrMaxCharCount": "int sceCesSetStrMaxCharCount(struct* context, uint32_t srcMax, uint32_t dstMax)",
  "sceCesUcs2CheckCode": "int sceCesUcs2CheckCode(uint16_t ucs2)",
  "sceCesUcs2StrGetCopyLen": "int sceCesUcs2StrGetCopyLen(union* uctx, const uint16_t* utf16str, uint32_t utf16max, uint32_t*utf16Len, uint32_t*copyLen)",
  "sceCesUcs2StrGetMbcsLen": "int sceCesUcs2StrGetMbcsLen(union* context, const uint16_t* ucs2str, uint32_t ucs2max, uint32_t*ucs2Len, uint32_t*mbcsLen)",
  "sceCesUcs2StrGetUtf16Len": "int sceCesUcs2StrGetUtf16Len(union* uctx, const uint16_t* ucs2str, uint32_t ucs2max, uint32_t* ucs2Len, uint32_t* utf16Len)",
  "sceCesUcs2StrGetUtf32Len": "int sceCesUcs2StrGetUtf32Len(union* uctx, const uint16_t* ucs2str, uint32_t ucs2max, uint32_t* ucs2Len, uint32_t* utf32Len)",
  "sceCesUcs2StrGetUtf8Len": "int sceCesUcs2StrGetUtf8Len(union* uctx, const uint16_t* ucs2str, uint32_t ucs2max, uint32_t* ucs2Len, uint32_t* utf8len)",
  "sceCesUcs2StrToCopyStr": "int sceCesUcs2StrToCopyStr(union* uctx, const uint16_t* utf16str, uint32_t utf16max, uint32_t*utf16Len, uint16_t* copyStr , uint32_t copyMax , uint32_t*copyLen)",
  "sceCesUcs2StrToMbcsStr": "int sceCesUcs2StrToMbcsStr(union* context, const uint16_t* ucs2str, uint32_t ucs2max, uint32_t*ucs2Len, uint8_t* mbcsBuf, uint32_t mbcsMax, uint32_t*mbcsLen)",
  "sceCesUcs2StrToUtf16Str": "int sceCesUcs2StrToUtf16Str(union* uctx, const uint16_t* ucs2str, uint32_t ucs2max, uint32_t*ucs2Len, uint16_t* utf16buf, uint32_t utf16max, uint32_t*utf16Len)",
  "sceCesUcs2StrToUtf32Str": "int sceCesUcs2StrToUtf32Str(union* uctx, const uint16_t* ucs2str, uint32_t ucs2max, uint32_t*ucs2Len, uint32_t* utf32buf, uint32_t utf32max, uint32_t*utf32Len)",
  "sceCesUcs2StrToUtf8Str": "int sceCesUcs2StrToUtf8Str(union* uctx, const uint16_t* ucs2str, uint32_t ucs2max, uint32_t* ucs2Len, uint8_t* utf8buf, uint32_t utf8max, uint32_t* utf8Len)",
  "sceCesUcs2ToBig5": "int sceCesUcs2ToBig5(uint16_t ucs2, const union*p, uint8_t*big5Buf, uint32_t big5Max, uint32_t*big5Size)",
  "sceCesUcs2ToEucCn": "int sceCesUcs2ToEucCn(uint16_t ucs2, const union*p, uint8_t*eucBuf, uint32_t eucMax, uint32_t*eucSize)",
  "sceCesUcs2ToEucJp": "int sceCesUcs2ToEucJp(uint16_t ucs2, const union*p, uint8_t*eucBuf, uint32_t eucMax, uint32_t*eucSize)",
  "sceCesUcs2ToEucKr": "int sceCesUcs2ToEucKr(uint16_t ucs2, const union*p, uint8_t*eucBuf, uint32_t eucMax, uint32_t*eucSize)",
  "sceCesUcs2ToGb": "int sceCesUcs2ToGb(uint16_t ucs2, const union*p, uint8_t*gbBuf, uint32_t gbMax, uint32_t* gbSize)",
  "sceCesUcs2ToMbc": "int sceCesUcs2ToMbc(uint16_t ucs2, const union*p, uint8_t *mbcBuf, uint32_t mbcMax, uint32_t*mbcLen)",
  "sceCesUcs2ToSJis": "int sceCesUcs2ToSJis(uint16_t ucs2, const union*p, uint8_t*sjisBuf, uint32_t sjisMax, uint32_t*sjisSize)",
  "sceCesUcs2ToSbc": "int sceCesUcs2ToSbc(uint16_t ucs2, const struct*p, uint8_t*sbc)",
  "sceCesUcs2ToUhc": "int sceCesUcs2ToUhc(uint16_t ucs2, const union*p, uint8_t*uhcBuf, uint32_t uhcMax, uint32_t*uhcSize)",
  "sceCesUcs2ToUtf16": "int sceCesUcs2ToUtf16(uint16_t ucs2, uint16_t* utf16buf, uint32_t utf16max, uint32_t*utf16Len)",
  "sceCesUcs2ToUtf16be": "int sceCesUcs2ToUtf16be(uint16_t ucs2, uint16_t* utf16buf, uint32_t utf16max, uint32_t*utf16Len)",
  "sceCesUcs2ToUtf16le": "int sceCesUcs2ToUtf16le(uint16_t ucs2, uint16_t* utf16buf, uint32_t utf16max, uint32_t*utf16Len)",
  "sceCesUcs2ToUtf32": "int sceCesUcs2ToUtf32(uint16_t ucs2, uint32_t*utf32)",
  "sceCesUcs2ToUtf32be": "int sceCesUcs2ToUtf32be(uint16_t ucs2, uint32_t*utf32be)",
  "sceCesUcs2ToUtf32le": "int sceCesUcs2ToUtf32le(uint16_t ucs2, uint32_t*utf32le)",
  "sceCesUcs2ToUtf8": "int sceCesUcs2ToUtf8(uint16_t ucs2, uint8_t* utf8buf, uint32_t utf8max, uint32_t*utf8Len)",
  "sceCesUcsContextInit": "int sceCesUcsContextInit(union* uctx)",
  "sceCesUcsContextInitCopy": "int sceCesUcsContextInitCopy(union* uctx, const union* uctx0)",
  "sceCesUcsProfileInitBig5Cp950": "union* sceCesUcsProfileInitBig5Cp950(SceCesUcsProfileSheet* sheet)",
  "sceCesUcsProfileInitEucCnGb2312": "union* sceCesUcsProfileInitEucCnGb2312(SceCesUcsProfileSheet*sbcs)",
  "sceCesUcsProfileInitEucJis2004": "union* sceCesUcsProfileInitEucJis2004(SceCesUcsProfileSheet* sheet)",
  "sceCesUcsProfileInitEucJpCp51932": "union* sceCesUcsProfileInitEucJpCp51932(SceCesUcsProfileSheet* sheet)",
  "sceCesUcsProfileInitEucJpX0208": "union* sceCesUcsProfileInitEucJpX0208(SceCesUcsProfileSheet* sheet)",
  "sceCesUcsProfileInitEucJpX0208Ss2": "union* sceCesUcsProfileInitEucJpX0208Ss2(SceCesUcsProfileSheet* sheet)",
  "sceCesUcsProfileInitEucJpX0208Ss2Ss3": "union* sceCesUcsProfileInitEucJpX0208Ss2Ss3(SceCesUcsProfileSheet* sheet)",
  "sceCesUcsProfileInitEucKr": "union* sceCesUcsProfileInitEucKr(SceCesUcsProfileSheet* sheet)",
  "sceCesUcsProfileInitGb18030_2000": "union* sceCesUcsProfileInitGb18030_2000(SceCesUcsProfileSheet* sheet)",
  "sceCesUcsProfileInitGb18030_2005": "union* sceCesUcsProfileInitGb18030_2005(SceCesUcsProfileSheet* sheet)",
  "sceCesUcsProfileInitGbkCp936": "union* sceCesUcsProfileInitGbkCp936(SceCesUcsProfileSheet* sheet)",
  "sceCesUcsProfileInitSJis1997Cp932": "union* sceCesUcsProfileInitSJis1997Cp932(SceCesUcsProfileSheet* sheet)",
  "sceCesUcsProfileInitSJis1997X0208": "union* sceCesUcsProfileInitSJis1997X0208(SceCesUcsProfileSheet* sheet)",
  "sceCesUcsProfileInitSJis2004X0213": "union* sceCesUcsProfileInitSJis2004X0213(SceCesUcsProfileSheet* sheet)",
  "sceCesUcsProfileInitUhc": "union* sceCesUcsProfileInitUhc(SceCesUcsProfileSheet* sheet)",
  "sceCesUcsSetPolicyDetectBom": "int sceCesUcsSetPolicyDetectBom(union* uctx, int f)",
  "sceCesUcsSetPolicyOutputBom": "int sceCesUcsSetPolicyOutputBom(union* uctx, int f)",
  "sceCesUcsSetReplacementCharCode": "int sceCesUcsSetReplacementCharCode(union* uctx, uint32_t ucode)",
  "sceCesUcsSetUtf16StrEndian": "int sceCesUcsSetUtf16StrEndian(union* uctx, enum srcEndian, enum dstEndian)",
  "sceCesUcsSetUtf32StrEndian": "int sceCesUcsSetUtf32StrEndian(union* uctx, enum srcEndian, enum dstEndian)",
  "sceCesUcsStrConvertEncoding": "int sceCesUcsStrConvertEncoding(union* uctx, int srcEncode, const void* srcStr, uint32_t srcMax, uint32_t* srcSize, int dstEncode, void* dstBuf, uint32_t dstMax, uint32_t* dstSize)",
  "sceCesUcsStrGetEncodingSize": "int sceCesUcsStrGetEncodingSize(union* uctx, int srcEncode, const void* srcStr, uint32_t srcMax, uint32_t* srcSize, int dstEncode, uint32_t *dstSize)",
  "sceCesUcsToJiscs": "int sceCesUcsToJiscs(uint32_t ucode, const union* prof, uint32_t *jcode)",
  "sceCesUhcToUcs2": "int sceCesUhcToUcs2(const union*p, const uint8_t*uhcBuf, uint32_t uhcMax, uint32_t*uhcSize, uint16_t* ucs2)",
  "sceCesUhcToUtf16": "int sceCesUhcToUtf16(const union*p, const uint8_t*uhcBuf, uint32_t uhcMax, uint32_t*uhcSize, uint16_t* utf16buf, uint32_t utf16max, uint32_t* utf16Len)",
  "sceCesUhcToUtf16be": "int sceCesUhcToUtf16be(const union*p, const uint8_t*uhcBuf, uint32_t uhcMax, uint32_t*uhcSize, uint16_t* utf16buf, uint32_t utf16max, uint32_t* utf16Len)",
  "sceCesUhcToUtf16le": "int sceCesUhcToUtf16le(const union*p, const uint8_t*uhcBuf, uint32_t uhcMax, uint32_t*uhcSize, uint16_t* utf16buf, uint32_t utf16max, uint32_t* utf16Len)",
  "sceCesUhcToUtf32": "int sceCesUhcToUtf32(const union*p, const uint8_t*uhcBuf, uint32_t uhcMax, uint32_t*uhcSize, uint32_t* utf32)",
  "sceCesUhcToUtf32be": "int sceCesUhcToUtf32be(const union*p, const uint8_t*uhcBuf, uint32_t uhcMax, uint32_t*uhcSize, uint32_t* utf32be)",
  "sceCesUhcToUtf32le": "int sceCesUhcToUtf32le(const union*p, const uint8_t*uhcBuf, uint32_t uhcMax, uint32_t*uhcSize, uint32_t* utf32le)",
  "sceCesUhcToUtf8": "int sceCesUhcToUtf8(const union*p, const uint8_t*uhcBuf, uint32_t uhcMax, uint32_t*uhcSize, uint8_t* utf8buf, uint32_t utf8max, uint32_t* utf8Len)",
  "sceCesUhcUcsProfileSetSbcs": "int sceCesUhcUcsProfileSetSbcs(union*p, const SceCesSbcsUcsProfile* sbcs)",
  "sceCesUnsetErrorOperation": "int sceCesUnsetErrorOperation(struct* context)",
  "sceCesUtf16CheckCode": "int sceCesUtf16CheckCode(const uint16_t* utf16addr, uint32_t utf16max, uint32_t* utf16Len)",
  "sceCesUtf16StrGetCopyLen": "int sceCesUtf16StrGetCopyLen(union* uctx, const uint16_t* utf16str, uint32_t utf16max, uint32_t*utf16Len, uint32_t*copyLen)",
  "sceCesUtf16StrGetMbcsLen": "int sceCesUtf16StrGetMbcsLen(union* context, const uint16_t* utf16str, uint32_t utf16max, uint32_t*utf16Len, uint32_t*mbcsLen)",
  "sceCesUtf16StrGetUcs2Len": "int sceCesUtf16StrGetUcs2Len(union* uctx, const uint16_t* utf16str, uint32_t utf16max, uint32_t*utf16Len, uint32_t*ucs2Len)",
  "sceCesUtf16StrGetUtf32Len": "int sceCesUtf16StrGetUtf32Len(union* uctx, const uint16_t* utf16str, uint32_t utf16max, uint32_t*utf16Len, uint32_t*utf32Len)",
  "sceCesUtf16StrGetUtf8Len": "int sceCesUtf16StrGetUtf8Len(union* uctx, const uint16_t* utf16str, uint32_t utf16max, uint32_t* utf16Len, uint32_t* utf8Len)",
  "sceCesUtf16StrToCopyStr": "int sceCesUtf16StrToCopyStr(union* uctx, const uint16_t* utf16str, uint32_t utf16max, uint32_t*utf16Len, uint16_t* copyStr , uint32_t copyMax , uint32_t*copyLen)",
  "sceCesUtf16StrToMbcsStr": "int sceCesUtf16StrToMbcsStr(union* context, const uint16_t* utf16str, uint32_t utf16max, uint32_t*utf16Len, uint8_t* mbcsBuf , uint32_t mbcsMax , uint32_t*mbcsLen)",
  "sceCesUtf16StrToUcs2Str": "int sceCesUtf16StrToUcs2Str(union* uctx, const uint16_t* utf16str, uint32_t utf16max, uint32_t*utf16Len, uint16_t* ucs2buf, uint32_t ucs2max, uint32_t*ucs2Len)",
  "sceCesUtf16StrToUtf32Str": "int sceCesUtf16StrToUtf32Str(union* uctx, const uint16_t* utf16str, uint32_t utf16max, uint32_t*utf16Len, uint32_t* utf32buf, uint32_t utf32max, uint32_t*utf32Len)",
  "sceCesUtf16StrToUtf8Str": "int sceCesUtf16StrToUtf8Str(union* uctx, const uint16_t* utf16str, uint32_t utf16max, uint32_t* utf16Len, uint8_t* utf8buf, uint32_t utf8max , uint32_t* utf8Len)",
  "sceCesUtf16ToBig5": "int sceCesUtf16ToBig5(const uint16_t* utf16buf, uint32_t utf16max, uint32_t*utf16Len, const union*p, uint8_t*big5Buf, uint32_t big5Max, uint32_t*big5Size)",
  "sceCesUtf16ToEucCn": "int sceCesUtf16ToEucCn(const uint16_t* utf16buf, uint32_t utf16max, uint32_t*utf16Len, const union*p, uint8_t*eucBuf, uint32_t eucMax, uint32_t*eucSize)",
  "sceCesUtf16ToEucJp": "int sceCesUtf16ToEucJp(const uint16_t* utf16buf, uint32_t utf16max, uint32_t*utf16Len, const union*p, uint8_t*eucBuf, uint32_t eucMax, uint32_t*eucSize)",
  "sceCesUtf16ToEucKr": "int sceCesUtf16ToEucKr(const uint16_t* utf16buf, uint32_t utf16max, uint32_t* utf16Len, const union*p, uint8_t*eucBuf, uint32_t eucMax, uint32_t*eucSize)",
  "sceCesUtf16ToGb": "int sceCesUtf16ToGb(const uint16_t* utf16buf, uint32_t utf16max, uint32_t* utf16Len, const union*p, uint8_t *gbBuf, uint32_t gbMax, uint32_t*gbSize)",
  "sceCesUtf16ToMbc": "int sceCesUtf16ToMbc(const uint16_t* utf16buf, uint32_t utf16max, uint32_t* utf16Len, const union*p, uint8_t *mbcBuf, uint32_t mbcMax, uint32_t*mbcLen)",
  "sceCesUtf16ToSJis": "int sceCesUtf16ToSJis(const uint16_t* utf16buf, uint32_t utf16max, uint32_t* utf16Len, const union*p, uint8_t*sjisBuf, uint32_t sjisMax, uint32_t*sjisSize)",
  "sceCesUtf16ToSbc": "int sceCesUtf16ToSbc(const uint16_t* utf16, uint32_t utf16max, uint32_t* utf16Len, const struct*p, uint8_t*sbc)",
  "sceCesUtf16ToUcs2": "int sceCesUtf16ToUcs2(const uint16_t* utf16buf, uint32_t utf16max, uint32_t*utf16Len, uint16_t*ucs2)",
  "sceCesUtf16ToUhc": "int sceCesUtf16ToUhc(const uint16_t* utf16buf, uint32_t utf16max, uint32_t* utf16Len, const union*p, uint8_t*uhcBuf, uint32_t uhcMax, uint32_t*uhcSize)",
  "sceCesUtf16ToUtf32": "int sceCesUtf16ToUtf32(const uint16_t* utf16buf, uint32_t utf16max, uint32_t*utf16Len, uint32_t*utf32)",
  "sceCesUtf16ToUtf32be": "int sceCesUtf16ToUtf32be(const uint16_t* utf16buf, uint32_t utf16max, uint32_t*utf16Len, uint32_t*utf32be)",
  "sceCesUtf16ToUtf32le": "int sceCesUtf16ToUtf32le(const uint16_t* utf16buf, uint32_t utf16max, uint32_t*utf16Len, uint32_t*utf32le)",
  "sceCesUtf16ToUtf8": "int sceCesUtf16ToUtf8(const uint16_t* utf16buf, uint32_t utf16max, uint32_t*utf16Len, uint8_t* utf8buf , uint32_t utf8max , uint32_t*utf8Len)",
  "sceCesUtf16beCheckCode": "int sceCesUtf16beCheckCode(const uint16_t* utf16be, uint32_t utf16max, uint32_t* utf16Len)",
  "sceCesUtf16beToBig5": "int sceCesUtf16beToBig5(const uint16_t* utf16buf, uint32_t utf16max, uint32_t*utf16Len, const union*p, uint8_t*big5Buf, uint32_t big5Max, uint32_t*big5Size)",
  "sceCesUtf16beToEucCn": "int sceCesUtf16beToEucCn(const uint16_t* utf16buf, uint32_t utf16max, uint32_t*utf16Len, const union*p, uint8_t*eucBuf, uint32_t eucMax, uint32_t*eucSize)",
  "sceCesUtf16beToEucJp": "int sceCesUtf16beToEucJp(const uint16_t* utf16buf, uint32_t utf16max, uint32_t*utf16Len, const union*p, uint8_t*eucBuf, uint32_t eucMax, uint32_t*eucSize)",
  "sceCesUtf16beToEucKr": "int sceCesUtf16beToEucKr(const uint16_t* utf16buf, uint32_t utf16max, uint32_t* utf16Len, const union*p, uint8_t*eucBuf, uint32_t eucMax, uint32_t*eucSize)",
  "sceCesUtf16beToGb": "int sceCesUtf16beToGb(const uint16_t* utf16buf, uint32_t utf16max, uint32_t* utf16Len, const union*p, uint8_t *gbBuf, uint32_t gbMax, uint32_t*gbSize)",
  "sceCesUtf16beToMbc": "int sceCesUtf16beToMbc(const uint16_t* utf16buf, uint32_t utf16max, uint32_t* utf16Len, const union*p, uint8_t *mbcBuf, uint32_t mbcMax, uint32_t*mbcLen)",
  "sceCesUtf16beToSJis": "int sceCesUtf16beToSJis(const uint16_t* utf16buf, uint32_t utf16max, uint32_t* utf16Len, const union*p, uint8_t*sjisBuf, uint32_t sjisMax, uint32_t*sjisSize)",
  "sceCesUtf16beToSbc": "int sceCesUtf16beToSbc(const uint16_t* utf16be, uint32_t utf16max, uint32_t* utf16Len, const struct*p, uint8_t*sbc)",
  "sceCesUtf16beToUcs2": "int sceCesUtf16beToUcs2(const uint16_t* utf16buf, uint32_t utf16max, uint32_t*utf16Len, uint16_t*ucs2)",
  "sceCesUtf16beToUhc": "int sceCesUtf16beToUhc(const uint16_t* utf16buf, uint32_t utf16max, uint32_t* utf16Len, const union*p, uint8_t*uhcBuf, uint32_t uhcMax, uint32_t*uhcSize)",
  "sceCesUtf16beToUtf32": "int sceCesUtf16beToUtf32(const uint16_t* utf16buf, uint32_t utf16max, uint32_t*utf16Len, uint32_t*utf32)",
  "sceCesUtf16beToUtf32be": "int sceCesUtf16beToUtf32be(const uint16_t* utf16buf, uint32_t utf16max, uint32_t*utf16Len, uint32_t*utf32be)",
  "sceCesUtf16beToUtf32le": "int sceCesUtf16beToUtf32le(const uint16_t* utf16buf, uint32_t utf16max, uint32_t*utf16Len, uint32_t*utf32le)",
  "sceCesUtf16beToUtf8": "int sceCesUtf16beToUtf8(const uint16_t* utf16buf, uint32_t utf16max, uint32_t* utf16Len, uint8_t* utf8buf , uint32_t utf8max , uint32_t* utf8Len)",
  "sceCesUtf16leCheckCode": "int sceCesUtf16leCheckCode(const uint16_t* utf16le, uint32_t utf16max, uint32_t* utf16Len)",
  "sceCesUtf16leToBig5": "int sceCesUtf16leToBig5(const uint16_t* utf16buf, uint32_t utf16max, uint32_t*utf16Len, const union*p, uint8_t*big5Buf, uint32_t big5Max, uint32_t*big5Size)",
  "sceCesUtf16leToEucCn": "int sceCesUtf16leToEucCn(const uint16_t* utf16buf, uint32_t utf16max, uint32_t*utf16Len, const union*p, uint8_t*eucBuf, uint32_t eucMax, uint32_t*eucSize)",
  "sceCesUtf16leToEucJp": "int sceCesUtf16leToEucJp(const uint16_t* utf16buf, uint32_t utf16max, uint32_t*utf16Len, const union*p, uint8_t*eucBuf, uint32_t eucMax, uint32_t*eucSize)",
  "sceCesUtf16leToEucKr": "int sceCesUtf16leToEucKr(const uint16_t* utf16buf, uint32_t utf16max, uint32_t* utf16Len, const union*p, uint8_t*eucBuf, uint32_t eucMax, uint32_t*eucSize)",
  "sceCesUtf16leToGb": "int sceCesUtf16leToGb(const uint16_t* utf16buf, uint32_t utf16max, uint32_t* utf16Len, const union*p, uint8_t *gbBuf, uint32_t gbMax, uint32_t*gbSize)",
  "sceCesUtf16leToMbc": "int sceCesUtf16leToMbc(const uint16_t* utf16buf, uint32_t utf16max, uint32_t* utf16Len, const union*p, uint8_t *mbcBuf, uint32_t mbcMax, uint32_t*mbcLen)",
  "sceCesUtf16leToSJis": "int sceCesUtf16leToSJis(const uint16_t* utf16buf, uint32_t utf16max, uint32_t* utf16Len, const union*p, uint8_t*sjisBuf, uint32_t sjisMax, uint32_t*sjisSize)",
  "sceCesUtf16leToSbc": "int sceCesUtf16leToSbc(const uint16_t* utf16le, uint32_t utf16max, uint32_t* utf16Len, const struct*p, uint8_t*sbc)",
  "sceCesUtf16leToUcs2": "int sceCesUtf16leToUcs2(const uint16_t* utf16buf, uint32_t utf16max, uint32_t*utf16Len, uint16_t*ucs2)",
  "sceCesUtf16leToUhc": "int sceCesUtf16leToUhc(const uint16_t* utf16buf, uint32_t utf16max, uint32_t* utf16Len, const union*p, uint8_t*uhcBuf, uint32_t uhcMax, uint32_t*uhcSize)",
  "sceCesUtf16leToUtf32": "int sceCesUtf16leToUtf32(const uint16_t* utf16buf, uint32_t utf16max, uint32_t* utf16Len, uint32_t*utf32)",
  "sceCesUtf16leToUtf32be": "int sceCesUtf16leToUtf32be(const uint16_t* utf16buf, uint32_t utf16max, uint32_t* utf16Len, uint32_t*utf32be)",
  "sceCesUtf16leToUtf32le": "int sceCesUtf16leToUtf32le(const uint16_t* utf16buf, uint32_t utf16max, uint32_t* utf16Len, uint32_t*utf32le)",
  "sceCesUtf16leToUtf8": "int sceCesUtf16leToUtf8(const uint16_t* utf16buf, uint32_t utf16max, uint32_t* utf16Len, uint8_t* utf8buf , uint32_t utf8max , uint32_t* utf8Len)",
  "sceCesUtf32CheckCode": "int sceCesUtf32CheckCode(uint32_t utf32)",
  "sceCesUtf32StrGetCopyLen": "int sceCesUtf32StrGetCopyLen(union* uctx, const uint32_t* utf32str, uint32_t utf32max, uint32_t*utf32Len, uint32_t*copyLen)",
  "sceCesUtf32StrGetMbcsLen": "int sceCesUtf32StrGetMbcsLen(union* context, const uint32_t* utf32str, uint32_t utf32max, uint32_t*utf32Len, uint32_t*mbcsLen)",
  "sceCesUtf32StrGetUcs2Len": "int sceCesUtf32StrGetUcs2Len(union* uctx, const uint32_t* utf32str, uint32_t utf32max, uint32_t*utf32Len, uint32_t*ucs2Len)",
  "sceCesUtf32StrGetUtf16Len": "int sceCesUtf32StrGetUtf16Len(union* uctx, const uint32_t* utf32str, uint32_t utf32max, uint32_t* utf32Len, uint32_t* utf16Len)",
  "sceCesUtf32StrGetUtf8Len": "int sceCesUtf32StrGetUtf8Len(union* uctx, const uint32_t* utf32str, uint32_t utf32max, uint32_t* utf32Len, uint32_t* utf8Len)",
  "sceCesUtf32StrToCopyStr": "int sceCesUtf32StrToCopyStr(union* uctx, const uint32_t* utf32str, uint32_t utf32max, uint32_t*utf32Len, uint32_t* copyStr , uint32_t copyMax , uint32_t*copyLen)",
  "sceCesUtf32StrToMbcsStr": "int sceCesUtf32StrToMbcsStr(union* context, const uint32_t* utf32str, uint32_t utf32max, uint32_t*utf32Len, uint8_t* mbcsBuf , uint32_t mbcsMax , uint32_t*mbcsLen)",
  "sceCesUtf32StrToUcs2Str": "int sceCesUtf32StrToUcs2Str(union* uctx, const uint32_t* utf32str, uint32_t utf32max, uint32_t*utf32Len, uint16_t* ucs2buf, uint32_t ucs2max, uint32_t*ucs2Len)",
  "sceCesUtf32StrToUtf16Str": "int sceCesUtf32StrToUtf16Str(union* uctx, const uint32_t* utf32str, uint32_t utf32max, uint32_t*utf32Len, uint16_t* utf16buf, uint32_t utf16max, uint32_t*utf16Len)",
  "sceCesUtf32StrToUtf8Str": "int sceCesUtf32StrToUtf8Str(union* uctx, const uint32_t* utf32str, uint32_t utf32max, uint32_t* utf32Len, uint8_t* utf8buf, uint32_t utf8max, uint32_t* utf8Len)",
  "sceCesUtf32ToBig5": "int sceCesUtf32ToBig5(uint32_t utf32code, const union*p, uint8_t*big5Buf, uint32_t big5Max, uint32_t*big5Size)",
  "sceCesUtf32ToEucCn": "int sceCesUtf32ToEucCn(uint32_t utf32, const union*p, uint8_t*eucBuf, uint32_t eucMax, uint32_t*eucSize)",
  "sceCesUtf32ToEucJp": "int sceCesUtf32ToEucJp(uint32_t utf32code, const union*p, uint8_t*eucBuf, uint32_t eucMax, uint32_t*eucSize)",
  "sceCesUtf32ToEucKr": "int sceCesUtf32ToEucKr(uint32_t utf32, const union*p, uint8_t*eucBuf, uint32_t eucMax, uint32_t*eucSize)",
  "sceCesUtf32ToGb": "int sceCesUtf32ToGb(uint32_t utf32code, const union*p, uint8_t *gbBuf, uint32_t gbMax, uint32_t*gbSize)",
  "sceCesUtf32ToMbc": "int sceCesUtf32ToMbc(uint32_t utf32code, const union*p, uint8_t *mbcBuf, uint32_t mbcMax, uint32_t*mbcLen)",
  "sceCesUtf32ToSJis": "int sceCesUtf32ToSJis(uint32_t utf32code, const union*p, uint8_t*sjisBuf, uint32_t sjisMax, uint32_t*sjisSize)",
  "sceCesUtf32ToSbc": "int sceCesUtf32ToSbc(uint32_t utf32, const struct*p, uint8_t*sbc)",
  "sceCesUtf32ToUcs2": "int sceCesUtf32ToUcs2(uint32_t utf32, uint16_t*ucs2)",
  "sceCesUtf32ToUhc": "int sceCesUtf32ToUhc(uint32_t utf32, const union*p, uint8_t*uhcBuf, uint32_t uhcMax, uint32_t*uhcSize)",
  "sceCesUtf32ToUtf16": "int sceCesUtf32ToUtf16(uint32_t utf32, uint16_t* utf16buf, uint32_t utf16max, uint32_t*utf16Len)",
  "sceCesUtf32ToUtf16be": "int sceCesUtf32ToUtf16be(uint32_t utf32, uint16_t* utf16buf, uint32_t utf16max, uint32_t*utf16Len)",
  "sceCesUtf32ToUtf16le": "int sceCesUtf32ToUtf16le(uint32_t utf32, uint16_t* utf16buf, uint32_t utf16max, uint32_t*utf16Len)",
  "sceCesUtf32ToUtf8": "int sceCesUtf32ToUtf8(uint32_t utf32, uint8_t* utf8buf, uint32_t utf8max, uint32_t*utf8Len)",
  "sceCesUtf32beCheckCode": "int sceCesUtf32beCheckCode(const uint32_t* utf32be)",
  "sceCesUtf32beToBig5": "int sceCesUtf32beToBig5(const uint32_t*utf32be, const union*p, uint8_t*big5Buf, uint32_t big5Max, uint32_t*big5Size)",
  "sceCesUtf32beToEucCn": "int sceCesUtf32beToEucCn(const uint32_t *utf32be, const union*p, uint8_t*eucBuf, uint32_t eucMax, uint32_t*eucSize)",
  "sceCesUtf32beToEucJp": "int sceCesUtf32beToEucJp(const uint32_t*utf32be, const union*p, uint8_t*eucBuf, uint32_t eucMax, uint32_t*eucSize)",
  "sceCesUtf32beToEucKr": "int sceCesUtf32beToEucKr(const uint32_t *utf32be, const union*p, uint8_t*eucBuf, uint32_t eucMax, uint32_t*eucSize)",
  "sceCesUtf32beToGb": "int sceCesUtf32beToGb(const uint32_t *utf32be, const union*p, uint8_t *gbBuf, uint32_t gbMax, uint32_t*gbSize)",
  "sceCesUtf32beToMbc": "int sceCesUtf32beToMbc(const uint32_t *utf32be, const union*p, uint8_t *mbcBuf, uint32_t mbcMax, uint32_t*mbcLen)",
  "sceCesUtf32beToSJis": "int sceCesUtf32beToSJis(const uint32_t*utf32be, const union*p, uint8_t*sjisBuf, uint32_t sjisMax, uint32_t*sjisSize)",
  "sceCesUtf32beToSbc": "int sceCesUtf32beToSbc(const uint32_t*utf32be, const struct*p, uint8_t*sbc)",
  "sceCesUtf32beToUcs2": "int sceCesUtf32beToUcs2(const uint32_t*utf32be, uint16_t*ucs2)",
  "sceCesUtf32beToUhc": "int sceCesUtf32beToUhc(const uint32_t *utf32be, const union*p, uint8_t*uhcBuf, uint32_t uhcMax, uint32_t*uhcSize)",
  "sceCesUtf32beToUtf16": "int sceCesUtf32beToUtf16(const uint32_t*utf32be, uint16_t* utf16buf, uint32_t utf16max, uint32_t*utf16Len)",
  "sceCesUtf32beToUtf16be": "int sceCesUtf32beToUtf16be(const uint32_t*utf32be, uint16_t* utf16buf, uint32_t utf16max, uint32_t*utf16Len)",
  "sceCesUtf32beToUtf16le": "int sceCesUtf32beToUtf16le(const uint32_t*utf32be, uint16_t* utf16buf, uint32_t utf16max, uint32_t*utf16Len)",
  "sceCesUtf32beToUtf8": "int sceCesUtf32beToUtf8(const uint32_t*utf32be, uint8_t* utf8buf, uint32_t utf8max, uint32_t*utf8Len)",
  "sceCesUtf32leCheckCode": "int sceCesUtf32leCheckCode(const uint32_t* utf32le)",
  "sceCesUtf32leToBig5": "int sceCesUtf32leToBig5(const uint32_t*utf32le, const union*p, uint8_t*big5Buf, uint32_t big5Max, uint32_t*big5Size)",
  "sceCesUtf32leToEucCn": "int sceCesUtf32leToEucCn(const uint32_t *utf32le, const union*p, uint8_t*eucBuf, uint32_t eucMax, uint32_t*eucSize)",
  "sceCesUtf32leToEucJp": "int sceCesUtf32leToEucJp(const uint32_t*utf32le, const union*p, uint8_t*eucBuf, uint32_t eucMax, uint32_t*eucSize)",
  "sceCesUtf32leToEucKr": "int sceCesUtf32leToEucKr(const uint32_t *utf32le, const union*p, uint8_t*eucBuf, uint32_t eucMax, uint32_t*eucSize)",
  "sceCesUtf32leToGb": "int sceCesUtf32leToGb(const uint32_t *utf32le, const union*p, uint8_t *gbBuf, uint32_t gbMax, uint32_t*gbSize)",
  "sceCesUtf32leToMbc": "int sceCesUtf32leToMbc(const uint32_t *utf32le, const union*p, uint8_t *mbcBuf, uint32_t mbcMax, uint32_t*mbcLen)",
  "sceCesUtf32leToSJis": "int sceCesUtf32leToSJis(const uint32_t*utf32le, const union*p, uint8_t*sjisBuf, uint32_t sjisMax, uint32_t*sjisSize)",
  "sceCesUtf32leToSbc": "int sceCesUtf32leToSbc(const uint32_t*utf32le, const struct*p, uint8_t*sbc)",
  "sceCesUtf32leToUcs2": "int sceCesUtf32leToUcs2(const uint32_t*utf32le, uint16_t*ucs2)",
  "sceCesUtf32leToUhc": "int sceCesUtf32leToUhc(const uint32_t *utf32le, const union*p, uint8_t*uhcBuf, uint32_t uhcMax, uint32_t*uhcSize)",
  "sceCesUtf32leToUtf16": "int sceCesUtf32leToUtf16(const uint32_t*utf32le, uint16_t* utf16buf, uint32_t utf16max, uint32_t*utf16Len)",
  "sceCesUtf32leToUtf16be": "int sceCesUtf32leToUtf16be(const uint32_t*utf32le, uint16_t* utf16buf, uint32_t utf16max, uint32_t*utf16Len)",
  "sceCesUtf32leToUtf16le": "int sceCesUtf32leToUtf16le(const uint32_t*utf32le, uint16_t* utf16buf, uint32_t utf16max, uint32_t*utf16Len)",
  "sceCesUtf32leToUtf8": "int sceCesUtf32leToUtf8(const uint32_t*utf32le, uint8_t* utf8buf, uint32_t utf8max, uint32_t*utf8Len)",
  "sceCesUtf8CheckCode": "int sceCesUtf8CheckCode(const uint8_t*utf8addr, uint32_t utf8max, uint32_t*utf8Len)",
  "sceCesUtf8StrGetCopyLen": "int sceCesUtf8StrGetCopyLen(union* uctx, const uint8_t* utf8str, uint32_t utf8max, uint32_t*utf8Len, uint32_t*copyLen)",
  "sceCesUtf8StrGetMbcsLen": "int sceCesUtf8StrGetMbcsLen(union* context, const uint8_t* utf8str, uint32_t utf8max, uint32_t*utf8Len, uint32_t*mbcsLen)",
  "sceCesUtf8StrGetUcs2Len": "int sceCesUtf8StrGetUcs2Len(union* uctx, const uint8_t* utf8str, uint32_t utf8max, uint32_t* utf8Len, uint32_t* ucs2Len)",
  "sceCesUtf8StrGetUtf16Len": "int sceCesUtf8StrGetUtf16Len(union* uctx, const uint8_t* utf8str, uint32_t utf8max, uint32_t* utf8Len, uint32_t* utf16Len)",
  "sceCesUtf8StrGetUtf32Len": "int sceCesUtf8StrGetUtf32Len(union* uctx, const uint8_t* utf8str, uint32_t utf8max, uint32_t* utf8Len, uint32_t* utf32Len)",
  "sceCesUtf8StrToCopyStr": "int sceCesUtf8StrToCopyStr(union* uctx, const uint8_t* utf8str, uint32_t utf8max, uint32_t*utf8Len, uint8_t* copyStr, uint32_t copyMax, uint32_t*copyLen)",
  "sceCesUtf8StrToMbcsStr": "int sceCesUtf8StrToMbcsStr(union* context, const uint8_t* utf8str, uint32_t utf8max, uint32_t*utf8Len, uint8_t* mbcsBuf, uint32_t mbcsMax, uint32_t*mbcsLen)",
  "sceCesUtf8StrToUcs2Str": "int sceCesUtf8StrToUcs2Str(union* uctx, const uint8_t* utf8str, uint32_t utf8max, uint32_t* utf8Len, uint16_t* ucs2buf, uint32_t ucs2max, uint32_t* ucs2Len)",
  "sceCesUtf8StrToUtf16Str": "int sceCesUtf8StrToUtf16Str(union* uctx, const uint8_t* utf8str, uint32_t utf8max, uint32_t* utf8Len, uint16_t* utf16buf, uint32_t utf16max, uint32_t* utf16Len)",
  "sceCesUtf8StrToUtf32Str": "int sceCesUtf8StrToUtf32Str(union* uctx, const uint8_t* utf8str, uint32_t utf8max, uint32_t* utf8Len, uint32_t* utf32buf, uint32_t utf32max, uint32_t* utf32Len)",
  "sceCesUtf8ToBig5": "int sceCesUtf8ToBig5(const uint8_t* utf8buf, uint32_t utf8max, uint32_t*utf8Len, const union*p, uint8_t*big5Buf, uint32_t big5Max, uint32_t*big5Size)",
  "sceCesUtf8ToEucCn": "int sceCesUtf8ToEucCn(const uint8_t* utf8buf, uint32_t utf8max, uint32_t*utf8Len, const union*p, uint8_t*eucBuf, uint32_t eucMax, uint32_t*eucSize)",
  "sceCesUtf8ToEucJp": "int sceCesUtf8ToEucJp(const uint8_t* utf8buf, uint32_t utf8max, uint32_t*utf8Len, const union*p, uint8_t*eucBuf, uint32_t eucMax, uint32_t*eucSize)",
  "sceCesUtf8ToEucKr": "int sceCesUtf8ToEucKr(const uint8_t* utf8buf, uint32_t utf8max, uint32_t* utf8Size, const union*p, uint8_t*eucBuf, uint32_t eucMax, uint32_t*eucSize)",
  "sceCesUtf8ToGb": "int sceCesUtf8ToGb(const uint8_t* utf8buf, uint32_t utf8max, uint32_t* utf8Len, const union*p, uint8_t *gbBuf, uint32_t gbMax, uint32_t*gbSize)",
  "sceCesUtf8ToMbc": "int sceCesUtf8ToMbc(const uint8_t* utf8buf, uint32_t utf8max, uint32_t* utf8Len, const union*p, uint8_t *mbcBuf, uint32_t mbcMax, uint32_t*mbcLen)",
  "sceCesUtf8ToSJis": "int sceCesUtf8ToSJis(const uint8_t* utf8buf, uint32_t utf8max, uint32_t* utf8Len, const union*p, uint8_t*sjisBuf, uint32_t sjisMax, uint32_t*sjisSize)",
  "sceCesUtf8ToSbc": "int sceCesUtf8ToSbc(const uint8_t* utf8, uint32_t utf8max, uint32_t* utf8Len, const struct*p, uint8_t*sbc)",
  "sceCesUtf8ToUcs2": "int sceCesUtf8ToUcs2(const uint8_t* utf8buf, uint32_t utf8max, uint32_t*utf8Len, uint16_t*ucs2)",
  "sceCesUtf8ToUhc": "int sceCesUtf8ToUhc(const uint8_t* utf8buf, uint32_t utf8max, uint32_t* utf8Len, const union*p, uint8_t*uhcBuf, uint32_t uhcMax, uint32_t*uhcSize)",
  "sceCesUtf8ToUtf16": "int sceCesUtf8ToUtf16(const uint8_t* utf8buf , uint32_t utf8max , uint32_t*utf8Len, uint16_t* utf16buf, uint32_t utf16max, uint32_t*utf16Len)",
  "sceCesUtf8ToUtf16be": "int sceCesUtf8ToUtf16be(const uint8_t* utf8buf , uint32_t utf8max , uint32_t*utf8Len, uint16_t* utf16buf, uint32_t utf16max, uint32_t*utf16Len)",
  "sceCesUtf8ToUtf16le": "int sceCesUtf8ToUtf16le(const uint8_t* utf8buf , uint32_t utf8max , uint32_t*utf8Len, uint16_t* utf16buf, uint32_t utf16max, uint32_t*utf16Len)",
  "sceCesUtf8ToUtf32": "int sceCesUtf8ToUtf32(const uint8_t* utf8buf, uint32_t utf8max, uint32_t*convSize, uint32_t*utf32)",
  "sceCesUtf8ToUtf32be": "int sceCesUtf8ToUtf32be(const uint8_t* utf8buf, uint32_t utf8max, uint32_t*utf8Len, uint32_t*utf32be)",
  "sceCesUtf8ToUtf32le": "int sceCesUtf8ToUtf32le(const uint8_t* utf8buf, uint32_t utf8max, uint32_t*utf8Len, uint32_t*utf32le)",
  "sceCommonDialogInitialize": "int32_t sceCommonDialogInitialize()",
  "sceCommonDialogIsUsed": "bool sceCommonDialogIsUsed()",
  "sceCompanionHttpdAddHeader": "int32_t sceCompanionHttpdAddHeader(const char *key, const char *value, SceCompanionHttpdResponse *response)",
  "sceCompanionHttpdGet2ndScreenStatus": "int32_t sceCompanionHttpdGet2ndScreenStatus(SceUserServiceUserId userId)",
  "sceCompanionHttpdGetEvent": "int32_t sceCompanionHttpdGetEvent(SceCompanionHttpdEvent *pEvent)",
  "sceCompanionHttpdGetUserId": "int32_t sceCompanionHttpdGetUserId(SceNetInAddr addr, SceUserServiceUserId *userId)",
  "sceCompanionHttpdInitialize2": "int32_t sceCompanionHttpdInitialize2(const SceCompanionHttpdOptParam2 *option)",
  "sceCompanionHttpdRegisterRequestBodyReceptionCallback": "int32_t sceCompanionHttpdRegisterRequestBodyReceptionCallback(SceCompanionHttpdRequestBodyReceptionCallback function, void *param)",
  "sceCompanionHttpdRegisterRequestCallback": "int32_t sceCompanionHttpdRegisterRequestCallback(SceCompanionHttpdRequestCallback function, void* param)",
  "sceCompanionHttpdRegisterRequestCallback2": "int32_t sceCompanionHttpdRegisterRequestCallback2(SceCompanionHttpdRequestCallback function, void* param)",
  "sceCompanionHttpdSetBody": "int32_t sceCompanionHttpdSetBody(const char *body, size_t bodySize, SceCompanionHttpdResponse *response)",
  "sceCompanionHttpdSetStatus": "int32_t sceCompanionHttpdSetStatus(int32_t status, SceCompanionHttpdResponse *response)",
  "sceCompanionHttpdStart": "int32_t sceCompanionHttpdStart(void)",
  "sceCompanionHttpdStop": "int32_t sceCompanionHttpdStop(void)",
  "sceCompanionHttpdTerminate": "int32_t sceCompanionHttpdTerminate(void)",
  "sceCompanionHttpdUnregisterRequestBodyReceptionCallback": "int32_t sceCompanionHttpdUnregisterRequestBodyReceptionCallback(void)",
  "sceCompanionHttpdUnregisterRequestCallback": "int32_t sceCompanionHttpdUnregisterRequestCallback(void)",
  "sceCompanionUtilGetEvent": "int32_t sceCompanionUtilGetEvent(SceCompanionUtilEvent *pEvent)",
  "sceCompanionUtilGetRemoteOskEvent": "int32_t sceCompanionUtilGetRemoteOskEvent(SceUserServiceUserId userId)",
  "sceCompanionUtilInitialize": "int32_t sceCompanionUtilInitialize(const SceCompanionUtilOptParam *option)",
  "sceCompanionUtilOptParamInitialize": "int32_t sceCompanionUtilOptParamInitialize(SceCompanionUtilOptParam *pOptParam)",
  "sceCompanionUtilTerminate": "int32_t sceCompanionUtilTerminate(void)",
  "sceContentDeleteById": "int32_t sceContentDeleteById(SceContentSearchContentId contentId)",
  "sceContentDeleteByPath": "int32_t sceContentDeleteByPath(const char *contentPath)",
  "sceContentDeleteInitialize": "int32_t sceContentDeleteInitialize(const struct *initparam)",
  "sceContentDeleteTerminate": "int32_t sceContentDeleteTerminate(void)",
  "sceContentExportCancel": "int32_t sceContentExportCancel(int32_t expId)",
  "sceContentExportFinish": "int32_t sceContentExportFinish(int32_t expId)",
  "sceContentExportFromData": "int32_t sceContentExportFromData(int32_t expId, const struct* param, size_t cotentlength, sceContentExportDataProvideFunction func, void* userdata, char* path, size_t pathbuflen)",
  "sceContentExportFromDataWithThumbnail": "int32_t sceContentExportFromDataWithThumbnail(int32_t expId, const struct* param, const struct* contentCallbackParam, const char* thumbnailType, const struct* thumbnailCallbackParam, char* path, size_t pathbuflen)",
  "sceContentExportFromFile": "int32_t sceContentExportFromFile(int32_t expId, const struct* param, const char* srcpathname, char* path, size_t pathbuflen)",
  "sceContentExportFromFileWithThumbnail": "int32_t sceContentExportFromFileWithThumbnail(int32_t expId, const struct* param, const char* srcpathname, const char* thumbnailpath, char* path, size_t pathbuflen)",
  "sceContentExportGetProgress": "int32_t sceContentExportGetProgress(int32_t expId)",
  "sceContentExportInit": "int32_t sceContentExportInit(const struct* initparam)",
  "sceContentExportStart": "int32_t sceContentExportStart()",
  "sceContentExportTerm": "int32_t sceContentExportTerm()",
  "sceContentSearchCloseMetadata": "int32_t sceContentSearchCloseMetadata(SceContentSearchMetadataId metadataId)",
  "sceContentSearchGetApplicationLastUpdateId": "int32_t sceContentSearchGetApplicationLastUpdateId(SceContentSearchUpdateId *lastUpdateId)",
  "sceContentSearchGetContentLastUpdateId": "int32_t sceContentSearchGetContentLastUpdateId(SceContentSearchUpdateId *lastUpdateId)",
  "sceContentSearchGetMetadataFieldInfo": "int32_t sceContentSearchGetMetadataFieldInfo(SceContentSearchMetadataId metadataId, const char *field, SceContentSearchMetadataType *metadataType, int32_t *size)",
  "sceContentSearchGetMetadataValue": "int32_t sceContentSearchGetMetadataValue(SceContentSearchMetadataId metadataId, const char *field, SceContentSearchMetadataValue *value)",
  "sceContentSearchGetMyApplicationIndex": "int32_t sceContentSearchGetMyApplicationIndex(SceContentSearchApplicationIndex *applicationIndex)",
  "sceContentSearchGetNumOfApplication": "int32_t sceContentSearchGetNumOfApplication(SceContentSearchApplicationColumnSet *columnSet, uint32_t columnSetLength, SceContentSearchApplicationAggregatedCondition *aggregatedConditions, uint32_t aggregatedConditionsLength, int64_t *numOfApplications, SceContentSearchUpdateId *lastUpdateId)",
  "sceContentSearchGetNumOfContent": "int32_t sceContentSearchGetNumOfContent(SceContentSearchContentColumnSet *columnSet, uint32_t columnSetLength, int64_t *numOfContent, SceContentSearchUpdateId *lastUpdateId)",
  "sceContentSearchGetTotalContentSize": "int32_t sceContentSearchGetTotalContentSize(SceContentSearchContentColumnSet *columnSet, uint32_t columnSetLength, int64_t *size, SceContentSearchUpdateId *lastUpdateId)",
  "sceContentSearchInit": "int32_t sceContentSearchInit(const struct* initparam)",
  "sceContentSearchOpenMetadata": "int32_t sceContentSearchOpenMetadata(const char* file_path, SceContentSearchMetadataId *metadataId)",
  "sceContentSearchOpenMetadataByContentId": "int32_t sceContentSearchOpenMetadataByContentId(const SceContentSearchContentId contentId, SceContentSearchMetadataId *metadataId)",
  "sceContentSearchSearchApplication": "int32_t sceContentSearchSearchApplication(SceContentSearchApplicationColumnSet *columnSet, uint32_t columnSetLength, SceContentSearchApplicationOrderByCondition *orderByConditions, uint32_t orderByConditionsLength, SceContentSearchApplicationAggregatedCondition *aggregatedConditions, uint32_t aggregatedConditionsLength, uint32_t offset, uint32_t limit, int64_t *numOfApplications, SceContentSearchApplicationInfo *infos, SceContentSearchUpdateId *lastUpdateId)",
  "sceContentSearchSearchContent": "int32_t sceContentSearchSearchContent(SceContentSearchContentColumnSet *columnSet, uint32_t columnSetLength, SceContentSearchContentOrderByCondition *orderByConditions, uint32_t orderByConditionsLength, uint32_t offset, uint32_t limit, int64_t *numOfContent, SceContentSearchContentInfo *infos, SceContentSearchUpdateId *lastUpdateId)",
  "sceContentSearchTerm": "int32_t sceContentSearchTerm()",
  "sceConvertKeycodeGetCharacter": "int sceConvertKeycodeGetCharacter(uint16_t keycode, uint32_t status, SceImeKeyboardType keyboardType, wchar_t *character)",
  "sceConvertKeycodeGetVirtualKeycode": "int sceConvertKeycodeGetVirtualKeycode(uint16_t keycode, SceImeKeyboardType keyboardType, uint16_t *vkeycode)",
  "sceCoredumpAttachMemoryRegion": "int32_t sceCoredumpAttachMemoryRegion(uint32_t user_value, const void* mem, size_t size)",
  "sceCoredumpAttachMemoryRegionAsUserFile": "int32_t sceCoredumpAttachMemoryRegionAsUserFile(uint32_t user_value, const void* mem, size_t size, const char* name)",
  "sceCoredumpAttachUserFile": "int32_t sceCoredumpAttachUserFile(uint32_t user_value, const char* path)",
  "sceCoredumpConfigDumpMode": "int sceCoredumpConfigDumpMode(uint32_t mode)",
  "sceCoredumpDebugForceCoredumpOnAppClose": "void sceCoredumpDebugForceCoredumpOnAppClose(void)",
  "sceCoredumpDebugTextOut": "void sceCoredumpDebugTextOut(const char* str, int len)",
  "sceCoredumpDebugTriggerCoredump": "void sceCoredumpDebugTriggerCoredump(void)",
  "sceCoredumpGetStopInfoCpu": "int32_t sceCoredumpGetStopInfoCpu(struct _SceCoredumpStopInfoCpu* info, size_t size)",
  "sceCoredumpGetStopInfoGpu": "int32_t sceCoredumpGetStopInfoGpu(struct _SceCoredumpStopInfoGpu* info, size_t size)",
  "sceCoredumpGetThreadContextInfo": "int32_t sceCoredumpGetThreadContextInfo(struct _SceCoredumpThreadContextInfo* threadContextInfo, size_t threadContextInfoSize)",
  "sceCoredumpRegisterCoredumpHandler": "int32_t sceCoredumpRegisterCoredumpHandler(SceCoredumpHandler handler, size_t stackSize, void* pCommon)",
  "sceCoredumpUnregisterCoredumpHandler": "int32_t sceCoredumpUnregisterCoredumpHandler(void)",
  "sceCoredumpWriteUserData": "ssize_t sceCoredumpWriteUserData(const void* data, size_t size)",
  "sceDbgEnCApplyChangesNow": "int sceDbgEnCApplyChangesNow()",
  "sceDbgEnCCheckForPendingChanges": "int sceDbgEnCCheckForPendingChanges()",
  "sceDbgKeyboardClose": "int sceDbgKeyboardClose(int32_t handle)",
  "sceDbgKeyboardGetKey2Char": "int sceDbgKeyboardGetKey2Char(int32_t handle, enum arrange, uint32_t led, uint32_t modifierKey, uint16_t keyCode, struct *pCharData)",
  "sceDbgKeyboardInit": "int sceDbgKeyboardInit(void)",
  "sceDbgKeyboardOpen": "int sceDbgKeyboardOpen(SceUserServiceUserId userId, int32_t type, int32_t index, const struct* pParam)",
  "sceDbgKeyboardRead": "int sceDbgKeyboardRead(int32_t handle, struct *pData, int32_t num)",
  "sceDbgKeyboardReadState": "int sceDbgKeyboardReadState(int32_t handle, struct *pData)",
  "sceDbgPlayGoRequestNextChunk": "int32_t sceDbgPlayGoRequestNextChunk(int32_t handle, const void *reserved)",
  "sceDbgPlayGoSnapshot": "int32_t sceDbgPlayGoSnapshot(int32_t handle, const char *filename)",
  "sceDbgVideoOutAddOutputModeVr60Privilege": "int32_t sceDbgVideoOutAddOutputModeVr60Privilege(int32_t handle)",
  "sceDeci4hClose": "int sceDeci4hClose(int socketId)",
  "sceDeci4hCreateHostProcess": "int sceDeci4hCreateHostProcess(const SceDeci4hCreateHostProcessParam *param, SceDeci4hCreateHostProcessExitHandler exitHandler, void *exitHandlerUserArg, SceDeci4hCreateHostProcessResult *result)",
  "sceDeci4hCreateHostProcessAndWait": "int sceDeci4hCreateHostProcessAndWait(const SceDeci4hCreateHostProcessParam *param, SceDeci4hCreateHostProcessResult *result, uint32_t *hostProcessExitCode)",
  "sceDeci4hGetStatus": "int sceDeci4hGetStatus(SceDeci4hStatusInfo* info)",
  "sceDeci4hOpen": "int sceDeci4hOpen(SceDeci4hProtocolInfo* protocolInfo, SceDeci4hEventHandler eventhandler, uint64_t param1, uint64_t param2)",
  "sceDeci4hRead": "int sceDeci4hRead(int socketId, void* buffer, size_t bufferSize, uint64_t options)",
  "sceDeci4hWrite": "int sceDeci4hWrite(int socketId, void *buffer, size_t bufferSize, uint64_t options)",
  "sceDepthGetCalibrationData": "int sceDepthGetCalibrationData(const SceDepthGetCalibrationDataParameter* getCalibrationDataParameter, SceDepthCalibrationData* calibrationData)",
  "sceDepthGetImage": "int sceDepthGetImage(int handle, SceDepthImageType imageType, void *destinationBuffer, int destinationBufferSize)",
  "sceDepthHandCandidateTrackerGetResult": "int sceDepthHandCandidateTrackerGetResult(int handle, SceDepthHandCandidateTrackingResult *results, int length)",
  "sceDepthHasCalibrationData": "int sceDepthHasCalibrationData(int handle)",
  "sceDepthHeadCandidateTrackerGetResult": "int sceDepthHeadCandidateTrackerGetResult(int handle, SceDepthHeadCandidateTrackingResult *results, int length)",
  "sceDepthHeadCandidateTrackerSetValidationInformation": "int sceDepthHeadCandidateTrackerSetValidationInformation(int handle, SceDepthTrackingResultValidationInformation* validationInformations, int length)",
  "sceDepthInitialize": "int sceDepthInitialize(const SceDepthInitializeParameter *initializeParameter, const SceDepthMemoryInformation *memoryInformation)",
  "sceDepthLoadCalibrationData": "int sceDepthLoadCalibrationData(int handle)",
  "sceDepthQueryMemory": "int sceDepthQueryMemory(const SceDepthInitializeParameter *initializeParameter, SceDepthQueryMemoryResult *memoryQueryResult)",
  "sceDepthSetCalibrationData": "int sceDepthSetCalibrationData(int handle, const SceCameraCalibrationData* calibrationData)",
  "sceDepthSetCommands": "int sceDepthSetCommands(int handle, const SceDepthUpdateParameter* updateParameter)",
  "sceDepthSetRoi": "int sceDepthSetRoi(int handle, float sx, float sy, float ex, float ey)",
  "sceDepthSetRoiset": "int sceDepthSetRoiset(int handle, const SceDepthRoiInformation* roiInformations, int length)",
  "sceDepthSubmit": "int sceDepthSubmit(int handle)",
  "sceDepthTerminate": "int sceDepthTerminate(int handle)",
  "sceDepthUpdate": "int sceDepthUpdate(int handle, const SceDepthUpdateParameter *updateParameter)",
  "sceDepthValidateCurrentCalibrationData": "int sceDepthValidateCurrentCalibrationData(int handle, const SceDepthUpdateParameter* updateParameter)",
  "sceDepthWaitAndExecutePostProcess": "int sceDepthWaitAndExecutePostProcess(int handle)",
  "sceEditMp4Abort": "int32_t sceEditMp4Abort(void* handle)",
  "sceEditMp4Edit": "int32_t sceEditMp4Edit(void* handle, const struct *pEditParam, const char *pInPath, const char *pOutPath)",
  "sceEditMp4GetStatus": "int32_t sceEditMp4GetStatus(void* handle, struct *pStatus)",
  "sceEditMp4Initialize": "int32_t sceEditMp4Initialize(const struct *pInitializeParam, void* *pHandle)",
  "sceEditMp4InitializeParam": "void sceEditMp4InitializeParam(struct *pInitializeParam)",
  "sceEditMp4QueryMemSize": "size_t sceEditMp4QueryMemSize()",
  "sceEditMp4SetFinishCallback": "int32_t sceEditMp4SetFinishCallback(void* handle, SceEditMp4FinishCallback pCallback, void *pUserArg)",
  "sceEditMp4Terminate": "int32_t sceEditMp4Terminate(void* handle)",
  "sceEditMp4Unite": "int32_t sceEditMp4Unite(void* handle, const char *pInPathFirst, const char *pInPathSecond, const char *pOutPath)",
  "sceErrorDialogClose": "int32_t sceErrorDialogClose(void)",
  "sceErrorDialogGetStatus": "enum sceErrorDialogGetStatus(void)",
  "sceErrorDialogInitialize": "int32_t sceErrorDialogInitialize(void)",
  "sceErrorDialogOpen": "int32_t sceErrorDialogOpen(const struct *param)",
  "sceErrorDialogTerminate": "int32_t sceErrorDialogTerminate(void)",
  "sceErrorDialogUpdateStatus": "enum sceErrorDialogUpdateStatus(void)",
  "sceFaceAgeGetWorkingMemorySize": "int sceFaceAgeGetWorkingMemorySize(int width, int height, int rowstride, const void * ageDictPtr)",
  "sceFaceAgeRangeIntegrate": "int sceFaceAgeRangeIntegrate(const struct *ageRange, struct *ageDistrData, int *ageResult)",
  "sceFaceAllPartsGetWorkingMemorySize": "int sceFaceAllPartsGetWorkingMemorySize(int width, int height, int rowstride, const void * partsDictPtr)",
  "sceFaceAttributeGetWorkingMemorySize": "int sceFaceAttributeGetWorkingMemorySize(int width, int height, int rowstride, const void * attribDictPtr)",
  "sceFaceDetectionGetDefaultParam": "int sceFaceDetectionGetDefaultParam(struct *param)",
  "sceFaceDetectionGetWorkingMemorySize": "int sceFaceDetectionGetWorkingMemorySize(int width, int height, int rowstride, void * detectDictPtr)",
  "sceFaceIdentifyExGetWorkingMemorySize": "int sceFaceIdentifyExGetWorkingMemorySize(int width, int height, int rowstride, const void * identifyDictPtr)",
  "sceFaceIdentifyGetWorkingMemorySize": "int sceFaceIdentifyGetWorkingMemorySize(int width, int height, int rowstride, const void * identifyDictPtr)",
  "sceFaceIdentifyLiteGetWorkingMemorySize": "int sceFaceIdentifyLiteGetWorkingMemorySize(int width, int height, int rowstride, const void * identifyDictPtr)",
  "sceFacePartsGetWorkingMemorySize": "int sceFacePartsGetWorkingMemorySize(int width, int height, int rowstride, const void * partsDictPtr)",
  "sceFaceShapeGetWorkingMemorySize": "int sceFaceShapeGetWorkingMemorySize(int width, int height, int rowstride, const void * shapeDictPtr, int maxFaceWidth, int maxFaceHeight, bool isVideoInput)",
  "sceFaceShapeTrack": "int sceFaceShapeTrack(const unsigned char *imgPtrCur, const unsigned char *imgPtrPrv, int width, int height, int rowstride, const void * shapeDictPtr, struct *shape, float lostThreshold, void *workMemory, int workMemorySize)",
  "sceFaceTrackerAddUserFeature": "int sceFaceTrackerAddUserFeature(int userId, const void *featureData, int featureDataSize, void *work)",
  "sceFaceTrackerFinalize": "int sceFaceTrackerFinalize(void *work)",
  "sceFaceTrackerGetDefaultConfig": "int sceFaceTrackerGetDefaultConfig(struct *pConfig)",
  "sceFaceTrackerGetResult": "int sceFaceTrackerGetResult(int trackId, struct *result, void *work)",
  "sceFaceTrackerGetTrackIdByUserId": "int sceFaceTrackerGetTrackIdByUserId(int userId, void *work)",
  "sceFaceTrackerGetUserFeature": "int sceFaceTrackerGetUserFeature(int userId, const void**featureData, int*featureDataSize, void *work)",
  "sceFaceTrackerGetUserIdByTrackId": "int sceFaceTrackerGetUserIdByTrackId(int trackId, void *work)",
  "sceFaceTrackerGetWorkingMemorySize": "int sceFaceTrackerGetWorkingMemorySize(int width, int height, int rowstride, int maxTrackingNum, const struct *pConfig, int *workSize)",
  "sceFaceTrackerInitialize": "int sceFaceTrackerInitialize(int width, int height, int rowstride, int maxTrackingNum, pthread_mutex_t *threadFuncMutex, const struct *pConfig, void *work, int workSize)",
  "sceFaceTrackerRegisterFixUserIdCallback": "int sceFaceTrackerRegisterFixUserIdCallback(SceFaceTrackerFixUserIdCallbackFunc func, void *callbackParam, void *work)",
  "sceFaceTrackerRegisterLostTargetCallback": "int sceFaceTrackerRegisterLostTargetCallback(SceFaceTrackerLostTargetCallbackFunc func, void *callbackParam, void *work)",
  "sceFaceTrackerRegisterRecoveryFromLostTargetCallback": "int sceFaceTrackerRegisterRecoveryFromLostTargetCallback(SceFaceTrackerRecoveryFromLostTargetCallbackFunc func, void *callbackParam, void *work)",
  "sceFaceTrackerRegisterStartTrackingCallback": "int sceFaceTrackerRegisterStartTrackingCallback(SceFaceTrackerStartTrackingCallbackFunc func, void *callbackParam, void *work)",
  "sceFaceTrackerRegisterStopTrackingCallback": "int sceFaceTrackerRegisterStopTrackingCallback(SceFaceTrackerStopTrackingCallbackFunc func, void *callbackParam, void *work)",
  "sceFaceTrackerRegisterUser": "int sceFaceTrackerRegisterUser (int userId, const void *featureData, int featureDataSize, void *work)",
  "sceFaceTrackerReset": "int sceFaceTrackerReset(bool isClearRegisterUser, void *work)",
  "sceFaceTrackerSearchTarget": "int sceFaceTrackerSearchTarget(pthread_mutex_t *threadFuncMutex, void *work)",
  "sceFaceTrackerStartTracking": "int sceFaceTrackerStartTracking(int trackId, void *work)",
  "sceFaceTrackerStopTracking": "int sceFaceTrackerStopTracking (int trackId, void *work)",
  "sceFaceTrackerUnregisterUser": "int sceFaceTrackerUnregisterUser(int userId, void *work)",
  "sceFaceTrackerUpdate": "int sceFaceTrackerUpdate(const unsigned char *imageData, void *work)",
  "sceFontAttachDeviceCacheBuffer": "int sceFontAttachDeviceCacheBuffer(struct _structLibrary * library, void* buffer, uint32_t size)",
  "sceFontBindRenderer": "int sceFontBindRenderer(structHandle fontHandle, structRenderer renderer)",
  "sceFontCharacterGetBidiLevel": "int sceFontCharacterGetBidiLevel(structTextCharacter textCharacter, int*bidiLevel)",
  "sceFontCharacterGetSyllableStringState": "int sceFontCharacterGetSyllableStringState(structTextCharacter textCharacter, int*syllableStringState)",
  "sceFontCharacterGetTextFontCode": "int sceFontCharacterGetTextFontCode(structTextCharacter textCharacter, structHandle*pFontHandle, uint32_t*textCode)",
  "sceFontCharacterGetTextOrder": "int sceFontCharacterGetTextOrder(structTextCharacter textCharacter, void**pTextOrder)",
  "sceFontCharacterLooksFormatCharacters": "uint32_t sceFontCharacterLooksFormatCharacters(structTextCharacter textCharacter)",
  "sceFontCharacterLooksWhiteSpace": "uint32_t sceFontCharacterLooksWhiteSpace(structTextCharacter textCharacter)",
  "sceFontCharacterRefersTextBack": "structTextCharacter sceFontCharacterRefersTextBack(structTextCharacter textCharacter)",
  "sceFontCharacterRefersTextNext": "structTextCharacter sceFontCharacterRefersTextNext(structTextCharacter textCharacter)",
  "sceFontCharactersRefersTextCodes": "structTextCodesStep sceFontCharactersRefersTextCodes(structTextCharacter textCharacter, structTextCharacter termCharacter, structTextCodes* textCodes)",
  "sceFontClearDeviceCache": "int sceFontClearDeviceCache(struct _structLibrary * library)",
  "sceFontCloseFont": "int sceFontCloseFont(structHandle fontHandle)",
  "sceFontCreateLibrary": "int sceFontCreateLibrary(const struct* memory, const struct _struct _structLibrary *Selection * selection, struct _structLibrary ** pLibrary)",
  "sceFontCreateLibraryWithEdition": "int sceFontCreateLibraryWithEdition(const struct* memory, const struct _struct _structLibrary *Selection * selection, uint64_t edition, struct _structLibrary ** pLibrary)",
  "sceFontCreateRenderer": "int sceFontCreateRenderer(const struct* memory, structRendererSelection selection, structRenderer* pRenderer)",
  "sceFontCreateRendererWithEdition": "int sceFontCreateRendererWithEdition(const struct* memory, structRendererSelection selection, uint64_t edition, structRenderer* pRenderer)",
  "sceFontCreateString": "int sceFontCreateString(const struct* fontMemory, structTextSource*fontTextSource, const structCreateStringDetail*stringDetail, structString* pFontString)",
  "sceFontCreateWords": "int sceFontCreateWords(const struct* fontMemory, structTextSource*textSource, structCreateWordsDetail* detail, structWords* pFontWords)",
  "sceFontCreateWritingLine": "int sceFontCreateWritingLine(const struct* fontMemory, int writingForm, const structCreateWritingLineDetail* writingLineDetail, structWritingLine* pWritingLine)",
  "sceFontDefineAttribute": "int sceFontDefineAttribute(structHandle fontHandle, int attribute, int *oldAttribute)",
  "sceFontDeleteGlyph": "int sceFontDeleteGlyph(const struct* memory, structGlyph* pFontGlyph)",
  "sceFontDestroyLibrary": "int sceFontDestroyLibrary(struct _structLibrary ** pLibrary)",
  "sceFontDestroyRenderer": "int sceFontDestroyRenderer(structRenderer* pRenderer)",
  "sceFontDestroyString": "int sceFontDestroyString(structString* pFontString)",
  "sceFontDestroyWords": "int sceFontDestroyWords(structWords* pFontWords)",
  "sceFontDestroyWritingLine": "int sceFontDestroyWritingLine(structWritingLine* pWritingLine)",
  "sceFontDettachDeviceCacheBuffer": "int sceFontDettachDeviceCacheBuffer(struct _structLibrary * library, void**buffer, uint32_t *size)",
  "sceFontGenerateCharGlyph": "int sceFontGenerateCharGlyph(structHandle fontHandle, uint32_t code, const structGenerateGlyphDetail* detail, structGlyph* pFontGlyph)",
  "sceFontGetAttribute": "int sceFontGetAttribute(structHandle fontHandle, int attribute, int *nowAttribute)",
  "sceFontGetCharGlyphCode": "int sceFontGetCharGlyphCode(structHandle fontHandle, uint32_t code, uint32_t* glyphCode)",
  "sceFontGetCharGlyphMetrics": "int sceFontGetCharGlyphMetrics(structHandle fontHandle, uint32_t code, structGlyphMetrics* metrics)",
  "sceFontGetEffectSlant": "int sceFontGetEffectSlant(structHandle fontHandle, float*slantRatio)",
  "sceFontGetEffectWeight": "int sceFontGetEffectWeight(structHandle fontHandle, float*weightXScale, float*weightYScale, uint32_t*mode)",
  "sceFontGetFontGlyphsCount": "int sceFontGetFontGlyphsCount(structHandle fontHandle, uint32_t *glyphsCount)",
  "sceFontGetFontResolution": "int sceFontGetFontResolution(structHandle fontHandle, uint32_t* pResolution, float* pScalePixel)",
  "sceFontGetHorizontalLayout": "int sceFontGetHorizontalLayout(structHandle fontHandle, structHorizontalLayout* layout)",
  "sceFontGetKerning": "int sceFontGetKerning(structHandle fontHandle, uint32_t preCode, uint32_t code, structKerning*kerning)",
  "sceFontGetLibrary": "int sceFontGetLibrary(structHandle fontHandle, struct _structLibrary ** pLibrary)",
  "sceFontGetPixelResolution": "int sceFontGetPixelResolution(struct _structLibrary * library, uint32_t* subPixelCount)",
  "sceFontGetRenderCharGlyphMetrics": "int sceFontGetRenderCharGlyphMetrics(structHandle fontHandle, uint32_t code, structGlyphMetrics* metrics)",
  "sceFontGetRenderEffectSlant": "int sceFontGetRenderEffectSlant(structHandle fontHandle, float*slantRatio)",
  "sceFontGetRenderEffectWeight": "int sceFontGetRenderEffectWeight(structHandle fontHandle, float*weightXScale, float*weightYScale, uint32_t*mode)",
  "sceFontGetRenderScalePixel": "int sceFontGetRenderScalePixel(structHandle fontHandle, float *w, float *h)",
  "sceFontGetRenderScalePoint": "int sceFontGetRenderScalePoint(structHandle fontHandle, float *w, float *h)",
  "sceFontGetRenderScaledKerning": "int sceFontGetRenderScaledKerning(structHandle fontHandle, uint32_t preCode, uint32_t code, structKerning*kerning)",
  "sceFontGetResolutionDpi": "int sceFontGetResolutionDpi(structHandle fontHandle, uint32_t*hDpi, uint32_t*vDpi)",
  "sceFontGetScalePixel": "int sceFontGetScalePixel(structHandle fontHandle, float *w, float *h)",
  "sceFontGetScalePoint": "int sceFontGetScalePoint(structHandle fontHandle, float *w, float *h)",
  "sceFontGetScriptLanguage": "int sceFontGetScriptLanguage(structHandle fontHandle, int fontScript, int*fontLanguage)",
  "sceFontGetTypographicDesign": "int sceFontGetTypographicDesign(structHandle fontHandle, int typographic, int*feature)",
  "sceFontGetVerticalLayout": "int sceFontGetVerticalLayout(structHandle fontHandle, structVerticalLayout* layout)",
  "sceFontGlyphDefineAttribute": "int sceFontGlyphDefineAttribute(structGlyph fontGlyph, int attribute, int *oldAttribute)",
  "sceFontGlyphGetAttribute": "int sceFontGlyphGetAttribute(structGlyph fontGlyph, int attribute, int *nowAttribute)",
  "sceFontGlyphGetGlyphForm": "int sceFontGlyphGetGlyphForm(structGlyph fontGlyph)",
  "sceFontGlyphGetMetricsForm": "int sceFontGlyphGetMetricsForm(structGlyph fontGlyph)",
  "sceFontGlyphRefersMetrics": "const structGlyphMetrics* sceFontGlyphRefersMetrics(const structGlyph fontGlyph)",
  "sceFontGlyphRefersMetricsHorizontal": "const structGlyphMetricsHorizontal* sceFontGlyphRefersMetricsHorizontal(const structGlyph fontGlyph)",
  "sceFontGlyphRefersMetricsHorizontalAdvance": "const structGlyphMetricsHorizontalAdvance* sceFontGlyphRefersMetricsHorizontalAdvance(const structGlyph fontGlyph)",
  "sceFontGlyphRefersMetricsHorizontalX": "const structGlyphMetricsHorizontalX* sceFontGlyphRefersMetricsHorizontalX(const structGlyph fontGlyph)",
  "sceFontGlyphRefersOutline": "const structGlyphOutline* sceFontGlyphRefersOutline(const structGlyph fontGlyph)",
  "sceFontGlyphRenderImage": "int sceFontGlyphRenderImage(structGlyph fontGlyph, structStyleFrame* fontStyleFrame, structRenderer fontRenderer, structRenderSurface* surface, float x, float y, structGlyphMetrics* metrics, structRenderResult* result)",
  "sceFontGlyphRenderImageHorizontal": "int sceFontGlyphRenderImageHorizontal(structGlyph fontGlyph, structStyleFrame* fontStyleFrame, structRenderer fontRenderer, structRenderSurface* surface, float x, float y, structGlyphMetrics* metrics, structRenderResult* result)",
  "sceFontGlyphRenderImageVertical": "int sceFontGlyphRenderImageVertical(structGlyph fontGlyph, structStyleFrame* fontStyleFrame, structRenderer fontRenderer, structRenderSurface* surface, float x, float y, structGlyphMetrics* metrics, structRenderResult* result)",
  "sceFontMemoryInit": "int sceFontMemoryInit(struct* fontMemory, void* address, uint32_t sizeByte, const struct* memInterface, void* mspaceObject, structDestroyFunction * destroyCallback, void* destroyObject)",
  "sceFontMemoryTerm": "int sceFontMemoryTerm(struct* fontMemory)",
  "sceFontOpenFontFile": "int sceFontOpenFontFile(struct _structLibrary * library, const char* fontPath, uint32_t openMode, const structOpenDetail* detail, structHandle *pFontHandle)",
  "sceFontOpenFontInstance": "int sceFontOpenFontInstance(structHandle fontHandle, struct* setupFont, structHandle *pFontHandle)",
  "sceFontOpenFontMemory": "int sceFontOpenFontMemory(struct _structLibrary * library, const void* fontAddress, uint32_t fontSize, const structOpenDetail* detail, structHandle *pFontHandle)",
  "sceFontOpenFontSet": "int sceFontOpenFontSet(struct _structLibrary * library, uint32_t fontSetType, uint32_t openMode, const structOpenDetail* detail, structHandle *pFontHandle)",
  "sceFontRebindRenderer": "int sceFontRebindRenderer(structHandle fontHandle)",
  "sceFontRenderCharGlyphImage": "int sceFontRenderCharGlyphImage(structHandle fontHandle, uint32_t code, structRenderSurface* surf, float x, float y, structGlyphMetrics* metrics, structRenderResult* result)",
  "sceFontRenderCharGlyphImageHorizontal": "int sceFontRenderCharGlyphImageHorizontal(structHandle fontHandle, uint32_t code, structRenderSurface* surf, float x, float y, structGlyphMetrics* metrics, structRenderResult* result)",
  "sceFontRenderCharGlyphImageVertical": "int sceFontRenderCharGlyphImageVertical(structHandle fontHandle, uint32_t code, structRenderSurface* surf, float x, float y, structGlyphMetrics* metrics, structRenderResult* result)",
  "sceFontRenderSurfaceInit": "void sceFontRenderSurfaceInit(structRenderSurface* surf, void* buffer, int bufWidthByte, int pixelSizeByte, int w, int h)",
  "sceFontRenderSurfaceSetScissor": "void sceFontRenderSurfaceSetScissor(structRenderSurface* surf, int x0, int y0, uint32_t w, uint32_t h)",
  "sceFontRenderSurfaceSetStyleFrame": "int sceFontRenderSurfaceSetStyleFrame(structRenderSurface* surf, const structStyleFrame* styleFrame)",
  "sceFontSelectLibraryFt": "const SceFontLibrarySelection sceFontSelectLibraryFt(int value)",
  "sceFontSelectRendererFt": "const SceFontRendererSelection sceFontSelectRendererFt(int value)",
  "sceFontSetEffectSlant": "int sceFontSetEffectSlant(structHandle fontHandle, float slantRatio)",
  "sceFontSetEffectWeight": "int sceFontSetEffectWeight(structHandle fontHandle, float weightXScale, float weightYScale, uint32_t mode)",
  "sceFontSetFontsOpenMode": "int sceFontSetFontsOpenMode(struct _structLibrary * library, uint32_t openMode, uint32_t targetFonts)",
  "sceFontSetResolutionDpi": "int sceFontSetResolutionDpi(structHandle fontHandle, uint32_t hDpi, uint32_t vDpi)",
  "sceFontSetScalePixel": "int sceFontSetScalePixel(structHandle fontHandle, float w, float h)",
  "sceFontSetScalePoint": "int sceFontSetScalePoint(structHandle fontHandle, float w, float h)",
  "sceFontSetScriptLanguage": "int sceFontSetScriptLanguage(structHandle fontHandle, int fontScript, int fontLanguage)",
  "sceFontSetTypographicDesign": "int sceFontSetTypographicDesign(structHandle fontHandle, int typographic, int feature)",
  "sceFontSetupRenderEffectSlant": "int sceFontSetupRenderEffectSlant(structHandle fontHandle, float slantRatio)",
  "sceFontSetupRenderEffectWeight": "int sceFontSetupRenderEffectWeight(structHandle fontHandle, float weightXScale, float weightYScale, uint32_t mode)",
  "sceFontSetupRenderScalePixel": "int sceFontSetupRenderScalePixel(structHandle fontHandle, float w, float h)",
  "sceFontSetupRenderScalePoint": "int sceFontSetupRenderScalePoint(structHandle fontHandle, float w, float h)",
  "sceFontStringGetTerminateCode": "uint32_t sceFontStringGetTerminateCode(structString fontString)",
  "sceFontStringGetTerminateOrder": "void* sceFontStringGetTerminateOrder(structString fontString)",
  "sceFontStringGetWritingForm": "int sceFontStringGetWritingForm(structString fontString)",
  "sceFontStringRefersRenderCharacters": "structRenderCharacter sceFontStringRefersRenderCharacters(structString fontString, structTextCharacter startCharacter, structTextCharacter lastCharacter, uint32_t* characterCount)",
  "sceFontStringRefersTextCharacters": "structTextCharacter sceFontStringRefersTextCharacters(structString fontString, uint32_t*characterCount)",
  "sceFontStyleFrameGetEffectSlant": "int sceFontStyleFrameGetEffectSlant(const structStyleFrame* styleFrame, float*slantRatio)",
  "sceFontStyleFrameGetEffectWeight": "int sceFontStyleFrameGetEffectWeight(const structStyleFrame* styleFrame, float*weightXScale, float*weightYScale, uint32_t*mode)",
  "sceFontStyleFrameGetResolutionDpi": "int sceFontStyleFrameGetResolutionDpi(const structStyleFrame* styleFrame, uint32_t*hDpi, uint32_t*vDpi)",
  "sceFontStyleFrameGetScalePixel": "int sceFontStyleFrameGetScalePixel(const structStyleFrame* styleFrame, float *w, float *h)",
  "sceFontStyleFrameGetScalePoint": "int sceFontStyleFrameGetScalePoint(const structStyleFrame* styleFrame, float *w, float *h)",
  "sceFontStyleFrameInit": "int sceFontStyleFrameInit(structStyleFrame* styleFrame)",
  "sceFontStyleFrameSetEffectSlant": "int sceFontStyleFrameSetEffectSlant(structStyleFrame* styleFrame, float slantRatio)",
  "sceFontStyleFrameSetEffectWeight": "int sceFontStyleFrameSetEffectWeight(structStyleFrame* styleFrame, float weightXScale, float weightYScale, uint32_t mode)",
  "sceFontStyleFrameSetResolutionDpi": "int sceFontStyleFrameSetResolutionDpi(structStyleFrame* styleFrame, uint32_t hDpi, uint32_t vDpi)",
  "sceFontStyleFrameSetScalePixel": "int sceFontStyleFrameSetScalePixel(structStyleFrame* styleFrame, float w, float h)",
  "sceFontStyleFrameSetScalePoint": "int sceFontStyleFrameSetScalePoint(structStyleFrame* styleFrame, float w, float h)",
  "sceFontStyleFrameUnsetEffectSlant": "int sceFontStyleFrameUnsetEffectSlant(structStyleFrame* styleFrame)",
  "sceFontStyleFrameUnsetEffectWeight": "int sceFontStyleFrameUnsetEffectWeight(structStyleFrame* styleFrame)",
  "sceFontStyleFrameUnsetScale": "int sceFontStyleFrameUnsetScale(structStyleFrame* styleFrame)",
  "sceFontSupportExternalFonts": "int sceFontSupportExternalFonts(struct _structLibrary * library, uint32_t fontMax, uint32_t formats)",
  "sceFontSupportSystemFonts": "int sceFontSupportSystemFonts(struct _structLibrary * library)",
  "sceFontTextCodesStepBack": "structTextCodesStep sceFontTextCodesStepBack(structTextCodesStep textCodesStep)",
  "sceFontTextCodesStepNext": "structTextCodesStep sceFontTextCodesStepNext(structTextCodesStep textCodesStep)",
  "sceFontTextSourceInit": "int sceFontTextSourceInit(structTextSource* fontTextSource, const void* textAddress, uint32_t textSizeByte, structTextParser textParser, void* textObject)",
  "sceFontTextSourceRewind": "int sceFontTextSourceRewind(structTextSource* fontTextSource)",
  "sceFontTextSourceSetDefaultFont": "int sceFontTextSourceSetDefaultFont(structTextSource* fontTextSource, structHandle defaultFont)",
  "sceFontTextSourceSetWritingForm": "int sceFontTextSourceSetWritingForm(structTextSource* fontTextSource, int writingForm)",
  "sceFontUnbindRenderer": "int sceFontUnbindRenderer(structHandle fontHandle)",
  "sceFontWordsFindWordCharacters": "int sceFontWordsFindWordCharacters(structWords fontWords, structTextCharacter startCharacter, structTextCharacter termCharacter, structTextCharacter* pLastCharacter, structTextCharacter* pNextCharacter)",
  "sceFontWritingGetRenderMetrics": "int sceFontWritingGetRenderMetrics(structWriting* fontWriting, structWritingMetrics* writingMetrics)",
  "sceFontWritingInit": "int sceFontWritingInit(structWriting* fontWriting, structString fontString, structRenderCharacter fontCharacter)",
  "sceFontWritingLineClear": "int sceFontWritingLineClear(structWritingLine writingLine)",
  "sceFontWritingLineGetOrderingSpace": "int sceFontWritingLineGetOrderingSpace(structWritingLine writingLine, float*headSpace, float*inlineSpace, float*tailSpace, float* advanceSpace)",
  "sceFontWritingLineGetRenderMetrics": "int sceFontWritingLineGetRenderMetrics(structWritingLine writingLine, structWritingMetrics* pWritingMetrics)",
  "sceFontWritingLineRefersRenderStep": "structWritingLineStep sceFontWritingLineRefersRenderStep(structWritingLine writingLine)",
  "sceFontWritingLineWritesOrder": "int sceFontWritingLineWritesOrder(structWritingLine writingLine, structWritingAttribute writingAttribute, const structWritingMetrics* writingMetrics, void* writingOrderer)",
  "sceFontWritingRefersRenderStep": "structWritingRenderStep sceFontWritingRefersRenderStep(structWriting* fontWriting)",
  "sceFontWritingRefersRenderStepCharacter": "structTextCharacter sceFontWritingRefersRenderStepCharacter(structWriting* fontWriting, structWritingLetterStep* pLetterStep)",
  "sceFontWritingSetMaskInvisible": "int sceFontWritingSetMaskInvisible(structWriting* fontWriting, int mask)",
  "sceGameCustomDataDialogClose": "int32_t sceGameCustomDataDialogClose(void)",
  "sceGameCustomDataDialogGetResultA": "int32_t sceGameCustomDataDialogGetResultA(struct *result)",
  "sceGameCustomDataDialogGetStatus": "SceCommonDialogStatus sceGameCustomDataDialogGetStatus(void)",
  "sceGameCustomDataDialogInitialize": "int32_t sceGameCustomDataDialogInitialize()",
  "sceGameCustomDataDialogOpenA": "int32_t sceGameCustomDataDialogOpenA(const struct *param)",
  "sceGameCustomDataDialogTerminate": "int32_t sceGameCustomDataDialogTerminate(void)",
  "sceGameCustomDataDialogUpdateStatus": "SceCommonDialogStatus sceGameCustomDataDialogUpdateStatus(void)",
  "sceGameLiveStreamingApplySocialFeedbackMessageFilter": "int sceGameLiveStreamingApplySocialFeedbackMessageFilter(const size_t maxMessageCount, SceGameLiveStreamingSocialFeedbackMessageFilter filter)",
  "sceGameLiveStreamingClearPresetSocialFeedbackCommands": "int sceGameLiveStreamingClearPresetSocialFeedbackCommands(void)",
  "sceGameLiveStreamingClearSocialFeedbackMessages": "int sceGameLiveStreamingClearSocialFeedbackMessages(const SceGameLiveStreamingSocialFeedbackMessageType type)",
  "sceGameLiveStreamingClearSpoilerTag": "int sceGameLiveStreamingClearSpoilerTag(void)",
  "sceGameLiveStreamingEnableLiveStreaming": "int sceGameLiveStreamingEnableLiveStreaming(const bool isEnableLiveStreaming)",
  "sceGameLiveStreamingGetCurrentBroadcastScreenLayout": "int sceGameLiveStreamingGetCurrentBroadcastScreenLayout(SceGameLiveStreamingBroadcastScreenLayout *layout)",
  "sceGameLiveStreamingGetCurrentStatus2": "int sceGameLiveStreamingGetCurrentStatus2(SceGameLiveStreamingStatus2 *status)",
  "sceGameLiveStreamingGetProgramInfo": "int sceGameLiveStreamingGetProgramInfo(SceGameLiveStreamingProgramInfo *info)",
  "sceGameLiveStreamingGetSocialFeedbackMessages": "int sceGameLiveStreamingGetSocialFeedbackMessages(const SceGameLiveStreamingSocialFeedbackMessageType type, const size_t feedbackCount, SceGameLiveStreamingSocialFeedback *feedback, size_t *acquiredCount)",
  "sceGameLiveStreamingGetSocialFeedbackMessagesCount": "int sceGameLiveStreamingGetSocialFeedbackMessagesCount(const SceGameLiveStreamingSocialFeedbackMessageType type, unsigned int *count)",
  "sceGameLiveStreamingInitialize": "int sceGameLiveStreamingInitialize(const size_t heapSize)",
  "sceGameLiveStreamingLaunchLiveViewerA": "int sceGameLiveStreamingLaunchLiveViewerA(const SceGameLiveStreamingLiveViewerParamA *param)",
  "sceGameLiveStreamingPermitLiveStreaming": "int sceGameLiveStreamingPermitLiveStreaming(const bool isPermitLiveStreaming)",
  "sceGameLiveStreamingPermitServerSideRecording": "int sceGameLiveStreamingPermitServerSideRecording(const bool isPermitServerSideRecording)",
  "sceGameLiveStreamingPostSocialMessage": "int sceGameLiveStreamingPostSocialMessage(const char *message)",
  "sceGameLiveStreamingScreenCloseSeparateMode": "int sceGameLiveStreamingScreenCloseSeparateMode(void)",
  "sceGameLiveStreamingScreenConfigureSeparateMode": "int sceGameLiveStreamingScreenConfigureSeparateMode(const SceGameLiveStreamingScreenSeparateModeParameter *param)",
  "sceGameLiveStreamingScreenInitialize": "int sceGameLiveStreamingScreenInitialize(void)",
  "sceGameLiveStreamingScreenInitializeSeparateModeParameter": "int sceGameLiveStreamingScreenInitializeSeparateModeParameter(SceGameLiveStreamingScreenSeparateModeParameter *param)",
  "sceGameLiveStreamingScreenOpenSeparateMode": "int sceGameLiveStreamingScreenOpenSeparateMode(void)",
  "sceGameLiveStreamingScreenSetMode": "int sceGameLiveStreamingScreenSetMode(const SceGameLiveStreamingScreenMode mode)",
  "sceGameLiveStreamingScreenTerminate": "int sceGameLiveStreamingScreenTerminate(void)",
  "sceGameLiveStreamingSetCameraFrameSetting": "int sceGameLiveStreamingSetCameraFrameSetting(const SceGameLiveStreamingCameraFrameSetting *setting)",
  "sceGameLiveStreamingSetGuardAreas": "int sceGameLiveStreamingSetGuardAreas(const size_t areaCounts, const SceGameLiveStreamingGuardArea *areas)",
  "sceGameLiveStreamingSetInvitationSessionId": "int sceGameLiveStreamingSetInvitationSessionId(const char *sessionId)",
  "sceGameLiveStreamingSetLinkCommentPreset": "int sceGameLiveStreamingSetLinkCommentPreset(const char* message)",
  "sceGameLiveStreamingSetMaxBitrate": "int sceGameLiveStreamingSetMaxBitrate(const unsigned int maxBitrate)",
  "sceGameLiveStreamingSetMetadata": "int sceGameLiveStreamingSetMetadata(const char *metadata)",
  "sceGameLiveStreamingSetPresetSocialFeedbackCommands": "int sceGameLiveStreamingSetPresetSocialFeedbackCommands(const size_t presetCounts, const SceGameLiveStreamingPresetSocialFeedback *preset)",
  "sceGameLiveStreamingSetPresetSocialFeedbackCommandsDescription": "int sceGameLiveStreamingSetPresetSocialFeedbackCommandsDescription(const char *description)",
  "sceGameLiveStreamingSetSpoilerTag": "int sceGameLiveStreamingSetSpoilerTag(const size_t spoilerTagCounts, const SceGameLiveStreamingSpoilerTag *spoilerTag)",
  "sceGameLiveStreamingSetStandbyScreenResource": "int sceGameLiveStreamingSetStandbyScreenResource(const char *resource)",
  "sceGameLiveStreamingStartSocialFeedbackMessageFiltering": "int sceGameLiveStreamingStartSocialFeedbackMessageFiltering(void)",
  "sceGameLiveStreamingStopSocialFeedbackMessageFiltering": "int sceGameLiveStreamingStopSocialFeedbackMessageFiltering(void)",
  "sceGameLiveStreamingTerminate": "int sceGameLiveStreamingTerminate(void)",
  "sceGpuDebuggerEnableTargetSideSupport": "int32_t sceGpuDebuggerEnableTargetSideSupport(void)",
  "sceGpuDebuggerIsGpuDebuggingInProgress": "bool sceGpuDebuggerIsGpuDebuggingInProgress(void)",
  "sceGpuDebuggerSetGlobalExceptionsMask": "int32_t sceGpuDebuggerSetGlobalExceptionsMask(uint32_t exceptionsMask)",
  "sceHandDetectionGetDefaultParam": "int sceHandDetectionGetDefaultParam(struct *detectParam, const void * detectDictPtr)",
  "sceHandDetectionGetWorkingMemorySize": "int sceHandDetectionGetWorkingMemorySize(int width, int height, int rowstride, void * detectDictPtr)",
  "sceHandDetectionLocalGetDefaultParam": "int sceHandDetectionLocalGetDefaultParam(struct *detectLocalParam)",
  "sceHandTrackerGetDataMemorySize": "int sceHandTrackerGetDataMemorySize (int maxHandNum)",
  "sceHandTrackerGetDefaultParam": "int sceHandTrackerGetDefaultParam(struct *trackParam)",
  "sceHandTrackerGetDepthRoi": "int sceHandTrackerGetDepthRoi(int id, int depthRoiWidth, int depthRoiHeight, float *sx, float *sy, float *ex, float *ey, void *trackData)",
  "sceHandTrackerInitialize": "int sceHandTrackerInitialize(int width, int height, int stride, int maxHandNum, void *trackData, int trackDataSize)",
  "sceHandTrackerSetDepthInfo": "int sceHandTrackerSetDepthInfo(int id, const struct *info, void *trackData)",
  "sceHandTrackerSetFaceInfo": "int sceHandTrackerSetFaceInfo(int id, const struct *info, void *trackData)",
  "sceHeadTrackerFinalize": "int32_t sceHeadTrackerFinalize()",
  "sceHeadTrackerGetNumberOfRunningInstance": "int32_t sceHeadTrackerGetNumberOfRunningInstance()",
  "sceHeadTrackerInitialize": "int32_t sceHeadTrackerInitialize(const struct* parameter)",
  "sceHeadTrackerQueryWorkingMemory": "int32_t sceHeadTrackerQueryWorkingMemory(uint32_t* alignment, uint32_t* size)",
  "sceHeadTrackerSearchCandidate": "int32_t sceHeadTrackerSearchCandidate(const struct* parameter, struct* result)",
  "sceHeadTrackerStart": "int32_t sceHeadTrackerStart(const struct* parameter)",
  "sceHeadTrackerStop": "int32_t sceHeadTrackerStop(const enum instanceIndex)",
  "sceHeadTrackerUpdate": "int32_t sceHeadTrackerUpdate(const struct* parameter, struct* result)",
  "sceHmacMd5BlockInit": "int32_t sceHmacMd5BlockInit(struct *pContext, const void *secretkey, uint32_t keylen)",
  "sceHmacMd5BlockResult": "int32_t sceHmacMd5BlockResult(struct *pContext, uint8_t *digest)",
  "sceHmacMd5BlockUpdate": "int32_t sceHmacMd5BlockUpdate(struct *pContext, const void *plain, uint32_t len)",
  "sceHmacMd5Digest": "int32_t sceHmacMd5Digest(const void *secretkey, uint32_t keylen, const void *plain, uint32_t datalen, uint8_t *digest)",
  "sceHmacSha0BlockInit": "int32_t sceHmacSha0BlockInit(struct *pContext, const void *secretkey, uint32_t keylen)",
  "sceHmacSha0BlockResult": "int32_t sceHmacSha0BlockResult(struct *pContext, uint8_t *digest)",
  "sceHmacSha0BlockUpdate": "int32_t sceHmacSha0BlockUpdate(struct *pContext, const void *plain, uint32_t len)",
  "sceHmacSha0Digest": "int32_t sceHmacSha0Digest(const void *secretkey, uint32_t keylen, const void *plain, uint32_t datalen, uint8_t *digest)",
  "sceHmacSha1BlockInit": "int32_t sceHmacSha1BlockInit(struct *pContext, const void *secretkey, uint32_t keylen)",
  "sceHmacSha1BlockResult": "int32_t sceHmacSha1BlockResult(struct *pContext, uint8_t *digest)",
  "sceHmacSha1BlockUpdate": "int32_t sceHmacSha1BlockUpdate(struct *pContext, const void *plain, uint32_t len)",
  "sceHmacSha1Digest": "int32_t sceHmacSha1Digest(const void *secretkey, uint32_t keylen, const void *plain, uint32_t datalen, uint8_t *digest)",
  "sceHmacSha224BlockInit": "int32_t sceHmacSha224BlockInit(struct *pContext, const void *secretkey, uint32_t keylen)",
  "sceHmacSha224BlockResult": "int32_t sceHmacSha224BlockResult(struct *pContext, uint8_t *digest)",
  "sceHmacSha224BlockUpdate": "int32_t sceHmacSha224BlockUpdate(struct *pContext, const void *plain, uint32_t len)",
  "sceHmacSha224Digest": "int32_t sceHmacSha224Digest(const void *secretkey, uint32_t keylen, const void *plain, uint32_t datalen, uint8_t *digest)",
  "sceHmacSha256BlockInit": "int32_t sceHmacSha256BlockInit(struct *pContext, const void *secretkey, uint32_t keylen)",
  "sceHmacSha256BlockResult": "int32_t sceHmacSha256BlockResult(struct *pContext, uint8_t *digest)",
  "sceHmacSha256BlockUpdate": "int32_t sceHmacSha256BlockUpdate(struct *pContext, const void *plain, uint32_t len)",
  "sceHmacSha256Digest": "int32_t sceHmacSha256Digest(const void *secretkey, uint32_t keylen, const void *plain, uint32_t datalen, uint8_t *digest)",
  "sceHmacSha384BlockInit": "int32_t sceHmacSha384BlockInit(struct *pContext, const void *secretkey, uint32_t keylen)",
  "sceHmacSha384BlockResult": "int32_t sceHmacSha384BlockResult(struct *pContext, uint8_t *digest)",
  "sceHmacSha384BlockUpdate": "int32_t sceHmacSha384BlockUpdate(struct *pContext, const void *plain, uint32_t len)",
  "sceHmacSha384Digest": "int32_t sceHmacSha384Digest(const void *secretkey, uint32_t keylen, const void *plain, uint32_t datalen, uint8_t *digest)",
  "sceHmacSha512BlockInit": "int32_t sceHmacSha512BlockInit(struct *pContext, const void *secretkey, uint32_t keylen)",
  "sceHmacSha512BlockResult": "int32_t sceHmacSha512BlockResult(struct *pContext, uint8_t *digest)",
  "sceHmacSha512BlockUpdate": "int32_t sceHmacSha512BlockUpdate(struct *pContext, const void *plain, uint32_t len)",
  "sceHmacSha512Digest": "int32_t sceHmacSha512Digest(const void *secretkey, uint32_t keylen, const void *plain, uint32_t datalen, uint8_t *digest)",
  "sceHmacSha512tBlockInit": "int32_t sceHmacSha512tBlockInit(struct *pContext, uint32_t t, const void *secretkey, uint32_t keylen)",
  "sceHmacSha512tBlockResult": "int32_t sceHmacSha512tBlockResult(struct *pContext, uint8_t *digest)",
  "sceHmacSha512tBlockUpdate": "int32_t sceHmacSha512tBlockUpdate(struct *pContext, const void *plain, uint32_t len)",
  "sceHmacSha512tDigest": "int32_t sceHmacSha512tDigest(uint32_t t, const void *secretkey, uint32_t keylen, const void *plain, uint32_t datalen, uint8_t *digest)",
  "sceHmdClose": "int32_t sceHmdClose(int32_t handle)",
  "sceHmdCloseVrTraceHook": "int32_t sceHmdCloseVrTraceHook(int32_t handle)",
  "sceHmdGet2DEyeOffset": "int32_t sceHmdGet2DEyeOffset(int32_t handle, SceHmdEyeOffset* leftEyeOffset, SceHmdEyeOffset* rightEyeOffset)",
  "sceHmdGetDeviceInformation": "int32_t sceHmdGetDeviceInformation(SceHmdDeviceInformation* info)",
  "sceHmdGetDeviceInformationByHandle": "int32_t sceHmdGetDeviceInformationByHandle(int32_t handle, SceHmdDeviceInformation* info)",
  "sceHmdGetFieldOfView": "int sceHmdGetFieldOfView(int32_t handle, SceHmdFieldOfView* fieldOfView)",
  "sceHmdGetFieldOfViewVrTraceHook": "int32_t sceHmdGetFieldOfViewVrTraceHook(int32_t handle, SceHmdFieldOfView* fieldOfView)",
  "sceHmdInitialize": "int32_t sceHmdInitialize(const SceHmdInitializeParam* param)",
  "sceHmdInitializeVrTraceHook": "int32_t sceHmdInitializeVrTraceHook(const SceHmdInitializeParam *param)",
  "sceHmdOpen": "int32_t sceHmdOpen(SceUserServiceUserId userId, int32_t type, int32_t index, struct *pParam)",
  "sceHmdOpenVrTraceHook": "int32_t sceHmdOpenVrTraceHook(SceUserServiceUserId userId, int32_t type, int32_t index, SceHmdOpenParam *pParam)",
  "sceHmdReprojectionAddDisplayBuffer": "int sceHmdReprojectionAddDisplayBuffer(int32_t index, void *option)",
  "sceHmdReprojectionClearUserEventEnd": "int sceHmdReprojectionClearUserEventEnd(void)",
  "sceHmdReprojectionClearUserEventStart": "int sceHmdReprojectionClearUserEventStart(void)",
  "sceHmdReprojectionDebugGetLastInfo": "int sceHmdReprojectionDebugGetLastInfo(struct *debugInfo)",
  "sceHmdReprojectionDebugGetLastInfoMultilayer": "int sceHmdReprojectionDebugGetLastInfoMultilayer(structMultilayer *debugInfo)",
  "sceHmdReprojectionFinalize": "void sceHmdReprojectionFinalize(void)",
  "sceHmdReprojectionInitializeVrTraceHook": "int sceHmdReprojectionInitializeVrTraceHook(const SceHmdReprojectionResourceInfo *resource, SceHmdReprojectionReprojectionType type, void *option)",
  "sceHmdReprojectionQueryGarlicBuffAlign": "uint32_t sceHmdReprojectionQueryGarlicBuffAlign(void)",
  "sceHmdReprojectionQueryGarlicBuffSize": "size_t sceHmdReprojectionQueryGarlicBuffSize(void)",
  "sceHmdReprojectionQueryOnionBuffAlign": "uint32_t sceHmdReprojectionQueryOnionBuffAlign(void)",
  "sceHmdReprojectionQueryOnionBuffSize": "size_t sceHmdReprojectionQueryOnionBuffSize(void)",
  "sceHmdReprojectionSetCallback": "int sceHmdReprojectionSetCallback(struct *callbackInfo)",
  "sceHmdReprojectionSetCallbackVrTraceHook": "int sceHmdReprojectionSetCallbackVrTraceHook(SceHmdReprojectionCallbackInfo *callbackInfo)",
  "sceHmdReprojectionSetOutputMinColor": "int sceHmdReprojectionSetOutputMinColor(float r, float g, float b)",
  "sceHmdReprojectionSetUserEventEnd": "int sceHmdReprojectionSetUserEventEnd(SceKernelEqueue eq, int id)",
  "sceHmdReprojectionSetUserEventStart": "int sceHmdReprojectionSetUserEventStart(SceKernelEqueue eq, int id)",
  "sceHmdReprojectionStart2dVrVrTraceHook": "int sceHmdReprojectionStart2dVrVrTraceHook(const SceHmdReprojection2dVrParameter *param, int64_t flipArg, void *option)",
  "sceHmdReprojectionStartMultilayer2VrTraceHook": "int sceHmdReprojectionStartMultilayer2VrTraceHook(const SceHmdReprojectionLayerSettings2 *layers, const uint32_t layerCount, const SceHmdReprojectionSettings *reprojectionSettings, int64_t flipArg, void *option)",
  "sceHmdReprojectionStartMultilayerVrTraceHook": "int sceHmdReprojectionStartMultilayerVrTraceHook(const SceHmdReprojectionLayerSettings *layers, const uint32_t layerCount, const SceHmdReprojectionSettings *reprojectionSettings, const SceHmdReprojectionTrackerState *trackerState, int64_t flipArg, void *option)",
  "sceHmdReprojectionStartVrTraceHook": "int32_t sceHmdReprojectionStartVrTraceHook(const SceHmdReprojectionParameter *param, const SceHmdReprojectionTrackerState *trackerState, int64_t flipArg, void *option)",
  "sceHmdReprojectionStartWideNearVrTraceHook": "int sceHmdReprojectionStartWideNearVrTraceHook(const SceHmdReprojectionWideNearParameter *param, const SceHmdReprojectionTrackerState *trackerState, int64_t flipArg, void *option)",
  "sceHmdReprojectionStartWideNearWithOverlayVrTraceHook": "int sceHmdReprojectionStartWideNearWithOverlayVrTraceHook(const SceHmdReprojectionWideNearParameter *param, const SceHmdReprojectionTrackerState *trackerState, int64_t flipArg, const SceHmdReprojectionOverlayParameter *overlayParam, void *option)",
  "sceHmdReprojectionStartWithOverlayVrTraceHook": "int sceHmdReprojectionStartWithOverlayVrTraceHook(const SceHmdReprojectionParameter *param, const SceHmdReprojectionTrackerState *trackerState, int64_t flipArg, const SceHmdReprojectionOverlayParameter *overlayParam, void *option)",
  "sceHmdReprojectionStop": "int sceHmdReprojectionStop(void)",
  "sceHmdReprojectionStopVrTraceHook": "int32_t sceHmdReprojectionStopVrTraceHook(void)",
  "sceHmdReprojectionUnsetCallback": "int sceHmdReprojectionUnsetCallback(void)",
  "sceHmdReprojectionUnsetCallbackVrTraceHook": "int sceHmdReprojectionUnsetCallbackVrTraceHook()",
  "sceHmdReprojectionUnsetDisplayBuffers": "int sceHmdReprojectionUnsetDisplayBuffers(void)",
  "sceHmdSetupDialogClose": "int32_t sceHmdSetupDialogClose(void)",
  "sceHmdSetupDialogGetResult": "int32_t sceHmdSetupDialogGetResult(struct *result)",
  "sceHmdSetupDialogGetStatus": "SceCommonDialogStatus sceHmdSetupDialogGetStatus(void)",
  "sceHmdSetupDialogInitialize": "int32_t sceHmdSetupDialogInitialize(void)",
  "sceHmdSetupDialogOpen": "int32_t sceHmdSetupDialogOpen(const struct *param)",
  "sceHmdSetupDialogTerminate": "int32_t sceHmdSetupDialogTerminate(void)",
  "sceHmdSetupDialogUpdateStatus": "SceCommonDialogStatus sceHmdSetupDialogUpdateStatus(void)",
  "sceHmdTerminate": "int32_t sceHmdTerminate(void)",
  "sceHmdTerminateVrTraceHook": "int32_t sceHmdTerminateVrTraceHook(void)",
  "sceHttpAbortRequest": "int sceHttpAbortRequest(int reqId)",
  "sceHttpAbortWaitRequest": "int sceHttpAbortWaitRequest(void* eh)",
  "sceHttpAddCookie": "int sceHttpAddCookie(int libhttpCtxId, const char *url, const char *cookie, size_t cookieLength)",
  "sceHttpAddRequestHeader": "int sceHttpAddRequestHeader(int id, const char *name, const char *value, uint32_t mode)",
  "sceHttpAuthCacheFlush": "int sceHttpAuthCacheFlush(int libhttpCtxId)",
  "sceHttpCookieExport": "int sceHttpCookieExport(int libhttpCtxId, void *buffer, size_t bufferSize, size_t *exportSize)",
  "sceHttpCookieFlush": "int sceHttpCookieFlush(int libhttpCtxId)",
  "sceHttpCookieImport": "int sceHttpCookieImport(int libhttpCtxId, const void *buffer, size_t bufferSize)",
  "sceHttpCreateConnection": "int sceHttpCreateConnection(int tmplId, const char *serverName, const char *scheme, uint16_t port, int isEnableKeepalive)",
  "sceHttpCreateConnectionWithURL": "int sceHttpCreateConnectionWithURL(int tmplId, const char *url, int isEnableKeepalive)",
  "sceHttpCreateEpoll": "int sceHttpCreateEpoll(int libhttpCtxId, void** eh)",
  "sceHttpCreateRequest": "int sceHttpCreateRequest(int connId, int method, const char *path, uint64_t contentLength)",
  "sceHttpCreateRequest2": "int sceHttpCreateRequest2(int connId, const char* method, const char *path, uint64_t contentLength)",
  "sceHttpCreateRequestWithURL": "int sceHttpCreateRequestWithURL(int connId, int method, const char *url, uint64_t contentLength)",
  "sceHttpCreateRequestWithURL2": "int sceHttpCreateRequestWithURL2(int connId, const char* method, const char *url, uint64_t contentLength)",
  "sceHttpCreateTemplate": "int sceHttpCreateTemplate(int libhttpCtxId, const char *userAgent, int httpVer, int isAutoProxyConf)",
  "sceHttpDeleteConnection": "int sceHttpDeleteConnection(int connId)",
  "sceHttpDeleteRequest": "int sceHttpDeleteRequest(int reqId)",
  "sceHttpDeleteTemplate": "int sceHttpDeleteTemplate(int tmplId)",
  "sceHttpDestroyEpoll": "int sceHttpDestroyEpoll(int libhttpCtxId, void* eh)",
  "sceHttpGetAllResponseHeaders": "int sceHttpGetAllResponseHeaders(int reqId, char **header, size_t *headerSize)",
  "sceHttpGetAuthEnabled": "int sceHttpGetAuthEnabled(int id, int *isEnable)",
  "sceHttpGetAutoRedirect": "int sceHttpGetAutoRedirect(int id, int *isEnable)",
  "sceHttpGetCookie": "int sceHttpGetCookie(int libhttpCtxId, const char *url, char *cookie, size_t *required, size_t prepared, int isSecure)",
  "sceHttpGetCookieEnabled": "int sceHttpGetCookieEnabled(int id, int *isEnable)",
  "sceHttpGetCookieStats": "int sceHttpGetCookieStats(int libhttpCtxId, struct* stats)",
  "sceHttpGetEpoll": "int sceHttpGetEpoll(int id, void** eh, void **userArg)",
  "sceHttpGetLastErrno": "int sceHttpGetLastErrno(int reqId, int* errNum)",
  "sceHttpGetMemoryPoolStats": "int sceHttpGetMemoryPoolStats(int libhttpCtxId, struct* currentStat)",
  "sceHttpGetNonblock": "int sceHttpGetNonblock(int id, int *isEnable)",
  "sceHttpGetResponseContentLength": "int sceHttpGetResponseContentLength(int reqId, int* result, uint64_t *contentLength)",
  "sceHttpGetStatusCode": "int sceHttpGetStatusCode(int reqId, int *statusCode)",
  "sceHttpInit": "int sceHttpInit(int libnetMemId, int libsslCtxId, size_t poolSize)",
  "sceHttpParseResponseHeader": "int sceHttpParseResponseHeader(const char *header, size_t headerLen, const char *fieldStr, const char **fieldValue, size_t *valueLen)",
  "sceHttpParseStatusLine": "int sceHttpParseStatusLine(const char *statusLine, size_t lineLen, int *httpMajorVer, int *httpMinorVer, int *responseCode, const char **reasonPhrase, size_t *phraseLen)",
  "sceHttpReadData": "int sceHttpReadData(int reqId, void *data, size_t size)",
  "sceHttpRedirectCacheFlush": "int sceHttpRedirectCacheFlush(int libhttpCtxId)",
  "sceHttpRemoveRequestHeader": "int sceHttpRemoveRequestHeader(int id, const char *name)",
  "sceHttpSendRequest": "int sceHttpSendRequest(int reqId, const void *postData, size_t size)",
  "sceHttpSetAuthEnabled": "int sceHttpSetAuthEnabled(int id, int isEnable)",
  "sceHttpSetAuthInfoCallback": "int sceHttpSetAuthInfoCallback(int id, SceHttpAuthInfoCallback cbfunc, void *userArg)",
  "sceHttpSetAutoRedirect": "int sceHttpSetAutoRedirect(int id, int isEnable)",
  "sceHttpSetChunkedTransferEnabled": "int sceHttpSetChunkedTransferEnabled(int id, int isEnable)",
  "sceHttpSetConnectTimeOut": "int sceHttpSetConnectTimeOut(int id, uint32_t usec)",
  "sceHttpSetCookieEnabled": "int sceHttpSetCookieEnabled(int id, int isEnable)",
  "sceHttpSetCookieMaxNum": "int sceHttpSetCookieMaxNum(int libhttpCtxId, uint32_t num)",
  "sceHttpSetCookieMaxNumPerDomain": "int sceHttpSetCookieMaxNumPerDomain(int libhttpCtxId, uint32_t num)",
  "sceHttpSetCookieMaxSize": "int sceHttpSetCookieMaxSize(int libhttpCtxId, uint32_t size)",
  "sceHttpSetCookieRecvCallback": "int sceHttpSetCookieRecvCallback(int id, SceHttpCookieRecvCallback cbfunc, void *userArg)",
  "sceHttpSetCookieSendCallback": "int sceHttpSetCookieSendCallback(int id, SceHttpCookieSendCallback cbfunc, void *userArg)",
  "sceHttpSetCookieTotalMaxSize": "int sceHttpSetCookieTotalMaxSize(int libhttpCtxId, uint32_t size)",
  "sceHttpSetEpoll": "int sceHttpSetEpoll(int id, void* eh, void *userArg)",
  "sceHttpSetInflateGZIPEnabled": "int sceHttpSetInflateGZIPEnabled(int id, int isEnable)",
  "sceHttpSetNonblock": "int sceHttpSetNonblock(int id, int isEnable)",
  "sceHttpSetRecvTimeOut": "int sceHttpSetRecvTimeOut(int id, uint32_t usec)",
  "sceHttpSetRedirectCallback": "int sceHttpSetRedirectCallback(int id, SceHttpRedirectCallback cbfunc, void *userArg)",
  "sceHttpSetRequestContentLength": "int sceHttpSetRequestContentLength(int id, uint64_t contentLength)",
  "sceHttpSetRequestStatusCallback": "int sceHttpSetRequestStatusCallback(int id, SceHttpRequestStatusCallback cbfunc, void* userArg)",
  "sceHttpSetResolveRetry": "int sceHttpSetResolveRetry(int id, int retry)",
  "sceHttpSetResolveTimeOut": "int sceHttpSetResolveTimeOut(int id, uint32_t usec)",
  "sceHttpSetResponseHeaderMaxSize": "int sceHttpSetResponseHeaderMaxSize(int id, size_t headerSize)",
  "sceHttpSetSendTimeOut": "int sceHttpSetSendTimeOut(int id, uint32_t usec)",
  "sceHttpTerm": "int sceHttpTerm(int libhttpCtxId)",
  "sceHttpTryGetNonblock": "int sceHttpTryGetNonblock(int id, int *isEnable)",
  "sceHttpTrySetNonblock": "int sceHttpTrySetNonblock(int id, int isEnable)",
  "sceHttpUnsetEpoll": "int sceHttpUnsetEpoll(int id)",
  "sceHttpUriBuild": "int sceHttpUriBuild(char *out, size_t *require, size_t prepare, const struct *srcElement, uint32_t option)",
  "sceHttpUriEscape": "int sceHttpUriEscape(char *out, size_t *require, size_t prepare, const char *in)",
  "sceHttpUriMerge": "int sceHttpUriMerge(char *mergedUrl, const char *url, const char *relativeUrl, size_t *require, size_t prepare, uint32_t option)",
  "sceHttpUriParse": "int sceHttpUriParse(struct *out, const char *srcUrl, void *pool, size_t *require, size_t prepare)",
  "sceHttpUriSweepPath": "int sceHttpUriSweepPath(char *dst, const char *src , size_t srcSize)",
  "sceHttpUriUnescape": "int sceHttpUriUnescape(char *out, size_t *require, size_t prepare, const char *in)",
  "sceHttpWaitRequest": "int sceHttpWaitRequest(void* eh, struct* nbev, int maxevents, int timeout)",
  "sceHttpsDisableOption": "int sceHttpsDisableOption(int id, uint32_t sslFlags)",
  "sceHttpsEnableOption": "int sceHttpsEnableOption(int id, uint32_t sslFlags)",
  "sceHttpsFreeCaList": "int sceHttpsFreeCaList(int libhttpCtxId, SceSslCaList* caList)",
  "sceHttpsGetCaList": "int sceHttpsGetCaList(int libhttpCtxId, SceSslCaList* caList)",
  "sceHttpsGetSslError": "int sceHttpsGetSslError(int id, int *errNum, uint32_t *detail)",
  "sceHttpsLoadCert": "int sceHttpsLoadCert(int libhttpCtxId, int caCertNum, const SceSslData **caList, const SceSslData *cert, const SceSslData *privKey)",
  "sceHttpsSetSslCallback": "int sceHttpsSetSslCallback(int id, SceHttpsCallback cbfunc, void *userArg)",
  "sceHttpsSetSslVersion": "int sceHttpsSetSslVersion(int id, SceSslVersion version)",
  "sceHttpsUnloadCert": "int sceHttpsUnloadCert(int libhttpCtxId)",
  "sceImeBackendAllConfirm": "int sceImeBackendAllConfirm()",
  "sceImeBackendAllDeleteConvertString": "int sceImeBackendAllDeleteConvertString()",
  "sceImeBackendBackspaceCharacter": "int sceImeBackendBackspaceCharacter()",
  "sceImeBackendClose": "int sceImeBackendClose()",
  "sceImeBackendConvertBackward": "int sceImeBackendConvertBackward()",
  "sceImeBackendConvertCancel": "int sceImeBackendConvertCancel()",
  "sceImeBackendConvertForward": "int sceImeBackendConvertForward()",
  "sceImeBackendDeleteCharacter": "int sceImeBackendDeleteCharacter()",
  "sceImeBackendEnterCharacter": "int sceImeBackendEnterCharacter(uint16_t inputCharacter, SceImeBackendOutputStatus *pOutputStatus)",
  "sceImeBackendGetCandidateList": "int sceImeBackendGetCandidateList(int16_t *plistNum, uint16_t *pCandidateString)",
  "sceImeBackendGetCandidateListSize": "int sceImeBackendGetCandidateListSize()",
  "sceImeBackendGetCandidateSelect": "int sceImeBackendGetCandidateSelect(int16_t *pIndex)",
  "sceImeBackendGetCaretIndex": "int sceImeBackendGetCaretIndex()",
  "sceImeBackendGetConfirmString": "int sceImeBackendGetConfirmString(uint16_t *pConfirmString)",
  "sceImeBackendGetConvertMode": "int sceImeBackendGetConvertMode(SceImeBackendConvertMode *mode)",
  "sceImeBackendGetConvertString": "int sceImeBackendGetConvertString(uint16_t *pConvertString)",
  "sceImeBackendGetStatus": "SceImeBackendStatus sceImeBackendGetStatus()",
  "sceImeBackendGetString": "int sceImeBackendGetString(SceImeBackendGetStringMode mode, uint16_t *pString, uint16_t maxLength)",
  "sceImeBackendModeCaretNext": "int sceImeBackendModeCaretNext()",
  "sceImeBackendModeCaretPrevious": "int sceImeBackendModeCaretPrevious()",
  "sceImeBackendOpen": "int sceImeBackendOpen(const SceImeBackendParam *param, const SceImeBackendParamExtended *extendedParam)",
  "sceImeBackendParamInit": "void sceImeBackendParamInit (SceImeBackendParam *param)",
  "sceImeBackendPartConfirm": "int sceImeBackendPartConfirm(int16_t listItem)",
  "sceImeBackendReset": "int sceImeBackendReset()",
  "sceImeBackendSetConvertMode": "int sceImeBackendSetConvertMode(SceImeBackendConvertMode mode)",
  "sceImeBackendTemporalConfirm": "int sceImeBackendTemporalConfirm(int16_t selectIndex)",
  "sceImeClose": "int sceImeClose(void)",
  "sceImeConfirmCandidate": "int sceImeConfirmCandidate(int32_t index)",
  "sceImeDialogAbort": "int sceImeDialogAbort(void)",
  "sceImeDialogGetPanelPositionAndForm": "int sceImeDialogGetPanelPositionAndForm(SceImePositionAndForm *posForm)",
  "sceImeDialogGetPanelSize": "int sceImeDialogGetPanelSize(const struct *param, uint32_t *width, uint32_t *height)",
  "sceImeDialogGetPanelSizeExtended": "int sceImeDialogGetPanelSizeExtended(const struct *param, const SceImeParamExtended *extendedParam, uint32_t *width, uint32_t *height)",
  "sceImeDialogGetResult": "int sceImeDialogGetResult(struct* result)",
  "sceImeDialogGetStatus": "SceImeDialogStatus sceImeDialogGetStatus(void)",
  "sceImeDialogInit": "int sceImeDialogInit(const struct *param, const SceImeParamExtended *extendedParam)",
  "sceImeDialogTerm": "int sceImeDialogTerm(void)",
  "sceImeDisableController": "int sceImeDisableController(void)",
  "sceImeGetPanelPositionAndForm": "int sceImeGetPanelPositionAndForm(SceImePositionAndForm *posForm)",
  "sceImeGetPanelSize": "int sceImeGetPanelSize(const SceImeParam *param, uint32_t *width, uint32_t *height)",
  "sceImeKeyboardClose": "int sceImeKeyboardClose(SceUserServiceUserId userId)",
  "sceImeKeyboardGetInfo": "int sceImeKeyboardGetInfo(uint32_t resourceId, SceImeKeyboardInfo *info)",
  "sceImeKeyboardGetResourceId": "int sceImeKeyboardGetResourceId(SceUserServiceUserId userId, SceImeKeyboardResourceIdArray *resourceIdArray)",
  "sceImeKeyboardOpen": "int sceImeKeyboardOpen(SceUserServiceUserId userId, const SceImeKeyboardParam *param)",
  "sceImeKeyboardSetMode": "int sceImeKeyboardSetMode(SceUserServiceUserId userId, uint32_t mode)",
  "sceImeOpen": "int sceImeOpen(const SceImeParam *param, const SceImeParamExtended *extParam)",
  "sceImeParamInit": "void sceImeParamInit(SceImeParam *param)",
  "sceImeSetCandidateIndex": "int sceImeSetCandidateIndex(int32_t index)",
  "sceImeSetCaret": "int sceImeSetCaret(const SceImeCaret *caret)",
  "sceImeSetText": "int sceImeSetText(const wchar_t *text, uint32_t length)",
  "sceImeSetTextGeometry": "int sceImeSetTextGeometry(SceImeTextAreaMode mode, const SceImeTextGeometry *geometry)",
  "sceImeUpdate": "int sceImeUpdate(SceImeEventHandler handler)",
  "sceInvitationDialogClose": "int32_t sceInvitationDialogClose(void)",
  "sceInvitationDialogGetResultA": "int32_t sceInvitationDialogGetResultA(struct *result)",
  "sceInvitationDialogGetStatus": "SceCommonDialogStatus sceInvitationDialogGetStatus(void)",
  "sceInvitationDialogInitialize": "int32_t sceInvitationDialogInitialize()",
  "sceInvitationDialogOpenA": "int32_t sceInvitationDialogOpenA(const struct *param)",
  "sceInvitationDialogTerminate": "int32_t sceInvitationDialogTerminate(void)",
  "sceInvitationDialogUpdateStatus": "SceCommonDialogStatus sceInvitationDialogUpdateStatus(void)",
  "sceJpegDecCreate": "int32_t sceJpegDecCreate(const struct *param, void *memoryAddress, uint32_t memorySize, void * *handle)",
  "sceJpegDecDecode": "int32_t sceJpegDecDecode(void * handle, const struct *param, struct *imageInfo)",
  "sceJpegDecDelete": "int32_t sceJpegDecDelete(void * handle)",
  "sceJpegDecParseHeader": "int32_t sceJpegDecParseHeader(const struct *param, struct *imageInfo)",
  "sceJpegDecQueryMemorySize": "int32_t sceJpegDecQueryMemorySize(const struct *param)",
  "sceJpegEncCreate": "int32_t sceJpegEncCreate(const struct *param, void *memoryAddress, uint32_t memorySize, void * *handle)",
  "sceJpegEncDelete": "int32_t sceJpegEncDelete(void * handle)",
  "sceJpegEncEncode": "int32_t sceJpegEncEncode(void * handle, const struct *param, struct *outputInfo)",
  "sceJpegEncQueryMemorySize": "int32_t sceJpegEncQueryMemorySize(const struct *param)",
  "sceKernelAddFileEvent": "int sceKernelAddFileEvent(struct _SceKernelEqueue* eq, int fd, int watch, void *udata)",
  "sceKernelAddHRTimerEvent": "int sceKernelAddHRTimerEvent(struct _SceKernelEqueue* eq, int id, SceKernelTimespec *ts, void *udata)",
  "sceKernelAddReadEvent": "int sceKernelAddReadEvent(struct _SceKernelEqueue* eq, int fd, size_t size, void *udata)",
  "sceKernelAddTimerEvent": "int sceKernelAddTimerEvent(struct _SceKernelEqueue* eq, int id, SceKernelUseconds usec, void *udata)",
  "sceKernelAddUserEvent": "int sceKernelAddUserEvent(struct _SceKernelEqueue* eq, int id)",
  "sceKernelAddUserEventEdge": "int sceKernelAddUserEventEdge(struct _SceKernelEqueue* eq, int id)",
  "sceKernelAddWriteEvent": "int sceKernelAddWriteEvent(struct _SceKernelEqueue* eq, int fd, size_t size, void *udata)",
  "sceKernelAioCancelRequest": "int sceKernelAioCancelRequest(int id, int *state)",
  "sceKernelAioDeleteRequest": "int sceKernelAioDeleteRequest(int id, int *ret)",
  "sceKernelAioInitialize": "int sceKernelAioInitialize(struct* param)",
  "sceKernelAioInitializeImpl": "int sceKernelAioInitializeImpl(void* p, int size)",
  "sceKernelAioInitializeParam": "void sceKernelAioInitializeParam(struct* param)",
  "sceKernelAioPollRequest": "int sceKernelAioPollRequest(int id, int *state)",
  "sceKernelAioSetParam": "int sceKernelAioSetParam(struct* param, int schedulingWindowSize, int delayedCountLimit, uint32_t enableSplit, uint32_t splitSize, uint32_t splitChunkSize)",
  "sceKernelAioWaitRequest": "int sceKernelAioWaitRequest(int id, int *state, SceKernelUseconds *usec)",
  "sceKernelAllocateDirectMemory": "int32_t sceKernelAllocateDirectMemory(off_t searchStart, off_t searchEnd, size_t len, size_t alignment, int memoryType, off_t *physAddrOut)",
  "sceKernelAllocateMainDirectMemory": "int32_t sceKernelAllocateMainDirectMemory(size_t len, size_t alignment, int memoryType, off_t *physAddrOut)",
  "sceKernelAvailableDirectMemorySize": "int32_t sceKernelAvailableDirectMemorySize(off_t start, off_t end, size_t alignment, off_t *startOut, size_t *sizeOut)",
  "sceKernelAvailableFlexibleMemorySize": "int32_t sceKernelAvailableFlexibleMemorySize(size_t *sizeOut)",
  "sceKernelBatchMap": "int32_t sceKernelBatchMap(SceKernelBatchMapEntry* entries, int numberOfEntries, int* numberOfEntriesOut)",
  "sceKernelBatchMap2": "int32_t sceKernelBatchMap2(SceKernelBatchMapEntry* entries, int numberOfEntries, int* numberOfEntriesOut, int flags)",
  "sceKernelCancelEventFlag": "int sceKernelCancelEventFlag(struct _SceKernelEventFlag* ef, uint64_t setPattern, int *pNumWaitThreads)",
  "sceKernelCancelSema": "int sceKernelCancelSema(struct _SceKernelSema* sem, int count, int *threads)",
  "sceKernelCheckReachability": "int sceKernelCheckReachability(const char *path)",
  "sceKernelCheckedReleaseDirectMemory": "int32_t sceKernelCheckedReleaseDirectMemory(off_t start, size_t len)",
  "sceKernelChmod": "int sceKernelChmod(const char *path, mode_t mode)",
  "sceKernelClearEventFlag": "int sceKernelClearEventFlag(struct _SceKernelEventFlag* ef, uint64_t bitPattern)",
  "sceKernelClockGetres": "int sceKernelClockGetres(SceKernelClockid clockId, SceKernelTimespec *tp)",
  "sceKernelClockGettime": "int sceKernelClockGettime(SceKernelClockid clockId, SceKernelTimespec *tp)",
  "sceKernelClose": "int sceKernelClose(int d)",
  "sceKernelCreateEqueue": "int sceKernelCreateEqueue(struct _SceKernelEqueue* *eq, const char *name)",
  "sceKernelCreateEventFlag": "int sceKernelCreateEventFlag(struct _SceKernelEventFlag* *ef, const char *pName, uint32_t attr, uint64_t initPattern, const struct _SceKernelEventFlag*OptParam *pOptParam)",
  "sceKernelCreateSema": "int sceKernelCreateSema(struct _SceKernelSema* *sem, const char *name, uint32_t attr, int init, int max, const struct _SceKernelSema*OptParam *opt)",
  "sceKernelDeleteEqueue": "int sceKernelDeleteEqueue(struct _SceKernelEqueue* eq)",
  "sceKernelDeleteEventFlag": "int sceKernelDeleteEventFlag(struct _SceKernelEventFlag* ef)",
  "sceKernelDeleteFileEvent": "int sceKernelDeleteFileEvent(struct _SceKernelEqueue* eq, int fd)",
  "sceKernelDeleteHRTimerEvent": "int sceKernelDeleteHRTimerEvent(struct _SceKernelEqueue* eq, int id)",
  "sceKernelDeleteReadEvent": "int sceKernelDeleteReadEvent(struct _SceKernelEqueue* eq, int fd)",
  "sceKernelDeleteSema": "int sceKernelDeleteSema(struct _SceKernelSema* sem)",
  "sceKernelDeleteTimerEvent": "int sceKernelDeleteTimerEvent(struct _SceKernelEqueue* eq, int id)",
  "sceKernelDeleteUserEvent": "int sceKernelDeleteUserEvent(struct _SceKernelEqueue* eq, int id)",
  "sceKernelDeleteWriteEvent": "int sceKernelDeleteWriteEvent(struct _SceKernelEqueue* eq, int fd)",
  "sceKernelDirectMemoryQuery": "int32_t sceKernelDirectMemoryQuery(off_t offset, int flags, void *info, size_t infoSize)",
  "sceKernelFchmod": "int sceKernelFchmod(int fd, mode_t mode)",
  "sceKernelFdatasync": "int sceKernelFdatasync(int fd)",
  "sceKernelFstat": "int sceKernelFstat(int fd, struct stat *sb)",
  "sceKernelFsync": "int sceKernelFsync(int fd)",
  "sceKernelFtruncate": "int sceKernelFtruncate(int fd, off_t length)",
  "sceKernelFutimes": "int sceKernelFutimes(int fd, const SceKernelTimeval *times)",
  "sceKernelGetCpumode": "int sceKernelGetCpumode()",
  "sceKernelGetCurrentCpu": "int sceKernelGetCurrentCpu(void)",
  "sceKernelGetDirectMemorySize": "size_t sceKernelGetDirectMemorySize()",
  "sceKernelGetDirectMemoryType": "int32_t sceKernelGetDirectMemoryType(off_t start, int *memoryType, off_t *regionStartOut, off_t *regionEndOut)",
  "sceKernelGetEventData": "intptr_t sceKernelGetEventData(const struct kevent *ev)",
  "sceKernelGetEventError": "int sceKernelGetEventError(const struct kevent *ev)",
  "sceKernelGetEventFflags": "unsigned int sceKernelGetEventFflags(const struct kevent *ev)",
  "sceKernelGetEventFilter": "int sceKernelGetEventFilter(const struct kevent *ev)",
  "sceKernelGetEventId": "uintptr_t sceKernelGetEventId(const struct kevent *ev)",
  "sceKernelGetEventUserData": "void * sceKernelGetEventUserData(const struct kevent *ev)",
  "sceKernelGetGPI": "uint64_t sceKernelGetGPI()",
  "sceKernelGetModuleList": "int sceKernelGetModuleList(SceKernelModule *array, size_t numArray, size_t *actualNum)",
  "sceKernelGetPageTableStats": "int32_t sceKernelGetPageTableStats(int* cpuTotal, int* cpuAvailable, int* gpuTotal, int* gpuAvailable)",
  "sceKernelGetProcessTime": "uint64_t sceKernelGetProcessTime(void)",
  "sceKernelGetProcessTimeCounter": "uint64_t sceKernelGetProcessTimeCounter(void)",
  "sceKernelGetProcessTimeCounterFrequency": "uint64_t sceKernelGetProcessTimeCounterFrequency(void)",
  "sceKernelGetPrtAperture": "int32_t sceKernelGetPrtAperture(int index, void **addr, size_t *len)",
  "sceKernelGetTscFrequency": "uint64_t sceKernelGetTscFrequency(void)",
  "sceKernelGetdents": "int sceKernelGetdents(int fd, char *buf, int nbytes)",
  "sceKernelGetdirentries": "int sceKernelGetdirentries(int fd, char *buf, int nbytes, long *basep)",
  "sceKernelGettimeofday": "int sceKernelGettimeofday(SceKernelTimeval *tp)",
  "sceKernelIsNeoMode": "int sceKernelIsNeoMode()",
  "sceKernelIsStack": "int32_t sceKernelIsStack(void* addr, void** start, void** end)",
  "sceKernelJitCreateAliasOfSharedMemory": "int32_t sceKernelJitCreateAliasOfSharedMemory(int fd, int maxProt, int *fdOut)",
  "sceKernelJitCreateSharedMemory": "int32_t sceKernelJitCreateSharedMemory(const char *name, size_t len, int maxProt, int *fdOut)",
  "sceKernelJitGetSharedMemoryInfo": "int32_t sceKernelJitGetSharedMemoryInfo(int fd, char* name, int nameBufferSize, void **startOut, size_t *lenOut, int *maxProtOut)",
  "sceKernelJitMapSharedMemory": "int32_t sceKernelJitMapSharedMemory(int fd, int prot, void **startOut)",
  "sceKernelLoadStartModule": "SceKernelModule sceKernelLoadStartModule(const char *moduleFileName, size_t args, const void *argp, uint32_t flags, const SceKernelLoadModuleOpt *pOpt, int *pRes)",
  "sceKernelLseek": "off_t sceKernelLseek(int fildes, off_t offset, int whence)",
  "sceKernelLwfsAllocateBlock": "int sceKernelLwfsAllocateBlock(int fd, off_t size)",
  "sceKernelLwfsLseek": "off_t sceKernelLwfsLseek(int fd, off_t offset, int whence)",
  "sceKernelLwfsSetAttribute": "int sceKernelLwfsSetAttribute(int fd, int flags)",
  "sceKernelLwfsTrimBlock": "int sceKernelLwfsTrimBlock(int fd, off_t size)",
  "sceKernelLwfsWrite": "ssize_t sceKernelLwfsWrite(int fd, const void *buf, size_t nbytes)",
  "sceKernelMapDirectMemory": "int32_t sceKernelMapDirectMemory(void **addr, size_t len, int prot, int flags, off_t directMemoryStart, size_t maxPageSize)",
  "sceKernelMapDirectMemory2": "int32_t sceKernelMapDirectMemory2(void **addr, size_t len, int type, int prot, int flags, off_t directMemoryStart, size_t maxPageSize)",
  "sceKernelMapFlexibleMemory": "int32_t sceKernelMapFlexibleMemory(void** addrInOut, size_t len, int prot, int flags)",
  "sceKernelMapNamedDirectMemory": "int32_t sceKernelMapNamedDirectMemory(void **addr, size_t len, int prot, int flags, off_t directMemoryStart, size_t alignment, const char *name)",
  "sceKernelMapNamedFlexibleMemory": "int32_t sceKernelMapNamedFlexibleMemory(void** addrInOut, size_t len, int prot, int flags, const char *name)",
  "sceKernelMemoryPoolBatch": "int32_t sceKernelMemoryPoolBatch(const SceKernelMemoryPoolBatchEntry *entries, int n, int *indexOut, int flags)",
  "sceKernelMemoryPoolCommit": "int32_t sceKernelMemoryPoolCommit(void *addr, size_t len, int type, int prot, int flags)",
  "sceKernelMemoryPoolDecommit": "int32_t sceKernelMemoryPoolDecommit(void *addr, size_t len, int flags)",
  "sceKernelMemoryPoolExpand": "int32_t sceKernelMemoryPoolExpand(off_t searchStart, off_t searchEnd, size_t len, size_t alignment, off_t *physAddrOut)",
  "sceKernelMemoryPoolGetBlockStats": "int32_t sceKernelMemoryPoolGetBlockStats(SceKernelMemoryPoolBlockStats *output, size_t outputSize)",
  "sceKernelMemoryPoolReserve": "int32_t sceKernelMemoryPoolReserve(void *addrIn, size_t len, size_t alignment, int flags, void **addrOut)",
  "sceKernelMkdir": "int sceKernelMkdir(const char *path, mode_t mode)",
  "sceKernelMlock": "int sceKernelMlock(const void *addr, size_t len)",
  "sceKernelMlockall": "int sceKernelMlockall(int flags)",
  "sceKernelMmap": "int sceKernelMmap(void *addr, size_t len, int prot, int flags, int fd, off_t offset, void **res)",
  "sceKernelMprotect": "int sceKernelMprotect(const void *addr, size_t len, int prot)",
  "sceKernelMsync": "int sceKernelMsync(void *addr, size_t len, int flags)",
  "sceKernelMtypeprotect": "int32_t sceKernelMtypeprotect(const void *addr, size_t size, int type, int prot)",
  "sceKernelMunlock": "int sceKernelMunlock(const void *addr, size_t len)",
  "sceKernelMunlockall": "int sceKernelMunlockall(void)",
  "sceKernelMunmap": "int sceKernelMunmap(void *addr, size_t len)",
  "sceKernelNanosleep": "int sceKernelNanosleep(const SceKernelTimespec *rqtp, SceKernelTimespec *rmtp)",
  "sceKernelOpen": "int sceKernelOpen(const char *path, int flags, mode_t mode)",
  "sceKernelPollEventFlag": "int sceKernelPollEventFlag(struct _SceKernelEventFlag* ef, uint64_t bitPattern, uint32_t waitMode, uint64_t *pResultPat)",
  "sceKernelPollSema": "int sceKernelPollSema(struct _SceKernelSema* sem, int need)",
  "sceKernelPread": "ssize_t sceKernelPread(int d, void *buf, size_t nbytes, off_t offset)",
  "sceKernelPreadv": "ssize_t sceKernelPreadv(int d, const struct iovec *iov, int iovcnt, off_t offset)",
  "sceKernelPwrite": "ssize_t sceKernelPwrite(int d, const void *buf, size_t nbytes, off_t offset)",
  "sceKernelPwritev": "ssize_t sceKernelPwritev(int d, const struct iovec *iov, int iovcnt, off_t offset)",
  "sceKernelQueryMemoryProtection": "int32_t sceKernelQueryMemoryProtection(void* addr, void** start, void** end, int* prot)",
  "sceKernelRead": "ssize_t sceKernelRead(int d, void *buf, size_t nbytes)",
  "sceKernelReadTsc": "uint64_t sceKernelReadTsc(void)",
  "sceKernelReadv": "ssize_t sceKernelReadv(int d, const struct iovec *iov, int iovcnt)",
  "sceKernelReleaseDirectMemory": "int32_t sceKernelReleaseDirectMemory(off_t start, size_t len)",
  "sceKernelReleaseFlexibleMemory": "int32_t sceKernelReleaseFlexibleMemory(void* addr, size_t len)",
  "sceKernelRename": "int sceKernelRename(const char *from, const char *to)",
  "sceKernelReserveVirtualRange": "int sceKernelReserveVirtualRange(void **addr, size_t len, int flags, size_t alignment)",
  "sceKernelRmdir": "int sceKernelRmdir(const char *path)",
  "sceKernelSetCompressionAttribute": "int sceKernelSetCompressionAttribute(int fd, int flag)",
  "sceKernelSetEventFlag": "int sceKernelSetEventFlag(struct _SceKernelEventFlag* ef, uint64_t bitPattern)",
  "sceKernelSetFsstParam": "int sceKernelSetFsstParam(int prio, SceKernelCpumask mask)",
  "sceKernelSetGPO": "void sceKernelSetGPO(uint32_t uiBits)",
  "sceKernelSetPrtAperture": "int32_t sceKernelSetPrtAperture(int index, void *addr, size_t len)",
  "sceKernelSetVirtualRangeName": "int32_t sceKernelSetVirtualRangeName(void* start, size_t len, const char *name)",
  "sceKernelSignalSema": "int sceKernelSignalSema(struct _SceKernelSema* sem, int count)",
  "sceKernelSleep": "unsigned int sceKernelSleep(unsigned int seconds)",
  "sceKernelStat": "int sceKernelStat(const char *path, struct stat *sb)",
  "sceKernelStopUnloadModule": "int sceKernelStopUnloadModule(SceKernelModule handle, size_t args, const void *argp, uint32_t flags, const SceKernelUnloadModuleOpt *pOpt, int *pRes)",
  "sceKernelSync": "void sceKernelSync(void)",
  "sceKernelTriggerUserEvent": "int sceKernelTriggerUserEvent(struct _SceKernelEqueue* eq, int id, void *udata)",
  "sceKernelTruncate": "int sceKernelTruncate(const char *path, off_t length)",
  "sceKernelUnlink": "int sceKernelUnlink(const char *path)",
  "sceKernelUsleep": "int sceKernelUsleep(SceKernelUseconds microseconds)",
  "sceKernelUtimes": "int sceKernelUtimes(const char *path, const SceKernelTimeval *times)",
  "sceKernelUuidCreate": "int sceKernelUuidCreate(SceKernelUuid* outUuid)",
  "sceKernelVirtualQuery": "int32_t sceKernelVirtualQuery(const void *addr, int flags, SceKernelVirtualQueryInfo *info, size_t infoSize)",
  "sceKernelWaitEqueue": "int sceKernelWaitEqueue(struct _SceKernelEqueue* eq, struct kevent *ev, int num, int *out, SceKernelUseconds *timo)",
  "sceKernelWaitEventFlag": "int sceKernelWaitEventFlag(struct _SceKernelEventFlag* ef, uint64_t bitPattern, uint32_t waitMode, uint64_t *pResultPat, SceKernelUseconds *pTimeout)",
  "sceKernelWaitSema": "int sceKernelWaitSema(struct _SceKernelSema* sem, int need, SceKernelUseconds *timo)",
  "sceKernelWrite": "ssize_t sceKernelWrite(int d, const void *buf, size_t nbytes)",
  "sceKernelWritev": "ssize_t sceKernelWritev(int d, const struct iovec *iov, int iovcnt)",
  "sceLibcFopenWithFD": "FILE *sceLibcFopenWithFD(_FD_TYPE, const char *)",
  "sceLibcFopenWithFH": "FILE *sceLibcFopenWithFH(signed int, const char *)",
  "sceLibcGetFD": "_FD_TYPE sceLibcGetFD(FILE *)",
  "sceLibcGetFH": "signed int sceLibcGetFH(FILE *)",
  "sceLibcMspaceCalloc": "void* sceLibcMspaceCalloc(void* msp, size_t nelem, size_t size)",
  "sceLibcMspaceCreate": "void* sceLibcMspaceCreate(const char *name, void *base, size_t capacity, unsigned int flag)",
  "sceLibcMspaceDestroy": "int sceLibcMspaceDestroy(void* msp)",
  "sceLibcMspaceFree": "int sceLibcMspaceFree(void* msp, void *ptr)",
  "sceLibcMspaceIsHeapEmpty": "int sceLibcMspaceIsHeapEmpty(void* msp)",
  "sceLibcMspaceMalloc": "void* sceLibcMspaceMalloc(void* msp, size_t size)",
  "sceLibcMspaceMallocStats": "int sceLibcMspaceMallocStats(void* msp, SceLibcMallocManagedSize *mmsize)",
  "sceLibcMspaceMallocStatsFast": "int sceLibcMspaceMallocStatsFast(void* msp, SceLibcMallocManagedSize *mmsize)",
  "sceLibcMspaceMallocUsableSize": "size_t sceLibcMspaceMallocUsableSize(void *ptr)",
  "sceLibcMspaceMemalign": "void* sceLibcMspaceMemalign(void* msp, size_t boundary, size_t size)",
  "sceLibcMspacePosixMemalign": "int sceLibcMspacePosixMemalign(void* msp, void **ptr, size_t boundary, size_t size)",
  "sceLibcMspaceRealloc": "void* sceLibcMspaceRealloc(void* msp, void *ptr, size_t size)",
  "sceLibcMspaceReallocalign": "void* sceLibcMspaceReallocalign(void* msp, void *ptr, size_t boundary, size_t size)",
  "sceLoginDialogClose": "int32_t sceLoginDialogClose(void)",
  "sceLoginDialogGetResult": "int32_t sceLoginDialogGetResult(struct *result)",
  "sceLoginDialogGetStatus": "enum sceLoginDialogGetStatus(void)",
  "sceLoginDialogInitialize": "int32_t sceLoginDialogInitialize(void)",
  "sceLoginDialogOpen": "int32_t sceLoginDialogOpen(const struct *param)",
  "sceLoginDialogTerminate": "int32_t sceLoginDialogTerminate(void)",
  "sceLoginDialogUpdateStatus": "enum sceLoginDialogUpdateStatus(void)",
  "sceLoginServiceInitialize": "int32_t sceLoginServiceInitialize(void)",
  "sceLoginServiceRequestDevices": "int32_t sceLoginServiceRequestDevices(const SceLoginServiceDeviceRequestList *param)",
  "sceLoginServiceTerminate": "int32_t sceLoginServiceTerminate(void)",
  "sceM4aacEncClearContext": "int32_t sceM4aacEncClearContext(int32_t m4aacEncHandle)",
  "sceM4aacEncCreateEncoder": "int32_t sceM4aacEncCreateEncoder(int32_t channels, int32_t samplingRate, int32_t bitRate, int32_t inputFormat, int32_t outputFormat, int32_t *pInternalError)",
  "sceM4aacEncDeleteEncoder": "int32_t sceM4aacEncDeleteEncoder(int32_t m4aacEncHandle, int32_t *pInternalError)",
  "sceM4aacEncEncode": "int32_t sceM4aacEncEncode(int32_t m4aacEncHandle, void *pInput, uint32_t inputByte, void *pOutput, uint32_t *pOutputByte, int32_t *pInternalError)",
  "sceM4aacEncFlush": "int32_t sceM4aacEncFlush(int32_t m4aacEncHandle, void *pOutput, uint32_t *pOutputByte, int32_t *pInternalError)",
  "sceMatAlloc": "SCEMAT_INTERFACE void sceMatAlloc(const void* ptr, uint64_t size, uint32_t padding, uint16_t group)",
  "sceMatAllocPhysicalMemory": "SCEMAT_INTERFACE void sceMatAllocPhysicalMemory(uint64_t physicalAddress, uint64_t size, uint64_t alignment, int32_t type)",
  "sceMatAllocPoolMemory": "SCEMAT_INTERFACE uint64_t sceMatAllocPoolMemory(const void* baseAddress, uint64_t size, uint16_t group)",
  "sceMatBatchMap": "SCEMAT_INTERFACE void sceMatBatchMap(const SceKernelBatchMapEntry *entries, int32_t numberOfEntries, int32_t flags)",
  "sceMatFree": "SCEMAT_INTERFACE void sceMatFree(const void* ptr)",
  "sceMatFreePoolMemory": "SCEMAT_INTERFACE void sceMatFreePoolMemory(uint64_t pool)",
  "sceMatInitialize": "SCEMAT_INTERFACE int sceMatInitialize(uint32_t flags)",
  "sceMatLock": "SCEMAT_INTERFACE void sceMatLock()",
  "sceMatMapDirectMemory": "SCEMAT_INTERFACE void sceMatMapDirectMemory(const void* virtualAddress, uint64_t size, int32_t prot, int32_t flags, uint64_t physicalAddress, uint64_t alignment, int32_t memoryType)",
  "sceMatMapFlexibleMemory": "SCEMAT_INTERFACE void sceMatMapFlexibleMemory(const void* virtualAddress, uint64_t size, int32_t prot, int32_t flags)",
  "sceMatMemoryPoolBatch": "SCEMAT_INTERFACE void sceMatMemoryPoolBatch(const SceKernelMemoryPoolBatchEntry *entries, int32_t numberOfEntries, int32_t flags)",
  "sceMatMemoryPoolCommit": "SCEMAT_INTERFACE void sceMatMemoryPoolCommit(const void* virtualAddress, uint64_t size, int32_t type, int32_t prot, int32_t flags)",
  "sceMatMemoryPoolDecommit": "SCEMAT_INTERFACE void sceMatMemoryPoolDecommit(const void* virtualAddress, uint64_t size, int32_t flags)",
  "sceMatMemoryPoolExpand": "SCEMAT_INTERFACE void sceMatMemoryPoolExpand(uint64_t physicalAddress, uint64_t size, uint64_t alignment)",
  "sceMatMemoryPoolReserve": "SCEMAT_INTERFACE void sceMatMemoryPoolReserve(const void* virtualAddress, uint64_t size, uint64_t alignment, int32_t flags)",
  "sceMatMprotect": "SCEMAT_INTERFACE void sceMatMprotect(const void* virtualAddress, uint64_t size, int32_t prot)",
  "sceMatMtypeprotect": "SCEMAT_INTERFACE void sceMatMtypeprotect(const void* virtualAddress, uint64_t size, int32_t type, int32_t prot)",
  "sceMatNewFrame": "SCEMAT_INTERFACE void sceMatNewFrame()",
  "sceMatPopMarker": "SCEMAT_INTERFACE void sceMatPopMarker(void)",
  "sceMatPushMarker": "SCEMAT_INTERFACE void sceMatPushMarker(const char *label, uint32_t color, uint32_t flags)",
  "sceMatPushMarkerStatic": "SCEMAT_INTERFACE void sceMatPushMarkerStatic(const char *label, uint32_t color, uint32_t flags)",
  "sceMatRealloc": "SCEMAT_INTERFACE void sceMatRealloc(const void* ptr, const void* origPtr, uint64_t size, uint32_t padding, uint16_t group)",
  "sceMatReallocPoolMemory": "SCEMAT_INTERFACE void sceMatReallocPoolMemory(uint64_t pool, const void* baseAddress, const void* origBaseAddress, uint64_t size, uint16_t group)",
  "sceMatRegisterGroup": "SCEMAT_INTERFACE void sceMatRegisterGroup(uint16_t group, const char* name, uint16_t parentGroup)",
  "sceMatReleaseFlexibleMemory": "SCEMAT_INTERFACE void sceMatReleaseFlexibleMemory(const void* virtualAddress, uint64_t size)",
  "sceMatReleasePhysicalMemory": "SCEMAT_INTERFACE void sceMatReleasePhysicalMemory(uint64_t physicalAddress, uint64_t size)",
  "sceMatReserveVirtualRange": "SCEMAT_INTERFACE void sceMatReserveVirtualRange(const void *virtualAddress, uint64_t size, int32_t flags, uint64_t alignment)",
  "sceMatSetPrtAperture": "SCEMAT_INTERFACE void sceMatSetPrtAperture(int32_t apertureId, const void* address, uint64_t size)",
  "sceMatSetThreadInfo": "SCEMAT_INTERFACE void sceMatSetThreadInfo(uint32_t threadId, const char* name, uint64_t stackSize)",
  "sceMatSetUserCallstackCapture": "SCEMAT_INTERFACE void sceMatSetUserCallstackCapture(SceMatUserCallstackCaptureFn captureFn)",
  "sceMatTagAllocation": "SCEMAT_INTERFACE void sceMatTagAllocation(const void* pAddress, const char* name)",
  "sceMatTagPool": "SCEMAT_INTERFACE void sceMatTagPool(uint64_t pool, const char* name)",
  "sceMatTagVirtualMemory": "SCEMAT_INTERFACE void sceMatTagVirtualMemory(const void* virtualAddress, uint64_t size, const char* tag)",
  "sceMatUninitialize": "SCEMAT_INTERFACE int sceMatUninitialize()",
  "sceMatUnlock": "SCEMAT_INTERFACE void sceMatUnlock()",
  "sceMatUnmapMemory": "SCEMAT_INTERFACE void sceMatUnmapMemory(const void* virtualAddress, uint64_t size)",
  "sceMatUpdateModuleList": "SCEMAT_INTERFACE void sceMatUpdateModuleList()",
  "sceMatWriteBookmark": "SCEMAT_INTERFACE void sceMatWriteBookmark(const char *label, const char *description)",
  "sceMd5BlockInit": "int32_t sceMd5BlockInit(struct *pContext)",
  "sceMd5BlockResult": "int32_t sceMd5BlockResult(struct *pContext, uint8_t *digest)",
  "sceMd5BlockUpdate": "int32_t sceMd5BlockUpdate(struct *pContext, const void *plain, uint32_t len)",
  "sceMd5Digest": "int32_t sceMd5Digest(const void *plain, uint32_t len, unsigned char *digest)",
  "sceMouseClose": "int sceMouseClose(int32_t handle)",
  "sceMouseInit": "int sceMouseInit(void)",
  "sceMouseOpen": "int sceMouseOpen(SceUserServiceUserId userId, int32_t type, int32_t index, const struct* pParam)",
  "sceMouseRead": "int sceMouseRead(int32_t handle, struct *pData, int32_t num)",
  "sceMoveClose": "int sceMoveClose(int32_t handle)",
  "sceMoveGetDeviceInfo": "int sceMoveGetDeviceInfo(int32_t handle, SceMoveDeviceInfo* pInfo)",
  "sceMoveInit": "int sceMoveInit(void)",
  "sceMoveOpen": "int sceMoveOpen(SceUserServiceUserId userId, int32_t type, int32_t index)",
  "sceMoveReadStateLatest": "int sceMoveReadStateLatest(int32_t handle, SceMoveData *pData)",
  "sceMoveReadStateRecent": "int sceMoveReadStateRecent(int32_t handle, int64_t timestamp, SceMoveData *pData, int32_t *pNum)",
  "sceMoveResetLightSphere": "int sceMoveResetLightSphere(int32_t handle)",
  "sceMoveSetLightSphere": "int sceMoveSetLightSphere(int32_t handle, uint8_t r, uint8_t g, uint8_t b)",
  "sceMoveSetVibration": "int sceMoveSetVibration(int32_t handle, uint8_t motor)",
  "sceMoveTerm": "int sceMoveTerm(void)",
  "sceMoveTrackerCalibrateReset": "int32_t sceMoveTrackerCalibrateReset()",
  "sceMoveTrackerGetState": "int32_t sceMoveTrackerGetState(int32_t handle, uint64_t timestamp, struct* state)",
  "sceMoveTrackerGetVersion": "int32_t sceMoveTrackerGetVersion()",
  "sceMoveTrackerGetWorkingMemorySize": "int32_t sceMoveTrackerGetWorkingMemorySize(int* onionSize, int* garlicSize)",
  "sceMoveTrackerInit": "int32_t sceMoveTrackerInit(void* onionMemory, void* garlicMemory, int pipeId, int queueId)",
  "sceMoveTrackerTerm": "int32_t sceMoveTrackerTerm()",
  "sceMsgDialogClose": "int32_t sceMsgDialogClose(void)",
  "sceMsgDialogGetResult": "int32_t sceMsgDialogGetResult(struct *result)",
  "sceMsgDialogGetStatus": "SceCommonDialogStatus sceMsgDialogGetStatus(void)",
  "sceMsgDialogInitialize": "int32_t sceMsgDialogInitialize(void)",
  "sceMsgDialogOpen": "int32_t sceMsgDialogOpen(const struct *param)",
  "sceMsgDialogTerminate": "int32_t sceMsgDialogTerminate(void)",
  "sceMsgDialogUpdateStatus": "SceCommonDialogStatus sceMsgDialogUpdateStatus(void)",
  "sceMt19937Init": "int32_t sceMt19937Init(struct *pCtx, uint32_t seed)",
  "sceMt19937UInt": "uint32_t sceMt19937UInt(struct *pCtx)",
  "sceNetAccept": "SceNetId sceNetAccept(SceNetId s, struct *addr, SceNetSocklen_t *addrlen)",
  "sceNetBind": "int sceNetBind(SceNetId s, const struct *addr, SceNetSocklen_t addrlen)",
  "sceNetClearDnsCache": "int sceNetClearDnsCache(int flags)",
  "sceNetConnect": "int sceNetConnect(SceNetId s, const struct *name, SceNetSocklen_t namelen)",
  "sceNetCtlApCheckCallback": "int sceNetCtlApCheckCallback(void)",
  "sceNetCtlApClearEvent": "int sceNetCtlApClearEvent(int eventType)",
  "sceNetCtlApDialogClose": "int32_t sceNetCtlApDialogClose(void)",
  "sceNetCtlApDialogGetResult": "int32_t sceNetCtlApDialogGetResult(struct *result)",
  "sceNetCtlApDialogGetStatus": "SceCommonDialogStatus sceNetCtlApDialogGetStatus(void)",
  "sceNetCtlApDialogInitialize": "int32_t sceNetCtlApDialogInitialize()",
  "sceNetCtlApDialogOpen": "int32_t sceNetCtlApDialogOpen(const struct *param)",
  "sceNetCtlApDialogTerminate": "int32_t sceNetCtlApDialogTerminate(void)",
  "sceNetCtlApDialogUpdateStatus": "SceCommonDialogStatus sceNetCtlApDialogUpdateStatus(void)",
  "sceNetCtlApGetConnectInfo": "int sceNetCtlApGetConnectInfo(const char *optStr, struct *connectInfo)",
  "sceNetCtlApGetInfo": "int sceNetCtlApGetInfo(struct *info)",
  "sceNetCtlApGetResult": "int sceNetCtlApGetResult(int eventType, int *errorCode)",
  "sceNetCtlApGetState": "int sceNetCtlApGetState(int *state)",
  "sceNetCtlApInit": "int sceNetCtlApInit(void)",
  "sceNetCtlApRegisterCallback": "int sceNetCtlApRegisterCallback(SceNetCtlApCallback func, void *arg, int *cid)",
  "sceNetCtlApStop": "int sceNetCtlApStop(void)",
  "sceNetCtlApTerm": "void sceNetCtlApTerm(void)",
  "sceNetCtlApUnregisterCallback": "int sceNetCtlApUnregisterCallback(int cid)",
  "sceNetCtlCheckCallback": "int sceNetCtlCheckCallback(void)",
  "sceNetCtlGetIfStat": "int sceNetCtlGetIfStat(struct *ifStat)",
  "sceNetCtlGetInfo": "int sceNetCtlGetInfo(int code, union *info)",
  "sceNetCtlGetNatInfo": "int sceNetCtlGetNatInfo(struct *natInfo)",
  "sceNetCtlGetResult": "int sceNetCtlGetResult(int eventType, int *errorCode)",
  "sceNetCtlGetState": "int sceNetCtlGetState(int *state)",
  "sceNetCtlInit": "int sceNetCtlInit(void)",
  "sceNetCtlRegisterCallback": "int sceNetCtlRegisterCallback(SceNetCtlCallback func, void *arg, int *cid)",
  "sceNetCtlTerm": "void sceNetCtlTerm(void)",
  "sceNetCtlUnregisterCallback": "int sceNetCtlUnregisterCallback(int cid)",
  "sceNetDumpAbort": "int sceNetDumpAbort(SceNetId id, int flags)",
  "sceNetDumpCreate": "SceNetId sceNetDumpCreate(const char *name, int len, int flags)",
  "sceNetDumpDestroy": "int sceNetDumpDestroy(SceNetId id)",
  "sceNetDumpRead": "int sceNetDumpRead(SceNetId id, void *buf, int len, int *pflags)",
  "sceNetEmulationGet": "int sceNetEmulationGet(struct *param, int flags)",
  "sceNetEmulationSet": "int sceNetEmulationSet(struct *param, int flags)",
  "sceNetEpollAbort": "int sceNetEpollAbort(SceNetId eid, int flags)",
  "sceNetEpollControl": "int sceNetEpollControl(SceNetId eid, int op, SceNetId id, struct *event)",
  "sceNetEpollCreate": "SceNetId sceNetEpollCreate(const char *name, int flags)",
  "sceNetEpollDestroy": "int sceNetEpollDestroy(SceNetId eid)",
  "sceNetEpollWait": "int sceNetEpollWait(SceNetId eid, struct *events, int maxevents, int timeout)",
  "sceNetErrnoLoc": "int *sceNetErrnoLoc(void)",
  "sceNetEtherNtostr": "int sceNetEtherNtostr(const struct *n, char *str, size_t len)",
  "sceNetEtherStrton": "int sceNetEtherStrton(const char *str, struct *n)",
  "sceNetGetMacAddress": "int sceNetGetMacAddress(struct *addr, int flags)",
  "sceNetGetMemoryPoolStats": "int sceNetGetMemoryPoolStats(int memid, struct *stat)",
  "sceNetGetSockInfo": "int sceNetGetSockInfo(SceNetId s, struct *info, int n, int flags)",
  "sceNetGetStatisticsInfo": "int sceNetGetStatisticsInfo(struct *info, int flags)",
  "sceNetGetpeername": "int sceNetGetpeername(SceNetId s, struct *name, SceNetSocklen_t *namelen)",
  "sceNetGetsockname": "int sceNetGetsockname(SceNetId s, struct *name, SceNetSocklen_t *namelen)",
  "sceNetGetsockopt": "int sceNetGetsockopt(SceNetId s, int level, int optname, void *optval, SceNetSocklen_t *optlen)",
  "sceNetHtonl": "uint32_t sceNetHtonl(uint32_t host32)",
  "sceNetHtonll": "uint64_t sceNetHtonll(uint64_t host64)",
  "sceNetHtons": "uint16_t sceNetHtons(uint16_t host16)",
  "sceNetInetNtop": "const char *sceNetInetNtop(int af, const void *src, char *dst, SceNetSocklen_t size)",
  "sceNetInetPton": "int sceNetInetPton(int af, const char *src, void *dst)",
  "sceNetInit": "int sceNetInit(void)",
  "sceNetListen": "int sceNetListen(SceNetId s, int backlog)",
  "sceNetNtohl": "uint32_t sceNetNtohl(uint32_t net32)",
  "sceNetNtohll": "uint64_t sceNetNtohll(uint64_t net64)",
  "sceNetNtohs": "uint16_t sceNetNtohs(uint16_t net16)",
  "sceNetPoolCreate": "int sceNetPoolCreate(const char *name, int size, int flags)",
  "sceNetPoolDestroy": "int sceNetPoolDestroy(int memid)",
  "sceNetRecv": "int sceNetRecv(SceNetId s, void *buf, size_t len, int flags)",
  "sceNetRecvfrom": "int sceNetRecvfrom(SceNetId s, void *buf, size_t len, int flags, struct *from, SceNetSocklen_t *fromlen)",
  "sceNetRecvmsg": "int sceNetRecvmsg(SceNetId s, struct *msg, int flags)",
  "sceNetResolverAbort": "int sceNetResolverAbort(SceNetId rid, int flags)",
  "sceNetResolverCreate": "SceNetId sceNetResolverCreate(const char *name, int memid, int flags)",
  "sceNetResolverDestroy": "int sceNetResolverDestroy(SceNetId rid)",
  "sceNetResolverGetError": "int sceNetResolverGetError(SceNetId rid, int *result)",
  "sceNetResolverStartAton": "int sceNetResolverStartAton(SceNetId rid, const SceNetInAddr *addr, char *hostname, int len, int timeout, int retry, int flags)",
  "sceNetResolverStartNtoa": "int sceNetResolverStartNtoa(SceNetId rid, const char *hostname, SceNetInAddr *addr, int timeout, int retry, int flags)",
  "sceNetResolverStartNtoaMultipleRecords": "int sceNetResolverStartNtoaMultipleRecords(SceNetId rid, const char *hostname, struct *info, int timeout, int retry, int flags)",
  "sceNetSend": "int sceNetSend(SceNetId s, const void *msg, size_t len, int flags)",
  "sceNetSendmsg": "int sceNetSendmsg(SceNetId s, const struct *msg, int flags)",
  "sceNetSendto": "int sceNetSendto(SceNetId s, const void *msg, size_t len, int flags, const struct *to, SceNetSocklen_t tolen)",
  "sceNetSetDnsInfo": "int sceNetSetDnsInfo(struct *info, int flags)",
  "sceNetSetsockopt": "int sceNetSetsockopt(SceNetId s, int level, int optname, const void *optval, SceNetSocklen_t optlen)",
  "sceNetShowIfconfig": "int sceNetShowIfconfig(void)",
  "sceNetShowIfconfigWithMemory": "int sceNetShowIfconfigWithMemory(int memid)",
  "sceNetShowNetstat": "int sceNetShowNetstat(void)",
  "sceNetShowNetstatWithMemory": "int sceNetShowNetstatWithMemory(int memid)",
  "sceNetShowPolicy": "int sceNetShowPolicy(void)",
  "sceNetShowPolicyWithMemory": "int sceNetShowPolicyWithMemory(int memid)",
  "sceNetShowRoute": "int sceNetShowRoute(void)",
  "sceNetShowRouteWithMemory": "int sceNetShowRouteWithMemory(int memid)",
  "sceNetShutdown": "int sceNetShutdown(SceNetId s, int how)",
  "sceNetSocket": "SceNetId sceNetSocket(const char *name, int domain, int type, int protocol)",
  "sceNetSocketAbort": "int sceNetSocketAbort(SceNetId s, int flags)",
  "sceNetSocketClose": "int sceNetSocketClose(SceNetId s)",
  "sceNetTerm": "int sceNetTerm(void)",
  "sceNpAbortRequest": "int sceNpAbortRequest(int reqId)",
  "sceNpAuthAbortRequest": "int sceNpAuthAbortRequest(int reqId)",
  "sceNpAuthCreateAsyncRequest": "int sceNpAuthCreateAsyncRequest(const struct *param)",
  "sceNpAuthCreateRequest": "int sceNpAuthCreateRequest(void)",
  "sceNpAuthDeleteRequest": "int sceNpAuthDeleteRequest(int reqId)",
  "sceNpAuthGetAuthorizationCodeA": "int sceNpAuthGetAuthorizationCodeA(int reqId, const struct *param, SceNpAuthorizationCode *authCode, int *issuerId)",
  "sceNpAuthGetIdTokenA": "int sceNpAuthGetIdTokenA(int reqId, const struct *param, SceNpIdToken *idToken)",
  "sceNpAuthPollAsync": "int sceNpAuthPollAsync(int reqId, int *result)",
  "sceNpAuthSetTimeout": "int sceNpAuthSetTimeout(int reqId, int32_t resolveRetry, uint32_t resolveTimeout, uint32_t connTimeout, uint32_t sendTimeout, uint32_t recvTimeout)",
  "sceNpAuthWaitAsync": "int sceNpAuthWaitAsync(int reqId, int *result)",
  "sceNpBandwidthTestAbort": "int sceNpBandwidthTestAbort(int contextId)",
  "sceNpBandwidthTestGetStatus": "int sceNpBandwidthTestGetStatus(int contextId, int *status)",
  "sceNpBandwidthTestInitStart": "int sceNpBandwidthTestInitStart(const struct* param)",
  "sceNpBandwidthTestShutdown": "int sceNpBandwidthTestShutdown(int contextId, struct *result)",
  "sceNpCheckCallback": "int sceNpCheckCallback(void)",
  "sceNpCheckNpAvailabilityA": "int sceNpCheckNpAvailabilityA(int reqId, SceUserServiceUserId userId)",
  "sceNpCheckNpReachability": "int sceNpCheckNpReachability(int reqId, SceUserServiceUserId userId)",
  "sceNpCheckPlus": "int sceNpCheckPlus(int reqId, const struct *param, struct *pResult)",
  "sceNpCommerceDialogClose": "int32_t sceNpCommerceDialogClose(void)",
  "sceNpCommerceDialogGetResult": "int32_t sceNpCommerceDialogGetResult(struct* result)",
  "sceNpCommerceDialogGetStatus": "SceCommonDialogStatus sceNpCommerceDialogGetStatus(void)",
  "sceNpCommerceDialogInitialize": "int32_t sceNpCommerceDialogInitialize()",
  "sceNpCommerceDialogOpen": "int32_t sceNpCommerceDialogOpen(const struct *param)",
  "sceNpCommerceDialogTerminate": "int32_t sceNpCommerceDialogTerminate(void)",
  "sceNpCommerceDialogUpdateStatus": "SceCommonDialogStatus sceNpCommerceDialogUpdateStatus(void)",
  "sceNpCommerceHidePsStoreIcon": "int32_t sceNpCommerceHidePsStoreIcon(void)",
  "sceNpCommerceSetPsStoreIconLayout": "int32_t sceNpCommerceSetPsStoreIconLayout(SceNpCommercePsStoreIconLayout layout)",
  "sceNpCommerceShowPsStoreIcon": "int32_t sceNpCommerceShowPsStoreIcon(SceNpCommercePsStoreIconPos pos)",
  "sceNpCreateAsyncRequest": "int sceNpCreateAsyncRequest(const struct *param)",
  "sceNpCreateRequest": "int sceNpCreateRequest(void)",
  "sceNpDeleteRequest": "int sceNpDeleteRequest(int reqId)",
  "sceNpFriendListDialogClose": "int32_t sceNpFriendListDialogClose(void)",
  "sceNpFriendListDialogGetResultA": "int32_t sceNpFriendListDialogGetResultA(struct *resultParam)",
  "sceNpFriendListDialogGetStatus": "SceCommonDialogStatus sceNpFriendListDialogGetStatus(void)",
  "sceNpFriendListDialogInitialize": "int32_t sceNpFriendListDialogInitialize(void)",
  "sceNpFriendListDialogOpenA": "int32_t sceNpFriendListDialogOpenA(const struct *param)",
  "sceNpFriendListDialogTerminate": "int32_t sceNpFriendListDialogTerminate(void)",
  "sceNpFriendListDialogUpdateStatus": "SceCommonDialogStatus sceNpFriendListDialogUpdateStatus(void)",
  "sceNpGetAccountCountryA": "int sceNpGetAccountCountryA(SceUserServiceUserId userId, struct *countryCode)",
  "sceNpGetAccountDateOfBirthA": "int sceNpGetAccountDateOfBirthA(SceUserServiceUserId userId, struct *dateOfBirth)",
  "sceNpGetAccountIdA": "int sceNpGetAccountIdA(SceUserServiceUserId userId, uint64_t *accountId)",
  "sceNpGetAccountLanguageA": "int sceNpGetAccountLanguageA(int reqId, SceUserServiceUserId userId, struct *langCode)",
  "sceNpGetGamePresenceStatusA": "int sceNpGetGamePresenceStatusA(SceUserServiceUserId userId, enum *status)",
  "sceNpGetNpId": "int sceNpGetNpId(SceUserServiceUserId userId, SceNpId *npId)",
  "sceNpGetNpReachabilityState": "int sceNpGetNpReachabilityState(SceUserServiceUserId userId, enum *state)",
  "sceNpGetOnlineId": "int sceNpGetOnlineId(SceUserServiceUserId userId, SceNpOnlineId *onlineId)",
  "sceNpGetParentalControlInfoA": "int sceNpGetParentalControlInfoA(int reqId, SceUserServiceUserId userId, int8_t *age, struct *info)",
  "sceNpGetPlatformType": "int sceNpGetPlatformType(const SceNpId *npId)",
  "sceNpGetState": "int sceNpGetState(SceUserServiceUserId userId, enum *state)",
  "sceNpGetUserIdByAccountId": "int sceNpGetUserIdByAccountId(uint64_t accountId, SceUserServiceUserId* userId)",
  "sceNpHasSignedUp": "int sceNpHasSignedUp(SceUserServiceUserId userId, bool *hasSignedUp)",
  "sceNpInGameMessageAbortHandle": "int32_t sceNpInGameMessageAbortHandle(int32_t libCtxId, int32_t handleId)",
  "sceNpInGameMessageCreateHandle": "int32_t sceNpInGameMessageCreateHandle(int32_t libCtxId)",
  "sceNpInGameMessageDeleteHandle": "int32_t sceNpInGameMessageDeleteHandle(int32_t libCtxId, int32_t handleId)",
  "sceNpInGameMessageGetMemoryPoolStatistics": "int sceNpInGameMessageGetMemoryPoolStatistics(int32_t libCtxId, struct *pMemStats)",
  "sceNpInGameMessageInitialize": "int32_t sceNpInGameMessageInitialize(size_t poolSize, void *pOption)",
  "sceNpInGameMessagePrepareA": "int32_t sceNpInGameMessagePrepareA(int32_t libCtxId, int32_t handleId, const void *pReserved, SceNpInGameMessageEventCallbackA cbFunc, void *pUserArg)",
  "sceNpInGameMessageSendDataA": "int32_t sceNpInGameMessageSendDataA(int32_t libCtxId, const SceNpPeerAddressA *pTo, const SceNpPeerAddressA *pFrom, const struct *pMessage)",
  "sceNpInGameMessageTerminate": "int32_t sceNpInGameMessageTerminate(int32_t libCtxId)",
  "sceNpLookupAbortRequest": "int sceNpLookupAbortRequest (int reqId)",
  "sceNpLookupCreateAsyncRequest": "int sceNpLookupCreateAsyncRequest(int titleCtxId, const struct *pParam)",
  "sceNpLookupCreateRequest": "int sceNpLookupCreateRequest(int titleCtxId)",
  "sceNpLookupCreateTitleCtxA": "int sceNpLookupCreateTitleCtxA(SceUserServiceUserId selfId)",
  "sceNpLookupDeleteRequest": "int sceNpLookupDeleteRequest (int reqId)",
  "sceNpLookupDeleteTitleCtx": "int sceNpLookupDeleteTitleCtx(int titleCtxId)",
  "sceNpLookupPollAsync": "int sceNpLookupPollAsync (int reqId, int *result)",
  "sceNpLookupSetTimeout": "int sceNpLookupSetTimeout(int id, int32_t resolveRetry, uint32_t resolveTimeout, uint32_t connTimeout, uint32_t sendTimeout, uint32_t recvTimeout)",
  "sceNpLookupWaitAsync": "int sceNpLookupWaitAsync (int reqId, int *result)",
  "sceNpMatching2AbortContextStart": "int sceNpMatching2AbortContextStart(uint16_t ctxId)",
  "sceNpMatching2ContextStop": "int sceNpMatching2ContextStop(uint16_t ctxId)",
  "sceNpMatching2DestroyContext": "int sceNpMatching2DestroyContext(uint16_t ctxId)",
  "sceNpMatching2Initialize": "int sceNpMatching2Initialize(const struct *param)",
  "sceNpMatching2RegisterContextCallback": "int sceNpMatching2RegisterContextCallback(SceNpMatching2ContextCallback cbFunc, void *cbFuncArg)",
  "sceNpMatching2RegisterLobbyEventCallback": "int sceNpMatching2RegisterLobbyEventCallback(uint16_t ctxId, SceNpMatching2LobbyEventCallback cbFunc, void *cbFuncArg)",
  "sceNpMatching2RegisterLobbyMessageCallback": "int sceNpMatching2RegisterLobbyMessageCallback(uint16_t ctxId, SceNpMatching2LobbyMessageCallback cbFunc, void *cbFuncArg)",
  "sceNpMatching2RegisterRoomEventCallback": "int sceNpMatching2RegisterRoomEventCallback(uint16_t ctxId, SceNpMatching2RoomEventCallback cbFunc, void *cbFuncArg)",
  "sceNpMatching2RegisterRoomMessageCallback": "int sceNpMatching2RegisterRoomMessageCallback(uint16_t ctxId, SceNpMatching2RoomMessageCallback cbFunc, void *cbFuncArg)",
  "sceNpMatching2RegisterSignalingCallback": "int sceNpMatching2RegisterSignalingCallback(uint16_t ctxId, SceNpMatching2SignalingCallback cbFunc, void *cbFuncArg)",
  "sceNpMatching2SetDefaultRequestOptParam": "int sceNpMatching2SetDefaultRequestOptParam(uint16_t ctxId, const struct *optParam)",
  "sceNpMatching2SignalingCancelPeerNetInfo": "int sceNpMatching2SignalingCancelPeerNetInfo(uint16_t ctxId, uint32_t reqId)",
  "sceNpMatching2SignalingGetConnectionInfoA": "int sceNpMatching2SignalingGetConnectionInfoA(uint16_t ctxId, uint64_t roomId, uint16_t memberId, int code, union *info)",
  "sceNpMatching2SignalingGetConnectionStatus": "int sceNpMatching2SignalingGetConnectionStatus(uint16_t ctxId, uint64_t roomId, uint16_t memberId, int *connStatus, SceNetInAddr *peerAddr, uint16_t *peerPort)",
  "sceNpMatching2SignalingGetLocalNetInfo": "int sceNpMatching2SignalingGetLocalNetInfo(struct *netinfo)",
  "sceNpMatching2SignalingGetPeerNetInfo": "int sceNpMatching2SignalingGetPeerNetInfo(uint16_t ctxId, uint64_t roomId, uint16_t memberId, uint32_t *reqId)",
  "sceNpMatching2SignalingGetPeerNetInfoResult": "int sceNpMatching2SignalingGetPeerNetInfoResult(uint16_t ctxId, uint32_t reqId, struct *netinfo)",
  "sceNpMatching2Terminate": "int sceNpMatching2Terminate(void)",
  "sceNpNotifyPlusFeature": "int sceNpNotifyPlusFeature(const struct *param)",
  "sceNpPartyCheckCallback": "int sceNpPartyCheckCallback(void)",
  "sceNpPartyGetId": "int sceNpPartyGetId(struct * const id)",
  "sceNpPartyGetMemberInfoA": "int sceNpPartyGetMemberInfoA(const uint16_t memberId, struct * const memberInfo)",
  "sceNpPartyGetMemberSessionInfo": "int sceNpPartyGetMemberSessionInfo(const uint16_t memberId, struct * const memberGameSessionInfo)",
  "sceNpPartyGetMemberVoiceInfo": "int sceNpPartyGetMemberVoiceInfo(const uint16_t asMemberId, const uint16_t memberId, uint8_t * const memberVoiceState)",
  "sceNpPartyGetMembersA": "int sceNpPartyGetMembersA(struct * const memberList)",
  "sceNpPartyGetState": "int sceNpPartyGetState(uint16_t * const state)",
  "sceNpPartyGetStateAsUserA": "int sceNpPartyGetStateAsUserA(const SceUserServiceUserId asUserId, uint16_t * const state)",
  "sceNpPartyInitialize": "int sceNpPartyInitialize(const struct * const param)",
  "sceNpPartyRegisterHandlerA": "int sceNpPartyRegisterHandlerA(const struct * const handlers, void * userdata)",
  "sceNpPartySendBinaryMessage": "int sceNpPartySendBinaryMessage(struct const * const sendParams)",
  "sceNpPartyTerminate": "int sceNpPartyTerminate(void)",
  "sceNpPollAsync": "int sceNpPollAsync(int reqId, int *result)",
  "sceNpProfileDialogClose": "int32_t sceNpProfileDialogClose(void)",
  "sceNpProfileDialogGetResult": "int32_t sceNpProfileDialogGetResult(struct *result)",
  "sceNpProfileDialogGetStatus": "SceCommonDialogStatus sceNpProfileDialogGetStatus(void)",
  "sceNpProfileDialogInitialize": "int32_t sceNpProfileDialogInitialize(void)",
  "sceNpProfileDialogOpenA": "int32_t sceNpProfileDialogOpenA(const struct *param)",
  "sceNpProfileDialogTerminate": "int32_t sceNpProfileDialogTerminate(void)",
  "sceNpProfileDialogUpdateStatus": "SceCommonDialogStatus sceNpProfileDialogUpdateStatus(void)",
  "sceNpRegisterGamePresenceCallbackA": "int sceNpRegisterGamePresenceCallbackA(SceNpGamePresenceCallbackA callback, void *userdata)",
  "sceNpRegisterNpReachabilityStateCallback": "int sceNpRegisterNpReachabilityStateCallback(enumCallback callback, void *userdata)",
  "sceNpRegisterPlusEventCallback": "int sceNpRegisterPlusEventCallback(SceNpPlusEventCallback callback, void *userdata)",
  "sceNpRegisterStateCallbackA": "int sceNpRegisterStateCallbackA(enumCallbackA callback, void *userdata)",
  "sceNpScoreAbortRequest": "int sceNpScoreAbortRequest (int32_t reqId)",
  "sceNpScoreCensorComment": "int sceNpScoreCensorComment (int32_t reqId, const char *comment, void *option)",
  "sceNpScoreCensorCommentAsync": "int sceNpScoreCensorCommentAsync (int32_t reqId, const char *comment, void *option)",
  "sceNpScoreCreateNpTitleCtxA": "int sceNpScoreCreateNpTitleCtxA(SceNpServiceLabel serviceLabel, SceUserServiceUserId selfId)",
  "sceNpScoreCreateRequest": "int sceNpScoreCreateRequest(int32_t titleCtxId)",
  "sceNpScoreDeleteNpTitleCtx": "int sceNpScoreDeleteNpTitleCtx(int32_t titleCtxId)",
  "sceNpScoreDeleteRequest": "int sceNpScoreDeleteRequest (int32_t reqId)",
  "sceNpScoreGetBoardInfo": "int sceNpScoreGetBoardInfo(int32_t reqId, uint32_t boardId, struct *boardInfo, void *option)",
  "sceNpScoreGetBoardInfoAsync": "int sceNpScoreGetBoardInfoAsync(int32_t reqId, uint32_t boardId, struct *boardInfo, void *option)",
  "sceNpScoreGetFriendsRankingA": "int sceNpScoreGetFriendsRankingA (int32_t reqId, uint32_t boardId, int32_t includeSelf, struct *rankArray, size_t rankArraySize, struct *commentArray, size_t commentArraySize, struct *infoArray, size_t infoArraySize, size_t arrayNum, SceRtcTick *lastSortDate, uint32_t *totalRecord, struct *option)",
  "sceNpScoreGetFriendsRankingAAsync": "int sceNpScoreGetFriendsRankingAAsync(int32_t reqId, uint32_t boardId, int32_t includeSelf, struct *rankArray, size_t rankArraySize, struct *commentArray, size_t commentArraySize, struct *infoArray, size_t infoArraySize, size_t arrayNum, SceRtcTick *lastSortDate, uint32_t *totalRecord, struct *option)",
  "sceNpScoreGetFriendsRankingForCrossSave": "int sceNpScoreGetFriendsRankingForCrossSave (int32_t reqId, uint32_t boardId, int32_t includeSelf, struct *rankArray, size_t rankArraySize, struct *commentArray, size_t commentArraySize, struct *infoArray, size_t infoArraySize, size_t arrayNum, SceRtcTick *lastSortDate, uint32_t *totalRecord, struct *option)",
  "sceNpScoreGetFriendsRankingForCrossSaveAsync": "int sceNpScoreGetFriendsRankingForCrossSaveAsync(int32_t reqId, uint32_t boardId, int32_t includeSelf, struct *rankArray, size_t rankArraySize, struct *commentArray, size_t commentArraySize, struct *infoArray, size_t infoArraySize, size_t arrayNum, SceRtcTick *lastSortDate, uint32_t *totalRecord, struct *option)",
  "sceNpScoreGetGameDataByAccountId": "int sceNpScoreGetGameDataByAccountId (int32_t reqId, uint32_t boardId, SceNpAccountId accountId, size_t *totalSize, size_t recvSize, void *data, void *option)",
  "sceNpScoreGetGameDataByAccountIdAsync": "int sceNpScoreGetGameDataByAccountIdAsync (int32_t reqId, uint32_t boardId, SceNpAccountId accountId, size_t *totalSize, size_t recvSize, void *data, void *option)",
  "sceNpScoreGetRankingByAccountIdPcId": "int sceNpScoreGetRankingByAccountIdPcId(int32_t reqId, uint32_t boardId, const struct *idArray, size_t idArraySize, struct *rankArray, size_t rankArraySize, struct *commentArray, size_t commentArraySize, struct *infoArray, size_t infoArraySize, size_t arrayNum, SceRtcTick *lastSortDate, uint32_t *totalRecord, void *option)",
  "sceNpScoreGetRankingByAccountIdPcIdAsync": "int sceNpScoreGetRankingByAccountIdPcIdAsync(int32_t reqId, uint32_t boardId, const struct *idArray, size_t idArraySize, struct *rankArray, size_t rankArraySize, struct *commentArray, size_t commentArraySize, struct *infoArray, size_t infoArraySize, size_t arrayNum, SceRtcTick *lastSortDate, uint32_t *totalRecord, void *option)",
  "sceNpScoreGetRankingByAccountIdPcIdForCrossSave": "int sceNpScoreGetRankingByAccountIdPcIdForCrossSave(int32_t reqId, uint32_t boardId, const struct *idArray, size_t idArraySize, struct *rankArray, size_t rankArraySize, struct *commentArray, size_t commentArraySize, struct *infoArray, size_t infoArraySize, size_t arrayNum, SceRtcTick *lastSortDate, uint32_t *totalRecord, void *option)",
  "sceNpScoreGetRankingByAccountIdPcIdForCrossSaveAsync": "int sceNpScoreGetRankingByAccountIdPcIdForCrossSaveAsync(int32_t reqId, uint32_t boardId, const struct *idArray, size_t idArraySize, struct *rankArray, size_t rankArraySize, struct *commentArray, size_t commentArraySize, struct *infoArray, size_t infoArraySize, size_t arrayNum, SceRtcTick *lastSortDate, uint32_t *totalRecord, void *option)",
  "sceNpScoreGetRankingByRangeA": "int sceNpScoreGetRankingByRangeA(int32_t reqId, uint32_t boardId, uint32_t startSerialRank, struct *rankArray, size_t rankArraySize, struct *commentArray, size_t commentArraySize, struct *infoArray, size_t infoArraySize, size_t arrayNum, SceRtcTick *lastSortDate, uint32_t *totalRecord, void *option)",
  "sceNpScoreGetRankingByRangeAAsync": "int sceNpScoreGetRankingByRangeAAsync(int32_t reqId, uint32_t boardId, uint32_t startSerialRank, struct *rankArray, size_t rankArraySize, struct *commentArray, size_t commentArraySize, struct *infoArray, size_t infoArraySize, size_t arrayNum, SceRtcTick *lastSortDate, uint32_t *totalRecord, void *option)",
  "sceNpScoreGetRankingByRangeForCrossSave": "int sceNpScoreGetRankingByRangeForCrossSave(int32_t reqId, uint32_t boardId, uint32_t startSerialRank, struct *rankArray, size_t rankArraySize, struct *commentArray, size_t commentArraySize, struct *infoArray, size_t infoArraySize, size_t arrayNum, SceRtcTick *lastSortDate, uint32_t *totalRecord, void *option)",
  "sceNpScoreGetRankingByRangeForCrossSaveAsync": "int sceNpScoreGetRankingByRangeForCrossSaveAsync(int32_t reqId, uint32_t boardId, uint32_t startSerialRank, struct *rankArray, size_t rankArraySize, struct *commentArray, size_t commentArraySize, struct *infoArray, size_t infoArraySize, size_t arrayNum, SceRtcTick *lastSortDate, uint32_t *totalRecord, void *option)",
  "sceNpScorePollAsync": "int sceNpScorePollAsync (int32_t reqId, int32_t *result)",
  "sceNpScoreRecordGameData": "int sceNpScoreRecordGameData (int32_t reqId, uint32_t boardId, int64_t score, size_t totalSize, size_t sendSize, const void *data, void *option)",
  "sceNpScoreRecordGameDataAsync": "int sceNpScoreRecordGameDataAsync (int32_t reqId, uint32_t boardId, int64_t score, size_t totalSize, size_t sendSize, const void *data, void *option)",
  "sceNpScoreRecordScore": "int sceNpScoreRecordScore (int32_t reqId, uint32_t boardId, int64_t score, const struct *scoreComment, const struct *gameInfo, uint32_t *tmpRank, const SceRtcTick *compareDate, void *option)",
  "sceNpScoreRecordScoreAsync": "int sceNpScoreRecordScoreAsync (int32_t reqId, uint32_t boardId, int64_t score, const struct *scoreComment, const struct *gameInfo, uint32_t *tmpRank, const SceRtcTick *compareDate, void *option)",
  "sceNpScoreSanitizeComment": "int sceNpScoreSanitizeComment (int32_t reqId, const char *comment, char *sanitizedComment, void *option)",
  "sceNpScoreSanitizeCommentAsync": "int sceNpScoreSanitizeCommentAsync (int32_t reqId, const char *comment, char *sanitizedComment, void *option)",
  "sceNpScoreSetPlayerCharacterId": "int sceNpScoreSetPlayerCharacterId (int32_t id, int32_t pcId)",
  "sceNpScoreSetThreadParam": "int sceNpScoreSetThreadParam(int32_t threadPriority, SceKernelCpumask cpuAffinityMask)",
  "sceNpScoreSetTimeout": "int sceNpScoreSetTimeout(int32_t id, int32_t resolveRetry, int32_t resolveTimeout, int32_t connTimeout, int32_t sendTimeout, int32_t recvTimeout)",
  "sceNpScoreWaitAsync": "int sceNpScoreWaitAsync (int32_t id, int32_t *result)",
  "sceNpSetContentRestriction": "int sceNpSetContentRestriction(const struct *pRestriction)",
  "sceNpSetGamePresenceOnlineA": "int sceNpSetGamePresenceOnlineA(int reqId, SceUserServiceUserId userId, uint32_t timeout, void *pReserved)",
  "sceNpSetNpTitleId": "int sceNpSetNpTitleId(const struct *titleId, const struct *titleSecret)",
  "sceNpSetPlatformType": "int sceNpSetPlatformType(SceNpId *npId, int32_t platformType)",
  "sceNpSetTimeout": "int sceNpSetTimeout(int reqId, int32_t resolveRetry, uint32_t resolveTimeout, uint32_t connTimeout, uint32_t sendTimeout, uint32_t recvTimeout)",
  "sceNpSignalingActivateConnectionA": "int sceNpSignalingActivateConnectionA(uint32_t ctxId, const SceNpPeerAddressA *pPeerAddrA, uint32_t *connId)",
  "sceNpSignalingCancelPeerNetInfo": "int sceNpSignalingCancelPeerNetInfo(uint32_t ctxId, uint32_t reqId)",
  "sceNpSignalingCreateContextA": "int sceNpSignalingCreateContextA(SceUserServiceUserId userId, SceNpSignalingHandler handler, void *arg, uint32_t *ctxId)",
  "sceNpSignalingDeactivateConnection": "int sceNpSignalingDeactivateConnection(uint32_t ctxId, uint32_t connId)",
  "sceNpSignalingDeleteContext": "int sceNpSignalingDeleteContext(uint32_t ctxId)",
  "sceNpSignalingGetConnectionFromPeerAddress": "int sceNpSignalingGetConnectionFromPeerAddress(uint32_t ctxId, SceNetInAddr peerAddr, SceNetInPort_t peerPort, uint32_t *connId)",
  "sceNpSignalingGetConnectionFromPeerAddressA": "int sceNpSignalingGetConnectionFromPeerAddressA(uint32_t ctxId, const SceNpPeerAddressA *pPeerAddrA, uint32_t *pConnId)",
  "sceNpSignalingGetConnectionInfoA": "int sceNpSignalingGetConnectionInfoA(uint32_t ctxId, uint32_t connId, int code, union *pInfo)",
  "sceNpSignalingGetConnectionStatistics": "int sceNpSignalingGetConnectionStatistics(struct *pStats)",
  "sceNpSignalingGetConnectionStatus": "int sceNpSignalingGetConnectionStatus(uint32_t ctxId, uint32_t connId, int *connStatus, SceNetInAddr *peerAddr, SceNetInPort_t *peerPort)",
  "sceNpSignalingGetContextOption": "int sceNpSignalingGetContextOption(uint32_t ctxId, int optname, int *optval)",
  "sceNpSignalingGetLocalNetInfo": "int sceNpSignalingGetLocalNetInfo(uint32_t ctxId, struct *netinfo)",
  "sceNpSignalingGetMemoryInfo": "int sceNpSignalingGetMemoryInfo(struct *memInfo)",
  "sceNpSignalingGetPeerNetInfoA": "int sceNpSignalingGetPeerNetInfoA(uint32_t ctxId, const SceNpPeerAddressA *pPeerAddrA, uint32_t *pReqId)",
  "sceNpSignalingGetPeerNetInfoResult": "int sceNpSignalingGetPeerNetInfoResult(uint32_t ctxId, uint32_t reqId, struct *netinfo)",
  "sceNpSignalingInitialize": "int sceNpSignalingInitialize(size_t poolSize, int32_t threadPriority, int32_t cpuAffinityMask, size_t threadStackSize)",
  "sceNpSignalingSetContextOption": "int sceNpSignalingSetContextOption(uint32_t ctxId, int optname, int optval)",
  "sceNpSignalingTerminate": "int sceNpSignalingTerminate(void)",
  "sceNpSignalingTerminateConnection": "int sceNpSignalingTerminateConnection(uint32_t ctxId, uint32_t connId)",
  "sceNpSnsFacebookAbortRequest": "int sceNpSnsFacebookAbortRequest(int reqId)",
  "sceNpSnsFacebookCreateRequest": "int sceNpSnsFacebookCreateRequest(void)",
  "sceNpSnsFacebookDeleteRequest": "int sceNpSnsFacebookDeleteRequest(int reqId)",
  "sceNpSnsFacebookDialogClose": "int32_t sceNpSnsFacebookDialogClose(void)",
  "sceNpSnsFacebookDialogGetResult": "int32_t sceNpSnsFacebookDialogGetResult(struct *result)",
  "sceNpSnsFacebookDialogGetStatus": "SceCommonDialogStatus sceNpSnsFacebookDialogGetStatus(void)",
  "sceNpSnsFacebookDialogInitialize": "int32_t sceNpSnsFacebookDialogInitialize()",
  "sceNpSnsFacebookDialogOpen": "int32_t sceNpSnsFacebookDialogOpen(const struct *param)",
  "sceNpSnsFacebookDialogTerminate": "int32_t sceNpSnsFacebookDialogTerminate(void)",
  "sceNpSnsFacebookDialogUpdateStatus": "SceCommonDialogStatus sceNpSnsFacebookDialogUpdateStatus(void)",
  "sceNpSnsFacebookGetAccessToken": "int sceNpSnsFacebookGetAccessToken(int reqId, const struct *param, struct *result)",
  "sceNpTrophyAbortHandle": "int sceNpTrophyAbortHandle(int32_t handle)",
  "sceNpTrophyCaptureScreenshot": "int sceNpTrophyCaptureScreenshot(int32_t handle, const struct *targets, uint32_t numTargets)",
  "sceNpTrophyCreateContext": "int sceNpTrophyCreateContext(int32_t *context, SceUserServiceUserId userId, SceNpServiceLabel serviceLabel, uint64_t options)",
  "sceNpTrophyCreateHandle": "int sceNpTrophyCreateHandle(int32_t *handle)",
  "sceNpTrophyDestroyContext": "int sceNpTrophyDestroyContext(int32_t context)",
  "sceNpTrophyDestroyHandle": "int sceNpTrophyDestroyHandle(int32_t handle)",
  "sceNpTrophyGetGameIcon": "int sceNpTrophyGetGameIcon(int32_t context, int32_t handle, void *buffer, size_t *size)",
  "sceNpTrophyGetGameInfo": "int sceNpTrophyGetGameInfo(int32_t context, int32_t handle, struct *details, struct *data)",
  "sceNpTrophyGetGroupIcon": "int sceNpTrophyGetGroupIcon(int32_t context, int32_t handle, int32_t groupId, void *buffer, size_t *size)",
  "sceNpTrophyGetGroupInfo": "int sceNpTrophyGetGroupInfo(int32_t context, int32_t handle, int32_t groupId, struct *details, struct *data)",
  "sceNpTrophyGetTrophyIcon": "int sceNpTrophyGetTrophyIcon(int32_t context, int32_t handle, int32_t trophyId, void *buffer, size_t *size)",
  "sceNpTrophyGetTrophyInfo": "int sceNpTrophyGetTrophyInfo(int32_t context, int32_t handle, int32_t trophyId, struct *details, struct *data)",
  "sceNpTrophyGetTrophyUnlockState": "int sceNpTrophyGetTrophyUnlockState(int32_t context, int32_t handle, struct *flags, uint32_t *count)",
  "sceNpTrophyRegisterContext": "int sceNpTrophyRegisterContext(int32_t context, int32_t handle, uint64_t options)",
  "sceNpTrophyShowTrophyList": "int sceNpTrophyShowTrophyList(int32_t context, int32_t handle)",
  "sceNpTrophyUnlockTrophy": "int sceNpTrophyUnlockTrophy(int32_t context, int32_t handle, int32_t trophyId, int32_t *platinumId)",
  "sceNpTssCreateNpTitleCtxA": "int sceNpTssCreateNpTitleCtxA(SceNpServiceLabel serviceLabel, SceUserServiceUserId selfId)",
  "sceNpTssGetData": "int sceNpTssGetData (int reqId, int32_t slotId, struct *dataStatus, size_t dataStatusSize, void *data, size_t recvSize, struct *option)",
  "sceNpTssGetDataAsync": "int sceNpTssGetDataAsync(int reqId, int32_t slotId, struct *dataStatus, size_t dataStatusSize, void *data, size_t recvSize, struct *option)",
  "sceNpTssGetSmallStorage": "int sceNpTssGetSmallStorage(int reqId, void *data, size_t maxSize, size_t *contentLength, void *option)",
  "sceNpTssGetSmallStorageAsync": "int sceNpTssGetSmallStorageAsync(int reqId, void *data, size_t maxSize, size_t *contentLength, void *option)",
  "sceNpTusAbortRequest": "int sceNpTusAbortRequest(int reqId)",
  "sceNpTusAddAndGetVariableA": "int sceNpTusAddAndGetVariableA (int reqId, SceNpAccountId targetAccountId, int slotId, int64_t inVariable, const SceNpAccountId *isLastChangedAuthor, const SceRtcTick *isLastChangedDate, struct *outVariable, size_t outVariableSize, void *option)",
  "sceNpTusAddAndGetVariableAAsync": "int sceNpTusAddAndGetVariableAAsync (int reqId, SceNpAccountId targetAccountId, int slotId, int64_t inVariable, const SceNpAccountId *isLastChangedAuthor, const SceRtcTick *isLastChangedDate, struct *outVariable, size_t outVariableSize, void *option)",
  "sceNpTusAddAndGetVariableAVUser": "int sceNpTusAddAndGetVariableAVUser (int reqId, const struct *targetVirtualUserId, int slotId, int64_t inVariable, const SceNpAccountId *isLastChangedAuthor, const SceRtcTick *isLastChangedDate, struct *outVariable, size_t outVariableSize, void *option)",
  "sceNpTusAddAndGetVariableAVUserAsync": "int sceNpTusAddAndGetVariableAVUserAsync (int reqId, const struct *targetVirtualUserId, int slotId, int64_t inVariable, const SceNpAccountId *isLastChangedAuthor, const SceRtcTick *isLastChangedDate, struct *outVariable, size_t outVariableSize, void *option)",
  "sceNpTusAddAndGetVariableForCrossSave": "int sceNpTusAddAndGetVariableForCrossSave (int reqId, SceNpAccountId targetAccountId, int slotId, int64_t inVariable, const SceNpAccountId *isLastChangedAuthor, const SceRtcTick *isLastChangedDate, struct *outVariable, size_t outVariableSize, void *option)",
  "sceNpTusAddAndGetVariableForCrossSaveAsync": "int sceNpTusAddAndGetVariableForCrossSaveAsync (int reqId, SceNpAccountId targetAccountId, int slotId, int64_t inVariable, const SceNpAccountId *isLastChangedAuthor, const SceRtcTick *isLastChangedDate, struct *outVariable, size_t outVariableSize, void *option)",
  "sceNpTusAddAndGetVariableForCrossSaveVUser": "int sceNpTusAddAndGetVariableForCrossSaveVUser (int reqId, const struct *targetVirtualUserId, int slotId, int64_t inVariable, const SceNpAccountId *isLastChangedAuthor, const SceRtcTick *isLastChangedDate, struct *outVariable, size_t outVariableSize, void *option)",
  "sceNpTusAddAndGetVariableForCrossSaveVUserAsync": "int sceNpTusAddAndGetVariableForCrossSaveVUserAsync (int reqId, const struct *targetVirtualUserId, int slotId, int64_t inVariable, const SceNpAccountId *isLastChangedAuthor, const SceRtcTick *isLastChangedDate, struct *outVariable, size_t outVariableSize, void *option)",
  "sceNpTusCreateNpTitleCtxA": "int sceNpTusCreateNpTitleCtxA(SceNpServiceLabel serviceLabel, SceUserServiceUserId selfId)",
  "sceNpTusCreateRequest": "int sceNpTusCreateRequest(int titleCtxId)",
  "sceNpTusDeleteNpTitleCtx": "int sceNpTusDeleteNpTitleCtx(int titleCtxId)",
  "sceNpTusDeleteRequest": "int sceNpTusDeleteRequest (int reqId)",
  "sceNpTusPollAsync": "int sceNpTusPollAsync (int reqId, int *result)",
  "sceNpTusSetDataA": "int sceNpTusSetDataA (int reqId, SceNpAccountId targetAccountId, int slotId, size_t totalSize, size_t sendSize, const void *data, const struct *info, size_t infoStructSize, const SceNpAccountId *isLastChangedAuthor, const SceRtcTick *isLastChangedDate, void *option)",
  "sceNpTusSetDataAAsync": "int sceNpTusSetDataAAsync (int reqId, SceNpAccountId targetAccountId, int slotId, size_t totalSize, size_t sendSize, const void *data, const struct *info, size_t infoStructSize, const SceNpAccountId *isLastChangedAuthor, const SceRtcTick *isLastChangedDate, void *option)",
  "sceNpTusSetDataAVUser": "int sceNpTusSetDataAVUser(int reqId, const struct *targetVirtualUserId, int slotId, size_t totalSize, size_t sendSize, const void *data, const struct *info, size_t infoStructSize, const SceNpAccountId *isLastChangedAuthor, const SceRtcTick *isLastChangedDate, void *option)",
  "sceNpTusSetDataAVUserAsync": "int sceNpTusSetDataAVUserAsync (int reqId, const struct *targetVirtualUserId, int slotId, size_t totalSize, size_t sendSize, const void *data, const struct *info, size_t infoStructSize, const SceNpAccountId *isLastChangedAuthor, const SceRtcTick *isLastChangedDate, void *option)",
  "sceNpTusSetThreadParam": "int sceNpTusSetThreadParam(int32_t threadPriority, SceKernelCpumask cpuAffinityMask)",
  "sceNpTusSetTimeout": "int sceNpTusSetTimeout(int32_t id, int32_t resolveRetry, int32_t resolveTimeout, int32_t connTimeout, int32_t sendTimeout, int32_t recvTimeout)",
  "sceNpTusTryAndSetVariableA": "int sceNpTusTryAndSetVariableA (int reqId, SceNpAccountId targetAccountId, int slotId, int opeType, int64_t variable, const int64_t *compareValue, const SceNpAccountId *isLastChangedAuthor, const SceRtcTick *isLastChangedDate, struct *resultVariable, size_t resultVariableSize, void *option)",
  "sceNpTusTryAndSetVariableAAsync": "int sceNpTusTryAndSetVariableAAsync (int reqId, SceNpAccountId targetAccountId, int slotId, int opeType, int64_t variable, const int64_t *compareValue, const SceNpAccountId *isLastChangedAuthor, const SceRtcTick *isLastChangedDate, struct *resultVariable, size_t resultVariableSize, void *option)",
  "sceNpTusTryAndSetVariableAVUser": "int sceNpTusTryAndSetVariableAVUser (int reqId, const struct *targetVirtualUserId, int slotId, int opeType, int64_t variable, const int64_t *compareValue, const SceNpAccountId *isLastChangedAuthor, const SceRtcTick *isLastChangedDate, struct *resultVariable, size_t resultVariableSize, void *option)",
  "sceNpTusTryAndSetVariableAVUserAsync": "int sceNpTusTryAndSetVariableAVUserAsync (int reqId, const struct *targetVirtualUserId, int slotId, int opeType, int64_t variable, const int64_t *compareValue, const SceNpAccountId *isLastChangedAuthor, const SceRtcTick *isLastChangedDate, struct *resultVariable, size_t resultVariableSize, void *option)",
  "sceNpTusTryAndSetVariableForCrossSave": "int sceNpTusTryAndSetVariableForCrossSave (int reqId, SceNpAccountId targetAccountId, int slotId, int opeType, int64_t variable, const int64_t *compareValue, const SceNpAccountId *isLastChangedAuthor, const SceRtcTick *isLastChangedDate, struct *resultVariable, size_t resultVariableSize, void *option)",
  "sceNpTusTryAndSetVariableForCrossSaveAsync": "int sceNpTusTryAndSetVariableForCrossSaveAsync (int reqId, SceNpAccountId targetAccountId, int slotId, int opeType, int64_t variable, const int64_t *compareValue, const SceNpAccountId *isLastChangedAuthor, const SceRtcTick *isLastChangedDate, struct *resultVariable, size_t resultVariableSize, void *option)",
  "sceNpTusTryAndSetVariableForCrossSaveVUser": "int sceNpTusTryAndSetVariableForCrossSaveVUser (int reqId, const struct *targetVirtualUserId, int slotId, int opeType, int64_t variable, const int64_t *compareValue, const SceNpAccountId *isLastChangedAuthor, const SceRtcTick *isLastChangedDate, struct *resultVariable, size_t resultVariableSize, void *option)",
  "sceNpTusTryAndSetVariableForCrossSaveVUserAsync": "int sceNpTusTryAndSetVariableForCrossSaveVUserAsync (int reqId, const struct *targetVirtualUserId, int slotId, int opeType, int64_t variable, const int64_t *compareValue, const SceNpAccountId *isLastChangedAuthor, const SceRtcTick *isLastChangedDate, struct *resultVariable, size_t resultVariableSize, void *option)",
  "sceNpTusWaitAsync": "int sceNpTusWaitAsync (int reqId, int *result)",
  "sceNpUnregisterGamePresenceCallbackA": "int sceNpUnregisterGamePresenceCallbackA(int callbackId)",
  "sceNpUnregisterNpReachabilityStateCallback": "int sceNpUnregisterNpReachabilityStateCallback(void)",
  "sceNpUnregisterPlusEventCallback": "int sceNpUnregisterPlusEventCallback(void)",
  "sceNpUnregisterStateCallbackA": "int sceNpUnregisterStateCallbackA(int callbackId)",
  "sceNpWaitAsync": "int sceNpWaitAsync(int reqId, int *result)",
  "sceNpWebApiAbortHandle": "int32_t sceNpWebApiAbortHandle(int32_t libCtxId, int32_t handleId)",
  "sceNpWebApiAbortRequest": "int32_t sceNpWebApiAbortRequest(int64_t requestId)",
  "sceNpWebApiAddHttpRequestHeader": "int32_t sceNpWebApiAddHttpRequestHeader(int64_t requestId, const char *pFieldName, const char *pValue)",
  "sceNpWebApiAddMultipartPart": "int32_t sceNpWebApiAddMultipartPart(int64_t requestId, const struct *pParam, int32_t *pIndex)",
  "sceNpWebApiCheckTimeout": "void sceNpWebApiCheckTimeout(void)",
  "sceNpWebApiClearAllUnusedConnection": "int32_t sceNpWebApiClearAllUnusedConnection(int32_t userCtxId, bool bRemainKeepAliveConnection)",
  "sceNpWebApiClearUnusedConnection": "int32_t sceNpWebApiClearUnusedConnection(int32_t userCtxId, const char *pApiGroup, bool bRemainKeepAliveConnection)",
  "sceNpWebApiCreateContextA": "int32_t sceNpWebApiCreateContextA(int32_t libCtxId, SceUserServiceUserId userId)",
  "sceNpWebApiCreateExtdPushEventFilter": "int32_t sceNpWebApiCreateExtdPushEventFilter(int32_t libCtxId, int32_t handleId, const char *pNpServiceName, SceNpServiceLabel npServiceLabel, const struct *pFilterParam, size_t filterParamNum)",
  "sceNpWebApiCreateHandle": "int32_t sceNpWebApiCreateHandle(int32_t libCtxId)",
  "sceNpWebApiCreateMultipartRequest": "int32_t sceNpWebApiCreateMultipartRequest(int32_t titleUserCtxId, const char *pApiGroup, const char *pPath, enum method, int64_t *pRequestId)",
  "sceNpWebApiCreateRequest": "int32_t sceNpWebApiCreateRequest(int32_t titleUserCtxId, const char *pApiGroup, const char *pPath, enum method, const struct *pContentParameter, int64_t *pRequestId)",
  "sceNpWebApiDeleteContext": "int32_t sceNpWebApiDeleteContext(int32_t titleUserCtxId)",
  "sceNpWebApiDeleteExtdPushEventFilter": "int32_t sceNpWebApiDeleteExtdPushEventFilter(int32_t libCtxId, int32_t filterId)",
  "sceNpWebApiDeleteHandle": "int32_t sceNpWebApiDeleteHandle(int32_t libCtxId, int32_t handleId)",
  "sceNpWebApiDeleteRequest": "int32_t sceNpWebApiDeleteRequest(int64_t requestId)",
  "sceNpWebApiGetConnectionStats": "int32_t sceNpWebApiGetConnectionStats(int32_t userCtxId, const char *pApiGroup, struct *pStats)",
  "sceNpWebApiGetHttpResponseHeaderValue": "int32_t sceNpWebApiGetHttpResponseHeaderValue(int64_t requestId, const char *pFieldName, char *pValue, size_t valueSize)",
  "sceNpWebApiGetHttpResponseHeaderValueLength": "int32_t sceNpWebApiGetHttpResponseHeaderValueLength(int64_t requestId, const char *pFieldName, size_t *pValueLength)",
  "sceNpWebApiGetMemoryPoolStats": "int32_t sceNpWebApiGetMemoryPoolStats(int32_t libCtxId, struct *pCurrentStat)",
  "sceNpWebApiInitialize": "int32_t sceNpWebApiInitialize(int libHttpCtxId, size_t poolSize)",
  "sceNpWebApiReadData": "int32_t sceNpWebApiReadData(int64_t requestId, void *pData, size_t size)",
  "sceNpWebApiRegisterExtdPushEventCallbackA": "int32_t sceNpWebApiRegisterExtdPushEventCallbackA(int32_t userCtxId, int32_t filterId, SceNpWebApiExtdPushEventCallbackA cbFunc, void *pUserArg)",
  "sceNpWebApiSendMultipartRequest2": "int32_t sceNpWebApiSendMultipartRequest2(int64_t requestId, int32_t partIndex, const void *pData, size_t dataSize, struct *pRespInfoOption)",
  "sceNpWebApiSendRequest2": "int32_t sceNpWebApiSendRequest2(int64_t requestId, const void *pData, size_t dataSize, struct *pRespInfoOption)",
  "sceNpWebApiSetHandleTimeout": "int32_t sceNpWebApiSetHandleTimeout(int32_t libCtxId, int32_t handleId, uint32_t timeout)",
  "sceNpWebApiSetMaxConnection": "int32_t sceNpWebApiSetMaxConnection(int32_t libCtxId, int32_t maxConnection)",
  "sceNpWebApiSetMultipartContentType": "int32_t sceNpWebApiSetMultipartContentType(int64_t requestId, const char *pTypeName, const char *pBoundary)",
  "sceNpWebApiSetRequestTimeout": "int32_t sceNpWebApiSetRequestTimeout(int64_t requestId, uint32_t timeout)",
  "sceNpWebApiTerminate": "int32_t sceNpWebApiTerminate(int32_t libCtxId)",
  "sceNpWebApiUnregisterExtdPushEventCallback": "int32_t sceNpWebApiUnregisterExtdPushEventCallback(int32_t userCtxId, int32_t callbackId)",
  "sceNpWebApiUtilityParseNpId": "int32_t sceNpWebApiUtilityParseNpId(const char *pJsonNpId, SceNpId *pNpId)",
  "sceNpWordFilterAbortRequest": "int sceNpWordFilterAbortRequest (int reqId)",
  "sceNpWordFilterCensorComment": "int sceNpWordFilterCensorComment (int reqId, const char *comment, void *option)",
  "sceNpWordFilterCreateAsyncRequest": "int sceNpWordFilterCreateAsyncRequest(int titleCtxId, const struct *pParam)",
  "sceNpWordFilterCreateRequest": "int sceNpWordFilterCreateRequest(int titleCtxId)",
  "sceNpWordFilterCreateTitleCtxA": "int sceNpWordFilterCreateTitleCtxA(SceUserServiceUserId selfId)",
  "sceNpWordFilterDeleteRequest": "int sceNpWordFilterDeleteRequest (int reqId)",
  "sceNpWordFilterDeleteTitleCtx": "int sceNpWordFilterDeleteTitleCtx (int titleCtxId)",
  "sceNpWordFilterPollAsync": "int sceNpWordFilterPollAsync (int reqId, int *result)",
  "sceNpWordFilterSanitizeComment": "int sceNpWordFilterSanitizeComment (int reqId, const char *comment, char *sanitizedComment, void *option)",
  "sceNpWordFilterSetTimeout": "int sceNpWordFilterSetTimeout(int id, int32_t resolveRetry, uint32_t resolveTimeout, uint32_t connTimeout, uint32_t sendTimeout, uint32_t recvTimeout)",
  "sceNpWordFilterWaitAsync": "int sceNpWordFilterWaitAsync (int reqId, int *result)",
  "scePadClose": "int scePadClose(int32_t handle)",
  "scePadDeviceClassGetExtendedInformation": "int scePadDeviceClassGetExtendedInformation(int32_t handle, ScePadDeviceClassExtendedInformation *pExtInfo)",
  "scePadDeviceClassParseData": "int scePadDeviceClassParseData(int32_t handle, const struct *pData, ScePadDeviceClassData *pDeviceClassData)",
  "scePadGetControllerInformation": "int scePadGetControllerInformation(int32_t handle, struct *pInfo)",
  "scePadGetHandle": "int scePadGetHandle(SceUserServiceUserId userId, int32_t type, int32_t index)",
  "scePadInit": "int scePadInit(void)",
  "scePadOpen": "int scePadOpen(SceUserServiceUserId userId, int32_t type, int32_t index, const struct* pParam)",
  "scePadRead": "int scePadRead(int32_t handle, struct *pData, int32_t num)",
  "scePadReadState": "int scePadReadState(int32_t handle, struct *pData)",
  "scePadResetLightBar": "int scePadResetLightBar(int32_t handle)",
  "scePadResetOrientation": "int scePadResetOrientation(int32_t handle)",
  "scePadSetAngularVelocityDeadbandState": "int scePadSetAngularVelocityDeadbandState(int32_t handle, bool bEnable)",
  "scePadSetLightBar": "int scePadSetLightBar(int32_t handle, const ScePadColor *pParam)",
  "scePadSetMotionSensorState": "int scePadSetMotionSensorState(int32_t handle, bool bEnable)",
  "scePadSetTiltCorrectionState": "int scePadSetTiltCorrectionState(int32_t handle, bool bEnable)",
  "scePadSetVibration": "int scePadSetVibration(int32_t handle, const struct *pParam)",
  "scePadTrackerCalibrate": "int32_t scePadTrackerCalibrate()",
  "scePadTrackerGetWorkingMemorySize": "int32_t scePadTrackerGetWorkingMemorySize(int32_t *onionSize, int32_t *garlicSize)",
  "scePadTrackerInit": "int32_t scePadTrackerInit(void *onionMemory, void *garlicMemory, int pipeId, int queueId)",
  "scePadTrackerReadState": "int32_t scePadTrackerReadState(int32_t handle, struct *data)",
  "scePadTrackerTerm": "int32_t scePadTrackerTerm()",
  "scePadTrackerUpdate": "int32_t scePadTrackerUpdate(struct input)",
  "scePerfPmcClose": "int scePerfPmcClose(void)",
  "scePerfPmcGetCounter": "int scePerfPmcGetCounter(ScePthread thread, SceUInt32 counter, SceUInt64 *pValue)",
  "scePerfPmcGetCounterSelf": "SceUInt64 scePerfPmcGetCounterSelf(int counter)",
  "scePerfPmcL2iGetCounter": "int scePerfPmcL2iGetCounter(int cluster, int counter, uint64_t *value)",
  "scePerfPmcL2iGetCounterSelf": "int scePerfPmcL2iGetCounterSelf(int counter, uint64_t *value)",
  "scePerfPmcL2iSelectEvent": "int scePerfPmcL2iSelectEvent(int clusters, int counter, uint64_t event)",
  "scePerfPmcL2iSetCounter": "int scePerfPmcL2iSetCounter(int cluster, int counter, uint64_t value)",
  "scePerfPmcL2iStart": "int scePerfPmcL2iStart(int clusters)",
  "scePerfPmcL2iStop": "int scePerfPmcL2iStop(int clusters)",
  "scePerfPmcMcSeqGetCounter": "int scePerfPmcMcSeqGetCounter(uint64_t *rvalue, uint64_t *wvalue)",
  "scePerfPmcMcSeqSetCounter": "int scePerfPmcMcSeqSetCounter(uint64_t rvalue, uint64_t wvalue)",
  "scePerfPmcMcSeqStart": "int scePerfPmcMcSeqStart(void)",
  "scePerfPmcMcSeqStop": "int scePerfPmcMcSeqStop(void)",
  "scePerfPmcNbGetCounter": "int scePerfPmcNbGetCounter(int counter, uint64_t *value)",
  "scePerfPmcNbSelectEvent": "int scePerfPmcNbSelectEvent(int counter, uint64_t event)",
  "scePerfPmcNbSetCounter": "int scePerfPmcNbSetCounter(int counter, uint64_t value)",
  "scePerfPmcNbStart": "int scePerfPmcNbStart()",
  "scePerfPmcNbStop": "int scePerfPmcNbStop()",
  "scePerfPmcOpen": "int scePerfPmcOpen(void)",
  "scePerfPmcReset": "int scePerfPmcReset(ScePthread thread)",
  "scePerfPmcSelectEvent": "int scePerfPmcSelectEvent(ScePthread thread, SceUInt32 counter, SceUInt64 events)",
  "scePerfPmcSetCounter": "int scePerfPmcSetCounter(ScePthread thread, SceUInt32 counter, SceUInt64 value)",
  "scePerfPmcStart": "int scePerfPmcStart(ScePthread thread)",
  "scePerfPmcStop": "int scePerfPmcStop(ScePthread thread)",
  "scePerfTraceCreate": "int scePerfTraceCreate(size_t length, int *pTraceId, void **ppStart)",
  "scePerfTraceDelete": "int scePerfTraceDelete(int traceId)",
  "scePerfTraceEnable": "int scePerfTraceEnable(int traceId, SceUInt32 type, SceUInt64 mode)",
  "scePerfTraceGetInfo": "int scePerfTraceGetInfo(int traceId, struct *pInfo)",
  "scePerfTraceGetMemoryStats": "int scePerfTraceGetMemoryStats(struct *pMstats)",
  "scePerfTraceIoGetEntry": "int scePerfTraceIoGetEntry(int type, struct *opt, uint64_t *num)",
  "scePerfTraceIoGetEntry2": "int scePerfTraceIoGetEntry2(int type, struct *opt, uint64_t *num, uint32_t *ext)",
  "scePerfTraceIoGetPosition": "int scePerfTraceIoGetPosition(int type, struct *opt, uint64_t num, struct *pos)",
  "scePerfTraceSpmCreate": "int scePerfTraceSpmCreate(int *pTraceId)",
  "scePerfTraceSpmDelete": "int scePerfTraceSpmDelete(int traceId)",
  "scePerfTraceSpmEnable": "int scePerfTraceSpmEnable(int traceId, size_t length, uint32_t mode, uint64_t cpu_freq, uint64_t unb_freq)",
  "scePerfTraceSpmGetNclk": "int scePerfTraceSpmGetNclk(uint64_t *pNclk)",
  "scePerfTraceSpmRead": "ssize_t scePerfTraceSpmRead(int traceId, void *pBuf, size_t count)",
  "scePerfTraceSpmStart": "int scePerfTraceSpmStart(int traceId, uint64_t *pStartTsc)",
  "scePerfTraceSpmStop": "int scePerfTraceSpmStop(int traceId)",
  "scePerfTraceStart": "int scePerfTraceStart(int traceId, SceUInt32 mode)",
  "scePerfTraceStop": "int scePerfTraceStop(int traceId)",
  "scePlayGoClose": "int32_t scePlayGoClose(int32_t handle)",
  "scePlayGoDialogClose": "int32_t scePlayGoDialogClose(void)",
  "scePlayGoDialogGetResult": "int32_t scePlayGoDialogGetResult(struct *result)",
  "scePlayGoDialogGetStatus": "SceCommonDialogStatus scePlayGoDialogGetStatus(void)",
  "scePlayGoDialogInitialize": "int32_t scePlayGoDialogInitialize(void)",
  "scePlayGoDialogOpen": "int32_t scePlayGoDialogOpen(const struct *param)",
  "scePlayGoDialogTerminate": "int32_t scePlayGoDialogTerminate(void)",
  "scePlayGoDialogUpdateStatus": "SceCommonDialogStatus scePlayGoDialogUpdateStatus(void)",
  "scePlayGoGetChunkId": "int32_t scePlayGoGetChunkId(int32_t handle, uint16_t *outChunkIdList, uint32_t numberOfEntries, uint32_t *outEntries)",
  "scePlayGoGetEta": "int32_t scePlayGoGetEta(int32_t handle, const uint16_t *chunkIds, uint32_t numberOfEntries, int64_t *outEta)",
  "scePlayGoGetInstallSpeed": "int32_t scePlayGoGetInstallSpeed(int32_t handle, int32_t *speed)",
  "scePlayGoGetLanguageMask": "int32_t scePlayGoGetLanguageMask(int32_t handle, uint64_t *outLanguageMask)",
  "scePlayGoGetLocus": "int32_t scePlayGoGetLocus(int32_t handle, const uint16_t *chunkIds, uint32_t numberOfEntries, int8_t *outLoci)",
  "scePlayGoGetProgress": "int32_t scePlayGoGetProgress(int32_t handle, const uint16_t *chunkIds, uint32_t numberOfEntries, struct *outProgress)",
  "scePlayGoGetToDoList": "int32_t scePlayGoGetToDoList(int32_t handle, struct *outTodoList, uint32_t numberOfEntries, uint32_t *outEntries)",
  "scePlayGoInitialize": "int32_t scePlayGoInitialize(const struct *initParam)",
  "scePlayGoOpen": "int32_t scePlayGoOpen(int32_t *outHandle, const void *param)",
  "scePlayGoPrefetch": "int32_t scePlayGoPrefetch(int32_t handle, const uint16_t *chunkIds, uint32_t numberOfEntries, int8_t minimumLocus)",
  "scePlayGoSetInstallSpeed": "int32_t scePlayGoSetInstallSpeed(int32_t handle, int32_t speed)",
  "scePlayGoSetLanguageMask": "int32_t scePlayGoSetLanguageMask(int32_t handle, uint64_t languageMask)",
  "scePlayGoSetToDoList": "int32_t scePlayGoSetToDoList(int32_t handle, const struct *todoList, uint32_t numberOfEntries)",
  "scePlayGoTerminate": "int32_t scePlayGoTerminate(void)",
  "scePngDecCreate": "int32_t scePngDecCreate(const struct *param, void *memoryAddress, uint32_t memorySize, void * *handle)",
  "scePngDecDecode": "int32_t scePngDecDecode(void * handle, const struct *param, struct *imageInfo)",
  "scePngDecDelete": "int32_t scePngDecDelete(void * handle)",
  "scePngDecParseHeader": "int32_t scePngDecParseHeader(const struct *param, struct *imageInfo)",
  "scePngDecQueryMemorySize": "int32_t scePngDecQueryMemorySize(const struct *param)",
  "scePngEncCreate": "int32_t scePngEncCreate(const struct *param, void *memoryAddress, uint32_t memorySize, void * *handle)",
  "scePngEncDelete": "int32_t scePngEncDelete(void * handle)",
  "scePngEncEncode": "int32_t scePngEncEncode(void * handle, const struct *param, struct *outputInfo)",
  "scePngEncQueryMemorySize": "int32_t scePngEncQueryMemorySize(const struct *param)",
  "scePthreadAttrDestroy": "int scePthreadAttrDestroy(pthread_attr_t *attr)",
  "scePthreadAttrGet": "int scePthreadAttrGet(pthread_t thread, pthread_attr_t *attr)",
  "scePthreadAttrGetaffinity": "int scePthreadAttrGetaffinity(const pthread_attr_t *attr, SceKernelCpumask *mask)",
  "scePthreadAttrGetdetachstate": "int scePthreadAttrGetdetachstate(const pthread_attr_t *attr, int *state)",
  "scePthreadAttrGetguardsize": "int scePthreadAttrGetguardsize(const pthread_attr_t *attr, size_t *guardSize)",
  "scePthreadAttrGetinheritsched": "int scePthreadAttrGetinheritsched(const pthread_attr_t *attr, int *inheritSched)",
  "scePthreadAttrGetschedparam": "int scePthreadAttrGetschedparam(const pthread_attr_t *attr, SceKernelSchedParam *param)",
  "scePthreadAttrGetschedpolicy": "int scePthreadAttrGetschedpolicy(const pthread_attr_t *attr, int *policy)",
  "scePthreadAttrGetstack": "int scePthreadAttrGetstack(const pthread_attr_t * __restrict attr, void ** __restrict stackAddr, size_t * __restrict stackSize)",
  "scePthreadAttrGetstackaddr": "int scePthreadAttrGetstackaddr(const pthread_attr_t *attr, void **stackAddr)",
  "scePthreadAttrGetstacksize": "int scePthreadAttrGetstacksize(const pthread_attr_t *attr, size_t *stackSize)",
  "scePthreadAttrInit": "int scePthreadAttrInit(pthread_attr_t *attr)",
  "scePthreadAttrSetaffinity": "int scePthreadAttrSetaffinity(pthread_attr_t *attr, const SceKernelCpumask mask)",
  "scePthreadAttrSetdetachstate": "int scePthreadAttrSetdetachstate(pthread_attr_t *attr, int state)",
  "scePthreadAttrSetguardsize": "int scePthreadAttrSetguardsize(pthread_attr_t *attr, size_t guardSize)",
  "scePthreadAttrSetinheritsched": "int scePthreadAttrSetinheritsched(pthread_attr_t *attr, int inheritSched)",
  "scePthreadAttrSetschedparam": "int scePthreadAttrSetschedparam(pthread_attr_t *attr, const SceKernelSchedParam *param)",
  "scePthreadAttrSetschedpolicy": "int scePthreadAttrSetschedpolicy(pthread_attr_t *attr, int policy)",
  "scePthreadAttrSetstack": "int scePthreadAttrSetstack(pthread_attr_t *attr, void *addr, size_t size)",
  "scePthreadAttrSetstackaddr": "int scePthreadAttrSetstackaddr(pthread_attr_t *attr, void *addr)",
  "scePthreadAttrSetstacksize": "int scePthreadAttrSetstacksize(pthread_attr_t *attr, size_t stackSize)",
  "scePthreadBarrierDestroy": "int scePthreadBarrierDestroy(pthread_barrier_t *barrier)",
  "scePthreadBarrierInit": "int scePthreadBarrierInit(pthread_barrier_t *barrier, const pthread_barrier_tattr *attr, unsigned count, const char *name)",
  "scePthreadBarrierWait": "int scePthreadBarrierWait(pthread_barrier_t *barrier)",
  "scePthreadBarrierattrDestroy": "int scePthreadBarrierattrDestroy(pthread_barrier_tattr *barrier)",
  "scePthreadBarrierattrInit": "int scePthreadBarrierattrInit(pthread_barrier_tattr *barrier)",
  "scePthreadCancel": "int scePthreadCancel(pthread_t thread)",
  "scePthreadCondBroadcast": "int scePthreadCondBroadcast(pthread_cond_t *cond)",
  "scePthreadCondDestroy": "int scePthreadCondDestroy(pthread_cond_t *cond)",
  "scePthreadCondInit": "int scePthreadCondInit(pthread_cond_t *cond, const pthread_condattr_t *attr, const char *name)",
  "scePthreadCondSignal": "int scePthreadCondSignal(pthread_cond_t *cond)",
  "scePthreadCondSignalto": "int scePthreadCondSignalto(pthread_cond_t *cond, pthread_t thread)",
  "scePthreadCondTimedwait": "int scePthreadCondTimedwait(pthread_cond_t *cond, pthread_tMutex *mutex, SceKernelUseconds usec)",
  "scePthreadCondWait": "int scePthreadCondWait(pthread_cond_t *cond, pthread_tMutex *mutex)",
  "scePthreadCondattrDestroy": "int scePthreadCondattrDestroy(pthread_condattr_t *attr)",
  "scePthreadCondattrInit": "int scePthreadCondattrInit(pthread_condattr_t *attr)",
  "scePthreadDetach": "int scePthreadDetach(pthread_t thread)",
  "scePthreadEqual": "int scePthreadEqual(pthread_t thraed1, pthread_t thread2)",
  "scePthreadGetaffinity": "int scePthreadGetaffinity(pthread_t thread, SceKernelCpumask *mask)",
  "scePthreadGetcpuclockid": "int scePthreadGetcpuclockid(pthread_t thread, clockid_t *clock)",
  "scePthreadGetname": "int scePthreadGetname(pthread_t thread, char *name)",
  "scePthreadGetprio": "int scePthreadGetprio(pthread_t thread, int *prio)",
  "scePthreadGetschedparam": "int scePthreadGetschedparam(pthread_t thread, int *policy, SceKernelSchedParam *param)",
  "scePthreadGetspecific": "void *scePthreadGetspecific(pthread_tKey key)",
  "scePthreadGetthreadid": "int scePthreadGetthreadid(void)",
  "scePthreadJoin": "int scePthreadJoin(pthread_t thread, void **value)",
  "scePthreadKeyDelete": "int scePthreadKeyDelete(pthread_tKey key)",
  "scePthreadMutexDestroy": "int scePthreadMutexDestroy(pthread_tMutex *mutex)",
  "scePthreadMutexGetprioceiling": "int scePthreadMutexGetprioceiling(pthread_tMutex *mutex, int *prio)",
  "scePthreadMutexInit": "int scePthreadMutexInit(pthread_tMutex *mutex, const pthread_tMutexattr *attr, const char *name)",
  "scePthreadMutexLock": "int scePthreadMutexLock(pthread_tMutex *mutex)",
  "scePthreadMutexSetprioceiling": "int scePthreadMutexSetprioceiling(pthread_tMutex *mutex, int prio, int *oldPrio)",
  "scePthreadMutexTimedlock": "int scePthreadMutexTimedlock(pthread_tMutex *mutex, SceKernelUseconds usec)",
  "scePthreadMutexTrylock": "int scePthreadMutexTrylock(pthread_tMutex *mutex)",
  "scePthreadMutexUnlock": "int scePthreadMutexUnlock(pthread_tMutex *mutex)",
  "scePthreadMutexattrDestroy": "int scePthreadMutexattrDestroy(pthread_tMutexattr *attr)",
  "scePthreadMutexattrGetprioceiling": "int scePthreadMutexattrGetprioceiling(pthread_tMutexattr *attr, int *prio)",
  "scePthreadMutexattrGetprotocol": "int scePthreadMutexattrGetprotocol(pthread_tMutexattr *attr, int *protocol)",
  "scePthreadMutexattrGettype": "int scePthreadMutexattrGettype(pthread_tMutexattr *attr, int *type)",
  "scePthreadMutexattrInit": "int scePthreadMutexattrInit(pthread_tMutexattr *attr)",
  "scePthreadMutexattrSetprioceiling": "int scePthreadMutexattrSetprioceiling(pthread_tMutexattr *attr, int prio)",
  "scePthreadMutexattrSetprotocol": "int scePthreadMutexattrSetprotocol(pthread_tMutexattr *attr, int protocol)",
  "scePthreadMutexattrSettype": "int scePthreadMutexattrSettype(pthread_tMutexattr *attr, int type)",
  "scePthreadRename": "int scePthreadRename(pthread_t thread, const char *name)",
  "scePthreadRwlockDestroy": "int scePthreadRwlockDestroy(pthread_tRwlock *rwlock)",
  "scePthreadRwlockInit": "int scePthreadRwlockInit(pthread_tRwlock *rwlock, const pthread_tRwlockattr *attr, const char *name)",
  "scePthreadRwlockRdlock": "int scePthreadRwlockRdlock(pthread_tRwlock *rwlock)",
  "scePthreadRwlockTimedrdlock": "int scePthreadRwlockTimedrdlock(pthread_tRwlock *rwlock, SceKernelUseconds usec)",
  "scePthreadRwlockTimedwrlock": "int scePthreadRwlockTimedwrlock(pthread_tRwlock *rwlock, SceKernelUseconds usec)",
  "scePthreadRwlockTryrdlock": "int scePthreadRwlockTryrdlock(pthread_tRwlock *rwlock)",
  "scePthreadRwlockTrywrlock": "int scePthreadRwlockTrywrlock(pthread_tRwlock *rwlock)",
  "scePthreadRwlockUnlock": "int scePthreadRwlockUnlock(pthread_tRwlock *rwlock)",
  "scePthreadRwlockWrlock": "int scePthreadRwlockWrlock(pthread_tRwlock *rwlock)",
  "scePthreadRwlockattrDestroy": "int scePthreadRwlockattrDestroy(pthread_tRwlockattr *attr)",
  "scePthreadRwlockattrGettype": "int scePthreadRwlockattrGettype(pthread_tRwlockattr *attr, int *type)",
  "scePthreadRwlockattrInit": "int scePthreadRwlockattrInit(pthread_tRwlockattr *attr)",
  "scePthreadRwlockattrSettype": "int scePthreadRwlockattrSettype(pthread_tRwlockattr *attr, int type)",
  "scePthreadSelf": "pthread_t scePthreadSelf(void)",
  "scePthreadSetaffinity": "int scePthreadSetaffinity(pthread_t thread, const SceKernelCpumask mask)",
  "scePthreadSetcancelstate": "int scePthreadSetcancelstate(int state, int *oldState)",
  "scePthreadSetcanceltype": "int scePthreadSetcanceltype(int type, int *oldType)",
  "scePthreadSetprio": "int scePthreadSetprio(pthread_t thread, int prio)",
  "scePthreadSetschedparam": "int scePthreadSetschedparam(pthread_t thread, int policy, const SceKernelSchedParam *param)",
  "scePthreadSetspecific": "int scePthreadSetspecific(pthread_tKey key, const void *value)",
  "scePthreadTestcancel": "void scePthreadTestcancel(void)",
  "scePthreadYield": "void scePthreadYield(void)",
  "sceRandomGetRandomNumber": "int sceRandomGetRandomNumber(void* buf, size_t sz)",
  "sceRazorCpuBeginLogicalFileAccess": "int sceRazorCpuBeginLogicalFileAccess(const char *pFilename, uint64_t uTag, uint64_t uSize, uint8_t operation)",
  "sceRazorCpuDisableFiberUserMarkers": "void sceRazorCpuDisableFiberUserMarkers(void)",
  "sceRazorCpuEndLogicalFileAccess": "int sceRazorCpuEndLogicalFileAccess(void)",
  "sceRazorCpuFlushOccurred": "int sceRazorCpuFlushOccurred(uint64_t *pTimeSpentInFlush)",
  "sceRazorCpuGetDataTagStorageSize": "size_t sceRazorCpuGetDataTagStorageSize(uint32_t uTagCount)",
  "sceRazorCpuInitDataTags": "int sceRazorCpuInitDataTags(void *pBuffer, size_t uSize)",
  "sceRazorCpuIsCapturing": "uint32_t sceRazorCpuIsCapturing(void)",
  "sceRazorCpuPlotValue": "int sceRazorCpuPlotValue(const char* series, float value)",
  "sceRazorCpuPopMarker": "int sceRazorCpuPopMarker(void)",
  "sceRazorCpuPushMarker": "int sceRazorCpuPushMarker(const char* label, uint32_t color, uint32_t flags)",
  "sceRazorCpuPushMarkerStatic": "int sceRazorCpuPushMarkerStatic(const char* label, uint32_t color, uint32_t flags)",
  "sceRazorCpuResizeTaggedBuffer": "int sceRazorCpuResizeTaggedBuffer(uint32_t uCategory, const void *pBuffer, size_t uNewBufferSize)",
  "sceRazorCpuShutdownDataTags": "int sceRazorCpuShutdownDataTags(void)",
  "sceRazorCpuStartCapture": "int sceRazorCpuStartCapture(void)",
  "sceRazorCpuStopCapture": "int sceRazorCpuStopCapture(void)",
  "sceRazorCpuSync": "int sceRazorCpuSync(void)",
  "sceRazorCpuTagArray": "int sceRazorCpuTagArray(const char *label, uint32_t uCategory, const void *pArray, size_t uBufferSize, size_t uElementSize)",
  "sceRazorCpuTagBuffer": "int sceRazorCpuTagBuffer(const char *label, uint32_t uCategory, const void *pBuffer, size_t uBufferSize)",
  "sceRazorCpuUnTagBuffer": "int sceRazorCpuUnTagBuffer(uint32_t uCategory, const void *pBuffer)",
  "sceRazorCpuWriteBookmark": "int sceRazorCpuWriteBookmark(const char* label, const char* description)",
  "sceRazorGpuThreadTraceInit": "int32_t sceRazorGpuThreadTraceInit(struct *params)",
  "sceRazorGpuThreadTraceSave": "int32_t sceRazorGpuThreadTraceSave(const char *filename)",
  "sceRazorGpuThreadTraceShutdown": "int32_t sceRazorGpuThreadTraceShutdown()",
  "sceRemoteplayApprove": "int sceRemoteplayApprove()",
  "sceRemoteplayGetConnectionStatus": "int sceRemoteplayGetConnectionStatus(SceUserServiceUserId userid, int *pStatus)",
  "sceRemoteplayInitialize": "int sceRemoteplayInitialize(void *pHeap, size_t heapSize)",
  "sceRemoteplayProhibit": "int sceRemoteplayProhibit()",
  "sceRemoteplayProhibitStreaming": "int sceRemoteplayProhibitStreaming(SceRemoteplayStreamingProhibition mode)",
  "sceRemoteplayTerminate": "int sceRemoteplayTerminate()",
  "sceRtcCheckValid": "int sceRtcCheckValid(const struct *pTime)",
  "sceRtcConvertLocalTimeToUtc": "int sceRtcConvertLocalTimeToUtc(const SceRtcTick *pLocalTime, SceRtcTick *pUtc)",
  "sceRtcConvertUtcToLocalTime": "int sceRtcConvertUtcToLocalTime(const SceRtcTick *pUtc, SceRtcTick *pLocalTime)",
  "sceRtcFormatRFC2822": "int sceRtcFormatRFC2822(char *pszDateTime, const SceRtcTick *pUtc, int iTimeZoneMinutes)",
  "sceRtcFormatRFC2822LocalTime": "int sceRtcFormatRFC2822LocalTime(char *pszDateTime, const SceRtcTick *pUtc)",
  "sceRtcFormatRFC3339": "int sceRtcFormatRFC3339(char *pszDateTime, const SceRtcTick *pUtc, int iTimeZoneMinutes)",
  "sceRtcFormatRFC3339LocalTime": "int sceRtcFormatRFC3339LocalTime(char *pszDateTime, const SceRtcTick *pUtc)",
  "sceRtcGetCurrentClock": "int sceRtcGetCurrentClock(struct *pTime, int iTimeZone)",
  "sceRtcGetCurrentClockLocalTime": "int sceRtcGetCurrentClockLocalTime(struct *pTime)",
  "sceRtcGetCurrentNetworkTick": "int sceRtcGetCurrentNetworkTick(SceRtcTick *pTick)",
  "sceRtcGetCurrentTick": "int sceRtcGetCurrentTick(SceRtcTick *pTick)",
  "sceRtcGetDay": "static int sceRtcGetDay(const struct *pTime)",
  "sceRtcGetDayOfWeek": "int sceRtcGetDayOfWeek(int year, int month, int day)",
  "sceRtcGetDaysInMonth": "int sceRtcGetDaysInMonth(int year, int month)",
  "sceRtcGetDosTime": "int sceRtcGetDosTime(const struct *pTime, unsigned int *puiDosTime)",
  "sceRtcGetHour": "static int sceRtcGetHour(const struct *pTime)",
  "sceRtcGetMicrosecond": "static int sceRtcGetMicrosecond(const struct *pTime)",
  "sceRtcGetMinute": "static int sceRtcGetMinute(const struct *pTime)",
  "sceRtcGetMonth": "static int sceRtcGetMonth(const struct *pTime)",
  "sceRtcGetSecond": "static int sceRtcGetSecond(const struct *pTime)",
  "sceRtcGetTick": "int sceRtcGetTick(const struct *pTime, SceRtcTick *pTick)",
  "sceRtcGetTickResolution": "unsigned int sceRtcGetTickResolution(void)",
  "sceRtcGetTime_t": "int sceRtcGetTime_t(const struct *pTime, time_t *pllTime)",
  "sceRtcGetWin32FileTime": "int sceRtcGetWin32FileTime(const struct *pTime, uint64_t *ulWin32Time)",
  "sceRtcGetYear": "static int sceRtcGetYear(const struct *pTime)",
  "sceRtcIsLeapYear": "int sceRtcIsLeapYear(int year)",
  "sceRtcParseDateTime": "int sceRtcParseDateTime(SceRtcTick *pUtc, const char *pszDateTime)",
  "sceRtcParseRFC3339": "int sceRtcParseRFC3339(SceRtcTick *pUtc, const char *pszDateTime)",
  "sceRtcSetDay": "static int sceRtcSetDay(struct *pTime, int day)",
  "sceRtcSetDosTime": "int sceRtcSetDosTime(struct *pTime, unsigned int uiDosTime)",
  "sceRtcSetHour": "static int sceRtcSetHour(struct *pTime, int hour)",
  "sceRtcSetMicrosecond": "static int sceRtcSetMicrosecond(struct *pTime, int microsecond)",
  "sceRtcSetMinute": "static int sceRtcSetMinute(struct *pTime, int minute)",
  "sceRtcSetMonth": "static int sceRtcSetMonth(struct *pTime, int month)",
  "sceRtcSetSecond": "static int sceRtcSetSecond(struct *pTime, int second)",
  "sceRtcSetTick": "int sceRtcSetTick(struct *pTime, const SceRtcTick *pTick)",
  "sceRtcSetTime_t": "int sceRtcSetTime_t(struct *pTime, time_t llTime)",
  "sceRtcSetWin32FileTime": "int sceRtcSetWin32FileTime(struct *pTime, uint64_t ulWin32Time)",
  "sceRtcSetYear": "static int sceRtcSetYear(struct *pTime, int year)",
  "sceRtcTickAddDays": "int sceRtcTickAddDays(SceRtcTick *pTick0, const SceRtcTick *pTick1, int iAdd)",
  "sceRtcTickAddHours": "int sceRtcTickAddHours(SceRtcTick *pTick0, const SceRtcTick *pTick1, int iAdd)",
  "sceRtcTickAddMicroseconds": "int sceRtcTickAddMicroseconds(SceRtcTick *pTick0, const SceRtcTick *pTick1, int64_t lAdd)",
  "sceRtcTickAddMinutes": "int sceRtcTickAddMinutes(SceRtcTick *pTick0, const SceRtcTick *pTick1, int64_t lAdd)",
  "sceRtcTickAddMonths": "int sceRtcTickAddMonths(SceRtcTick *pTick0, const SceRtcTick *pTick1, int iAdd)",
  "sceRtcTickAddSeconds": "int sceRtcTickAddSeconds(SceRtcTick *pTick0, const SceRtcTick *pTick1, int64_t lAdd)",
  "sceRtcTickAddTicks": "int sceRtcTickAddTicks(SceRtcTick *pTick0, const SceRtcTick *pTick1, int64_t lAdd)",
  "sceRtcTickAddWeeks": "int sceRtcTickAddWeeks(SceRtcTick *pTick0, const SceRtcTick *pTick1, int iAdd)",
  "sceRtcTickAddYears": "int sceRtcTickAddYears(SceRtcTick *pTick0, const SceRtcTick *pTick1, int iAdd)",
  "sceRudpActivate": "int sceRudpActivate(int ctxId, struct SceNetSockaddr const *to, SceNetSocklen_t toLen)",
  "sceRudpBind": "int sceRudpBind(int ctxId, int soc, uint16_t vport, uint8_t muxMode)",
  "sceRudpCreateContext": "int sceRudpCreateContext(SceRudpContextEventHandler handler, void *arg, int *ctxId)",
  "sceRudpEnableInternalIOThread": "int sceRudpEnableInternalIOThread(uint32_t stackSize, uint32_t priority)",
  "sceRudpEnableInternalIOThread2": "int sceRudpEnableInternalIOThread2(uint32_t stackSize, uint32_t priority, SceKernelCpumask affinityMask)",
  "sceRudpEnd": "int sceRudpEnd(void)",
  "sceRudpFlush": "int sceRudpFlush(int ctxId)",
  "sceRudpGetContextStatus": "int sceRudpGetContextStatus(int ctxId, struct *status, size_t statusSize)",
  "sceRudpGetLocalInfo": "int sceRudpGetLocalInfo(int ctxId, int *soc, struct SceNetSockaddr *addr, SceNetSocklen_t *addrLen, uint16_t *vport, uint8_t *muxMode)",
  "sceRudpGetMaxSegmentSize": "int sceRudpGetMaxSegmentSize(uint16_t *mss)",
  "sceRudpGetNumberOfPacketsToRead": "int sceRudpGetNumberOfPacketsToRead(int ctxId)",
  "sceRudpGetOption": "int sceRudpGetOption(int ctxId, int option, void *optVal, size_t optLen)",
  "sceRudpGetRemoteInfo": "int sceRudpGetRemoteInfo(int ctxId, struct SceNetSockaddr *addr, SceNetSocklen_t *addrLen, uint16_t *vport)",
  "sceRudpGetSizeReadable": "int sceRudpGetSizeReadable(int ctxId)",
  "sceRudpGetSizeWritable": "int sceRudpGetSizeWritable(int ctxId)",
  "sceRudpGetStatus": "int sceRudpGetStatus(struct *status, size_t statusSize)",
  "sceRudpInit": "int sceRudpInit(void *memPool, int memPoolSize)",
  "sceRudpInitiate": "int sceRudpInitiate(int ctxId, struct SceNetSockaddr const *to, SceNetSocklen_t toLen, uint16_t vport)",
  "sceRudpNetFlush": "int sceRudpNetFlush()",
  "sceRudpNetReceived": "int sceRudpNetReceived(int soc, uint8_t const *data, size_t dataLen, struct SceNetSockaddr const *from, SceNetSocklen_t fromLen)",
  "sceRudpPollCancel": "int sceRudpPollCancel(int pollId)",
  "sceRudpPollControl": "int sceRudpPollControl(int pollId, int op, int ctxId, uint16_t events)",
  "sceRudpPollCreate": "int sceRudpPollCreate(size_t size)",
  "sceRudpPollDestroy": "int sceRudpPollDestroy(int pollId)",
  "sceRudpPollWait": "int sceRudpPollWait(int pollId, struct *events, size_t eventLen, uint64_t timeout)",
  "sceRudpProcessEvents": "int sceRudpProcessEvents(uint64_t timeout)",
  "sceRudpRead": "int sceRudpRead(int ctxId, void *data, size_t len, uint8_t flags, struct *info)",
  "sceRudpSetEventHandler": "int sceRudpSetEventHandler(SceRudpEventHandler handler, void *arg)",
  "sceRudpSetMaxSegmentSize": "int sceRudpSetMaxSegmentSize(uint16_t mss)",
  "sceRudpSetOption": "int sceRudpSetOption(int ctxId, int option, void const *optVal, size_t optLen)",
  "sceRudpTerminate": "int sceRudpTerminate(int ctxId)",
  "sceRudpWrite": "int sceRudpWrite(int ctxId, void const *data, size_t len, uint8_t flags)",
  "sceS3dConversionClose": "int32_t sceS3dConversionClose(void* handle)",
  "sceS3dConversionExec": "int32_t sceS3dConversionExec(void* handle, const struct *pContextRsrc, const struct *pInPicInfo, const struct *pCtrl, const struct *pOutInfoL, const struct *pOutInfoR)",
  "sceS3dConversionOpen": "int32_t sceS3dConversionOpen(const struct *pRsrc, void* *pHandle)",
  "sceS3dConversionQueryAttr": "int32_t sceS3dConversionQueryAttr(struct *pAttr)",
  "sceSaveDataBackup": "int32_t sceSaveDataBackup(const SceSaveDataBackup *backup)",
  "sceSaveDataCheckBackupData": "int32_t sceSaveDataCheckBackupData(const SceSaveDataCheckBackupData *check)",
  "sceSaveDataClearProgress": "int32_t sceSaveDataClearProgress(void)",
  "sceSaveDataDelete": "int32_t sceSaveDataDelete(const SceSaveDataDelete *del)",
  "sceSaveDataDialogClose": "int32_t sceSaveDataDialogClose(const struct *closeParam)",
  "sceSaveDataDialogGetResult": "int32_t sceSaveDataDialogGetResult(struct* result)",
  "sceSaveDataDialogGetStatus": "SceCommonDialogStatus sceSaveDataDialogGetStatus(void)",
  "sceSaveDataDialogInitialize": "int32_t sceSaveDataDialogInitialize()",
  "sceSaveDataDialogIsReadyToDisplay": "int32_t sceSaveDataDialogIsReadyToDisplay()",
  "sceSaveDataDialogOpen": "int32_t sceSaveDataDialogOpen(const struct *param)",
  "sceSaveDataDialogProgressBarInc": "int32_t sceSaveDataDialogProgressBarInc(int32_t target, uint32_t delta)",
  "sceSaveDataDialogProgressBarSetValue": "int32_t sceSaveDataDialogProgressBarSetValue(int32_t target, uint32_t rate)",
  "sceSaveDataDialogTerminate": "int32_t sceSaveDataDialogTerminate(void)",
  "sceSaveDataDialogUpdateStatus": "SceCommonDialogStatus sceSaveDataDialogUpdateStatus(void)",
  "sceSaveDataDirNameSearch": "int32_t sceSaveDataDirNameSearch(const SceSaveDataDirNameSearchCond *cond, SceSaveDataDirNameSearchResult *result)",
  "sceSaveDataGetEventResult": "int32_t sceSaveDataGetEventResult(const SceSaveDataEventParam *param, SceSaveDataEvent *event)",
  "sceSaveDataGetMountInfo": "int32_t sceSaveDataGetMountInfo(const SceSaveDataMountPoint *mountPoint, SceSaveDataMountInfo *info)",
  "sceSaveDataGetParam": "int32_t sceSaveDataGetParam(const SceSaveDataMountPoint *mountPoint, const SceSaveDataParamType paramType, void *paramBuf, const size_t paramBufSize, size_t *gotSize)",
  "sceSaveDataGetProgress": "int32_t sceSaveDataGetProgress(float *progress)",
  "sceSaveDataGetSaveDataMemory2": "int32_t sceSaveDataGetSaveDataMemory2(SceSaveDataMemoryGet2 *getParam)",
  "sceSaveDataInitialize3": "int32_t sceSaveDataInitialize3(const SceSaveDataInitParams3 *initParam)",
  "sceSaveDataLoadIcon": "int32_t sceSaveDataLoadIcon(const SceSaveDataMountPoint *mountPoint, SceSaveDataIcon *param)",
  "sceSaveDataMount2": "int32_t sceSaveDataMount2(const SceSaveDataMount2 *mount, SceSaveDataMountResult *mountResult)",
  "sceSaveDataRestoreBackupData": "int32_t sceSaveDataRestoreBackupData(const SceSaveDataRestoreBackupData *restore)",
  "sceSaveDataSaveIcon": "int32_t sceSaveDataSaveIcon(const SceSaveDataMountPoint *mountPoint, const SceSaveDataIcon *param)",
  "sceSaveDataSetParam": "int32_t sceSaveDataSetParam(const SceSaveDataMountPoint *mountPoint, const SceSaveDataParamType paramType, const void *paramBuf, const size_t paramBufSize)",
  "sceSaveDataSetSaveDataMemory2": "int32_t sceSaveDataSetSaveDataMemory2(const SceSaveDataMemorySet2 *setParam)",
  "sceSaveDataSetupSaveDataMemory2": "int32_t sceSaveDataSetupSaveDataMemory2(const SceSaveDataMemorySetup2 *setupParam, SceSaveDataMemorySetupResult *result)",
  "sceSaveDataSyncSaveDataMemory": "int32_t sceSaveDataSyncSaveDataMemory(const SceSaveDataMemorySync *syncParam)",
  "sceSaveDataTerminate": "int32_t sceSaveDataTerminate()",
  "sceSaveDataTransferringMount": "int32_t sceSaveDataTransferringMount(const SceSaveDataTransferringMount *mount, SceSaveDataMountResult *mountResult)",
  "sceSaveDataUmount": "int32_t sceSaveDataUmount(const SceSaveDataMountPoint *mountPoint)",
  "sceSaveDataUmountWithBackup": "int32_t sceSaveDataUmountWithBackup(const SceSaveDataMountPoint *mountPoint)",
  "sceScreenShotDisable": "int32_t sceScreenShotDisable(void)",
  "sceScreenShotEnable": "int32_t sceScreenShotEnable(void)",
  "sceScreenShotSetOverlayImage": "int32_t sceScreenShotSetOverlayImage(const char *filePath, int32_t offsetX, int32_t offsetY)",
  "sceScreenShotSetOverlayImageWithOrigin": "int32_t sceScreenShotSetOverlayImageWithOrigin(const char *filePath, int32_t marginX, int32_t marginY, enum origin)",
  "sceScreenShotSetParam": "int32_t sceScreenShotSetParam(const struct *param)",
  "sceSfmt11213GenRand32": "uint32_t sceSfmt11213GenRand32(struct *pCtx)",
  "sceSfmt11213GenRand64": "uint64_t sceSfmt11213GenRand64(struct *pCtx)",
  "sceSfmt11213InitGenRand": "int32_t sceSfmt11213InitGenRand(struct *pCtx, uint32_t seed)",
  "sceSfmt1279GenRand32": "uint32_t sceSfmt1279GenRand32(struct *pCtx)",
  "sceSfmt1279GenRand64": "uint64_t sceSfmt1279GenRand64(struct *pCtx)",
  "sceSfmt1279InitGenRand": "int32_t sceSfmt1279InitGenRand(struct *pCtx, uint32_t seed)",
  "sceSfmt132049GenRand32": "uint32_t sceSfmt132049GenRand32(struct *pCtx)",
  "sceSfmt132049GenRand64": "uint64_t sceSfmt132049GenRand64(struct *pCtx)",
  "sceSfmt132049InitGenRand": "int32_t sceSfmt132049InitGenRand(struct *pCtx, uint32_t seed)",
  "sceSfmt19937GenRand32": "uint32_t sceSfmt19937GenRand32(struct *pCtx)",
  "sceSfmt19937GenRand64": "uint64_t sceSfmt19937GenRand64(struct *pCtx)",
  "sceSfmt19937InitGenRand": "int32_t sceSfmt19937InitGenRand(struct *pCtx, uint32_t seed)",
  "sceSfmt216091GenRand32": "SceUInt32 sceSfmt216091GenRand32(struct *pCtx)",
  "sceSfmt216091GenRand64": "SceUInt64 sceSfmt216091GenRand64(struct *pCtx)",
  "sceSfmt216091InitGenRand": "SceInt32 sceSfmt216091InitGenRand(struct *pCtx, SceUInt32 seed)",
  "sceSfmt2281GenRand32": "SceUInt32 sceSfmt2281GenRand32(struct *pCtx)",
  "sceSfmt2281GenRand64": "SceUInt64 sceSfmt2281GenRand64(struct *pCtx)",
  "sceSfmt2281InitGenRand": "SceInt32 sceSfmt2281InitGenRand(struct *pCtx, SceUInt32 seed)",
  "sceSfmt4253GenRand32": "SceUInt32 sceSfmt4253GenRand32(struct *pCtx)",
  "sceSfmt4253GenRand64": "SceUInt64 sceSfmt4253GenRand64(struct *pCtx)",
  "sceSfmt4253InitGenRand": "SceInt32 sceSfmt4253InitGenRand(struct *pCtx, SceUInt32 seed)",
  "sceSfmt44497GenRand32": "SceUInt32 sceSfmt44497GenRand32(struct *pCtx)",
  "sceSfmt44497GenRand64": "SceUInt64 sceSfmt44497GenRand64(struct *pCtx)",
  "sceSfmt44497InitGenRand": "SceInt32 sceSfmt44497InitGenRand(struct *pCtx, SceUInt32 seed)",
  "sceSfmt607GenRand32": "SceUInt32 sceSfmt607GenRand32(struct *pCtx)",
  "sceSfmt607GenRand64": "SceUInt64 sceSfmt607GenRand64(struct *pCtx)",
  "sceSfmt607InitGenRand": "SceInt32 sceSfmt607InitGenRand(struct *pCtx, SceUInt32 seed)",
  "sceSfmt86243GenRand32": "SceUInt32 sceSfmt86243GenRand32(struct *pCtx)",
  "sceSfmt86243GenRand64": "SceUInt64 sceSfmt86243GenRand64(struct *pCtx)",
  "sceSfmt86243InitGenRand": "SceInt32 sceSfmt86243InitGenRand(struct *pCtx, SceUInt32 seed)",
  "sceSha0BlockInit": "int32_t sceSha0BlockInit(struct *pContext)",
  "sceSha0BlockResult": "int32_t sceSha0BlockResult(struct *pContext, uint8_t *digest)",
  "sceSha0BlockUpdate": "int32_t sceSha0BlockUpdate(struct *pContext, const void *plain, uint32_t len)",
  "sceSha0Digest": "int32_t sceSha0Digest(const void *plain, uint32_t len, uint8_t *digest)",
  "sceSha1BlockInit": "int32_t sceSha1BlockInit(struct *pContext)",
  "sceSha1BlockResult": "int32_t sceSha1BlockResult(struct *pContext, uint8_t *digest)",
  "sceSha1BlockUpdate": "int32_t sceSha1BlockUpdate(struct *pContext, const void *plain, uint32_t len)",
  "sceSha1Digest": "int32_t sceSha1Digest(const void *plain, uint32_t len, uint8_t *digest)",
  "sceSha224BlockInit": "int32_t sceSha224BlockInit(struct *pContext)",
  "sceSha224BlockResult": "int32_t sceSha224BlockResult(struct *pContext, uint8_t *digest)",
  "sceSha224BlockUpdate": "int32_t sceSha224BlockUpdate(struct *pContext, const void *plain, uint32_t len)",
  "sceSha224Digest": "int32_t sceSha224Digest(const void *plain, uint32_t len, uint8_t *digest)",
  "sceSha256BlockInit": "int32_t sceSha256BlockInit(struct *pContext)",
  "sceSha256BlockResult": "int32_t sceSha256BlockResult(struct *pContext, uint8_t *digest)",
  "sceSha256BlockUpdate": "int32_t sceSha256BlockUpdate(struct *pContext, const void *plain, uint32_t len)",
  "sceSha256Digest": "int32_t sceSha256Digest(const void *plain, uint32_t len, uint8_t *digest)",
  "sceSha384BlockInit": "int32_t sceSha384BlockInit(struct *pContext)",
  "sceSha384BlockResult": "int32_t sceSha384BlockResult(struct *pContext, uint8_t *digest)",
  "sceSha384BlockUpdate": "int32_t sceSha384BlockUpdate(struct *pContext, const void *plain, uint32_t len)",
  "sceSha384Digest": "int32_t sceSha384Digest(const void *plain, uint32_t len, uint8_t *digest)",
  "sceSha512BlockInit": "int32_t sceSha512BlockInit(struct *pContext)",
  "sceSha512BlockResult": "int32_t sceSha512BlockResult(struct *pContext, uint8_t *digest)",
  "sceSha512BlockUpdate": "int32_t sceSha512BlockUpdate(struct *pContext, const void *plain, uint32_t len)",
  "sceSha512Digest": "int32_t sceSha512Digest(const void *plain, uint32_t len, uint8_t *digest)",
  "sceSha512tBlockInit": "int32_t sceSha512tBlockInit(struct *pContext, uint32_t t)",
  "sceSha512tBlockResult": "int32_t sceSha512tBlockResult(struct *pContext, uint8_t *digest)",
  "sceSha512tBlockUpdate": "int32_t sceSha512tBlockUpdate(struct *pContext, const void *plain, uint32_t len)",
  "sceSha512tDigest": "int32_t sceSha512tDigest(uint32_t t, const void *plain, uint32_t len, uint8_t *digest)",
  "sceSharePlayGetCurrentConnectionInfoA": "int sceSharePlayGetCurrentConnectionInfoA(struct* pInfo)",
  "sceSharePlayInitialize": "int sceSharePlayInitialize(void *pHeap, size_t heapSize)",
  "sceSharePlaySetProhibition": "int sceSharePlaySetProhibition(enum mode)",
  "sceSharePlayTerminate": "int sceSharePlayTerminate(void)",
  "sceShareUtilityAdvanceInitialize": "int sceShareUtilityAdvanceInitialize(uint64_t functionFlag, size_t heapSize, int threadPriority, SceKernelCpumask affinityMask)",
  "sceShareUtilityAdvanceSetUploadContentData": "int sceShareUtilityAdvanceSetUploadContentData(const char* contentData, size_t contentDataLength)",
  "sceShareUtilityAdvanceTerminate": "int sceShareUtilityAdvanceTerminate(void)",
  "sceShareUtilityAdvanceWakeUpShareMenu": "int sceShareUtilityAdvanceWakeUpShareMenu(SceContentSearchContentId contentId, SceContentSearchMimeType mimeType)",
  "sceShareUtilityAdvanceWakeUpShareMenuBroadcast": "int sceShareUtilityAdvanceWakeUpShareMenuBroadcast(void)",
  "sceShareUtilityAdvanceWakeUpShareMenuDefault": "int sceShareUtilityAdvanceWakeUpShareMenuDefault(void)",
  "sceShareUtilityInitialize": "int sceShareUtilityInitialize(uint64_t functionFlag, size_t heapSize)",
  "sceShareUtilityInitializeEx2": "int sceShareUtilityInitializeEx2(uint64_t functionFlag, size_t heapSize, int threadPriority, SceKernelCpumask affinityMask)",
  "sceShareUtilityOpenShareMenu": "int sceShareUtilityOpenShareMenu(SceContentSearchContentId contentId, SceContentSearchMimeType mimeType)",
  "sceShareUtilityOpenShareMenuBroadcast": "int sceShareUtilityOpenShareMenuBroadcast(void)",
  "sceShareUtilityOpenShareMenuDefault": "int sceShareUtilityOpenShareMenuDefault(void)",
  "sceShareUtilityTerminate": "int sceShareUtilityTerminate(void)",
  "sceSigninDialogClose": "int32_t sceSigninDialogClose(void)",
  "sceSigninDialogGetResult": "int32_t sceSigninDialogGetResult(struct *result)",
  "sceSigninDialogGetStatus": "enum sceSigninDialogGetStatus(void)",
  "sceSigninDialogInitialize": "int32_t sceSigninDialogInitialize(void)",
  "sceSigninDialogOpen": "int32_t sceSigninDialogOpen(const struct *param)",
  "sceSigninDialogTerminate": "int32_t sceSigninDialogTerminate(void)",
  "sceSigninDialogUpdateStatus": "enum sceSigninDialogUpdateStatus(void)",
  "sceSmartCreateInstantImageTarget": "int32_t sceSmartCreateInstantImageTarget(int32_t* targetIdReturn, const void* img, int width, int height, int x, int y, int cropWidth, int cropHeight, float physicalWidth)",
  "sceSmartCreateLearnedImageTarget": "int32_t sceSmartCreateLearnedImageTarget(int32_t* targetIdReturn, struct* stream)",
  "sceSmartDestroyTarget": "int32_t sceSmartDestroyTarget(const int32_t targetID)",
  "sceSmartGetTargetInfo": "int32_t sceSmartGetTargetInfo(const int32_t targetID, struct* info)",
  "sceSmartInit": "int32_t sceSmartInit(struct* mallocator)",
  "sceSmartRelease": "int32_t sceSmartRelease(void)",
  "sceSmartTargetSelectorCreateTargetPack": "int32_t sceSmartTargetSelectorCreateTargetPack(int32_t* targetPackID, SceSmartStreamIn* stream)",
  "sceSmartTargetSelectorDestroyTargetPack": "int32_t sceSmartTargetSelectorDestroyTargetPack(int32_t targetPackID)",
  "sceSmartTargetSelectorGetResults": "int32_t sceSmartTargetSelectorGetResults(struct* outResults, int32_t maxNumResults)",
  "sceSmartTargetSelectorGetTargetPackInfo": "int32_t sceSmartTargetSelectorGetTargetPackInfo(int32_t targetPackID, struct* info)",
  "sceSmartTargetSelectorQuery": "int32_t sceSmartTargetSelectorQuery(struct* outResult, int32_t targetPackID, int32_t targetIndex)",
  "sceSmartTargetSelectorRegisterTargetPack": "int32_t sceSmartTargetSelectorRegisterTargetPack(int32_t targetPackID)",
  "sceSmartTargetSelectorReset": "int32_t sceSmartTargetSelectorReset(void)",
  "sceSmartTargetSelectorRun": "int32_t sceSmartTargetSelectorRun(const void* image, const struct* imageROI)",
  "sceSmartTargetSelectorStart": "int32_t sceSmartTargetSelectorStart(void)",
  "sceSmartTargetSelectorStop": "int32_t sceSmartTargetSelectorStop(void)",
  "sceSmartTargetSelectorUnregisterTargetPack": "int32_t sceSmartTargetSelectorUnregisterTargetPack(int32_t targetPackID)",
  "sceSmartTargetTrackingCreateInstance": "int32_t sceSmartTargetTrackingCreateInstance(int32_t* outInstanceId)",
  "sceSmartTargetTrackingDestroyInstance": "int32_t sceSmartTargetTrackingDestroyInstance(int32_t instanceId)",
  "sceSmartTargetTrackingDispatchAndQuery": "int32_t sceSmartTargetTrackingDispatchAndQuery(const struct* args)",
  "sceSmartTargetTrackingDispatchAndQueryMI": "int32_t sceSmartTargetTrackingDispatchAndQueryMI(int32_t instanceId, const struct* args)",
  "sceSmartTargetTrackingGetDefaultInstanceId": "int32_t sceSmartTargetTrackingGetDefaultInstanceId(int32_t* outInstanceId)",
  "sceSmartTargetTrackingGetResults": "int32_t sceSmartTargetTrackingGetResults(struct* outResults, int32_t maxNumResults)",
  "sceSmartTargetTrackingGetResultsMI": "int32_t sceSmartTargetTrackingGetResultsMI(int32_t instanceId, struct* outResults, int32_t maxNumResults)",
  "sceSmartTargetTrackingQuery": "int32_t sceSmartTargetTrackingQuery(struct* outResult, int32_t targetID)",
  "sceSmartTargetTrackingQuery2": "int32_t sceSmartTargetTrackingQuery2(struct* outResult, SceUInt64* outTimestamp, int32_t targetID)",
  "sceSmartTargetTrackingQuery2MI": "int32_t sceSmartTargetTrackingQuery2MI(int32_t instanceId, struct* outResult, SceUInt64* outTimestamp, int32_t targetID)",
  "sceSmartTargetTrackingQueryMI": "int32_t sceSmartTargetTrackingQueryMI(int32_t instanceId, struct* outResult, int32_t targetID)",
  "sceSmartTargetTrackingRegisterTarget": "int32_t sceSmartTargetTrackingRegisterTarget(const int32_t targetID)",
  "sceSmartTargetTrackingRegisterTargetMI": "int32_t sceSmartTargetTrackingRegisterTargetMI(int32_t instanceId, const int32_t targetID)",
  "sceSmartTargetTrackingReset": "int32_t sceSmartTargetTrackingReset(void)",
  "sceSmartTargetTrackingResetMI": "int32_t sceSmartTargetTrackingResetMI(int32_t instanceId)",
  "sceSmartTargetTrackingRun": "int32_t sceSmartTargetTrackingRun(const void* image)",
  "sceSmartTargetTrackingRun2": "int32_t sceSmartTargetTrackingRun2(const struct* args)",
  "sceSmartTargetTrackingRun2MI": "int32_t sceSmartTargetTrackingRun2MI(int32_t instanceId, const struct* args)",
  "sceSmartTargetTrackingRunMI": "int32_t sceSmartTargetTrackingRunMI(int32_t instanceId, const void* image)",
  "sceSmartTargetTrackingRunWorker": "int32_t sceSmartTargetTrackingRunWorker(void)",
  "sceSmartTargetTrackingRunWorkerMI": "int32_t sceSmartTargetTrackingRunWorkerMI(int32_t instanceId)",
  "sceSmartTargetTrackingSetCameraParam": "int32_t sceSmartTargetTrackingSetCameraParam(const SceSmartCameraParam* param)",
  "sceSmartTargetTrackingSetCameraParamMI": "int32_t sceSmartTargetTrackingSetCameraParamMI(int32_t instanceId, const SceSmartCameraParam* param)",
  "sceSmartTargetTrackingSetSearchPolicy": "int32_t sceSmartTargetTrackingSetSearchPolicy(enum policy)",
  "sceSmartTargetTrackingSetSearchPolicyMI": "int32_t sceSmartTargetTrackingSetSearchPolicyMI(int32_t instanceId, enum policy)",
  "sceSmartTargetTrackingStart": "int32_t sceSmartTargetTrackingStart(int32_t maxNumTargets)",
  "sceSmartTargetTrackingStartMI": "int32_t sceSmartTargetTrackingStartMI(int32_t instanceId, int32_t maxNumTargets)",
  "sceSmartTargetTrackingStop": "int32_t sceSmartTargetTrackingStop(void)",
  "sceSmartTargetTrackingStopMI": "int32_t sceSmartTargetTrackingStopMI(int32_t instanceId)",
  "sceSmartTargetTrackingUnregisterTarget": "int32_t sceSmartTargetTrackingUnregisterTarget(const int32_t targetID)",
  "sceSmartTargetTrackingUnregisterTargetMI": "int32_t sceSmartTargetTrackingUnregisterTargetMI(int32_t instanceId, int32_t targetID)",
  "sceSocialScreenCloseSeparateMode": "int sceSocialScreenCloseSeparateMode()",
  "sceSocialScreenConfigureSeparateMode": "int sceSocialScreenConfigureSeparateMode(const struct *pParam)",
  "sceSocialScreenDialogClose": "int32_t sceSocialScreenDialogClose(void)",
  "sceSocialScreenDialogGetResult": "int32_t sceSocialScreenDialogGetResult(struct *pResult)",
  "sceSocialScreenDialogGetStatus": "SceCommonDialogStatus sceSocialScreenDialogGetStatus(void)",
  "sceSocialScreenDialogInitialize": "int32_t sceSocialScreenDialogInitialize(void)",
  "sceSocialScreenDialogOpen": "int32_t sceSocialScreenDialogOpen(const struct *pParam)",
  "sceSocialScreenDialogTerminate": "int32_t sceSocialScreenDialogTerminate(void)",
  "sceSocialScreenDialogUpdateStatus": "SceCommonDialogStatus sceSocialScreenDialogUpdateStatus(void)",
  "sceSocialScreenInitialize": "int sceSocialScreenInitialize()",
  "sceSocialScreenInitializeSeparateModeParameter": "int sceSocialScreenInitializeSeparateModeParameter(struct *pParam)",
  "sceSocialScreenOpenSeparateMode": "int sceSocialScreenOpenSeparateMode()",
  "sceSocialScreenSetMode": "int sceSocialScreenSetMode(enum mode)",
  "sceSocialScreenTerminate": "int sceSocialScreenTerminate()",
  "sceSpeechRecognitionCreateByCache": "int32_t sceSpeechRecognitionCreateByCache(struct *pInputParam, struct *pCached, int32_t gndIdx, const void **pRecogObj)",
  "sceSpeechRecognitionCreateBySrc": "int32_t sceSpeechRecognitionCreateBySrc(struct *pInputParam, struct *pSrc, int32_t gndIdx, const void **pRecogObj)",
  "sceSpeechRecognitionDecode": "int32_t sceSpeechRecognitionDecode(const void *pRecogObj, int32_t length, void *pSpeech, SceSpeechRecognitionProcStatus *pStatus)",
  "sceSpeechRecognitionDecodeInternalBuffer": "int32_t sceSpeechRecognitionDecodeInternalBuffer(const void *pRecogObj, SceSpeechRecognitionProcStatus *pStatus)",
  "sceSpeechRecognitionDelete": "int32_t sceSpeechRecognitionDelete(const void *pRecogObj, int32_t *pnMemLeak)",
  "sceSpeechRecognitionDeleteCache": "int32_t sceSpeechRecognitionDeleteCache(struct *pCached, SceSpeechRecognitionMFree *freeFn)",
  "sceSpeechRecognitionFinalize": "int32_t sceSpeechRecognitionFinalize()",
  "sceSpeechRecognitionGenerateCache": "int32_t sceSpeechRecognitionGenerateCache(struct *pInputParam, struct *pSrc, struct *pCached)",
  "sceSpeechRecognitionGeneratePronunciation": "int32_t sceSpeechRecognitionGeneratePronunciation(const void *pRecogObj, const char *word, SceSpeechRecognitionG2PLanguage language, const char ***pronunciation, int *numPronunciations)",
  "sceSpeechRecognitionGetActiveVocabulary": "int32_t sceSpeechRecognitionGetActiveVocabulary(const void *pRecogObj, const SceSpeechRecognitionResult **pResult)",
  "sceSpeechRecognitionGetErrorMessage": "int32_t sceSpeechRecognitionGetErrorMessage(const void *pRecogObj, char **pErrorMsg)",
  "sceSpeechRecognitionGetResult": "int32_t sceSpeechRecognitionGetResult(const void *pRecogObj, SceSpeechRecognitionQuery queryFlag, int numWords, const SceSpeechRecognitionResult **pResult)",
  "sceSpeechRecognitionInitialize": "int32_t sceSpeechRecognitionInitialize()",
  "sceSpeechRecognitionReset": "int32_t sceSpeechRecognitionReset(const void *pRecogObj, float sense, float timeout)",
  "sceSpeechRecognitionRestart": "int32_t sceSpeechRecognitionRestart(const void *pRecogObj, float sense, float timeout, const char **pVoc)",
  "sceSpeechRecognitionSelectGnD": "int32_t sceSpeechRecognitionSelectGnD(int32_t gndIdx, const void *pRecogObj)",
  "sceSpeechRecognitionSetSenseAndTimeout": "int32_t sceSpeechRecognitionSetSenseAndTimeout(const void *pRecogObj, float sense, float timeout)",
  "sceSpeechRecognitionStart": "int32_t sceSpeechRecognitionStart(const void *pRecogObj, float sense, float timeout, SceSpeechRecognitionAction action, int32_t numWords, void *word, const char **pVoc)",
  "sceSslFreeCaCerts": "int sceSslFreeCaCerts(int libsslCtxId, struct* caCerts)",
  "sceSslFreeCaList": "int sceSslFreeCaList(int libsslCtxId, struct* caList)",
  "sceSslFreeSslCertName": "int sceSslFreeSslCertName (int libsslCtxId, voidName *certName)",
  "sceSslGetCaCerts": "int sceSslGetCaCerts(int libsslCtxId, struct* caCerts)",
  "sceSslGetCaList": "int sceSslGetCaList(int libsslCtxId, struct* caList)",
  "sceSslGetIssuerName": "voidName *sceSslGetIssuerName (int libsslCtxId, void *sslCert)",
  "sceSslGetMemoryPoolStats": "int sceSslGetMemoryPoolStats (int libsslCtxId, struct* currentStat)",
  "sceSslGetNameEntryCount": "int sceSslGetNameEntryCount (int libsslCtxId, const voidName *certName)",
  "sceSslGetNameEntryInfo": "int sceSslGetNameEntryInfo (int libsslCtxId, const voidName *certName, int entryNum, char *oidname, size_t maxOidnameLen, uint8_t *value, size_t maxValueLen, size_t *valueLen)",
  "sceSslGetNotAfter": "int sceSslGetNotAfter (int libsslCtxId, void *sslCert, SceRtcTick *limit)",
  "sceSslGetNotBefore": "int sceSslGetNotBefore (int libsslCtxId, void *sslCert, SceRtcTick *begin)",
  "sceSslGetSerialNumber": "int sceSslGetSerialNumber (int libsslCtxId, void *sslCert, uint8_t *sboData, size_t *sboLen)",
  "sceSslGetSubjectName": "voidName *sceSslGetSubjectName (int libsslCtxId, void *sslCert)",
  "sceSslInit": "int sceSslInit(size_t poolSize)",
  "sceSslTerm": "int sceSslTerm(int libsslCtxId)",
  "sceSubdivPatchBezierHsConstant": "return sceSubdivPatchBezierHsConstant(patch, primitiveID, patchTable, tessLevel, 0, projectionMatrix, matrixToClipSpace, output)",
  "sceSysmoduleIsLoaded": "int sceSysmoduleIsLoaded(uint16_t id)",
  "sceSysmoduleLoadModule": "int sceSysmoduleLoadModule(uint16_t id)",
  "sceSysmoduleUnloadModule": "int sceSysmoduleUnloadModule(uint16_t id)",
  "sceSystemGestureAppendTouchRecognizer": "int sceSystemGestureAppendTouchRecognizer(int32_t gestureHandle, struct* touchRecognizer)",
  "sceSystemGestureClose": "int sceSystemGestureClose(int32_t gestureHandle)",
  "sceSystemGestureCreateTouchRecognizer": "int sceSystemGestureCreateTouchRecognizer(int32_t gestureHandle, struct* touchRecognizer, enum gestureType, struct* rectangle, structParameter* touchRecognizerParameter)",
  "sceSystemGestureFinalizePrimitiveTouchRecognizer": "int sceSystemGestureFinalizePrimitiveTouchRecognizer(void)",
  "sceSystemGestureGetPrimitiveTouchEventByIndex": "int sceSystemGestureGetPrimitiveTouchEventByIndex(int32_t gestureHandle, const uint32_t index, struct* primitiveTouchEvent)",
  "sceSystemGestureGetPrimitiveTouchEventByPrimitiveID": "int sceSystemGestureGetPrimitiveTouchEventByPrimitiveID(int32_t gestureHandle, const uint16_t primitiveID, struct* primitiveTouchEvent)",
  "sceSystemGestureGetPrimitiveTouchEvents": "int sceSystemGestureGetPrimitiveTouchEvents(int32_t gestureHandle, struct* primitiveEventBuffer, const uint32_t capacityOfBuffer, uint32_t* numberOfEvent)",
  "sceSystemGestureGetPrimitiveTouchEventsCount": "int sceSystemGestureGetPrimitiveTouchEventsCount(int32_t gestureHandle)",
  "sceSystemGestureGetTouchEventByEventID": "int sceSystemGestureGetTouchEventByEventID(int32_t gestureHandle, const struct* touchRecognizer, const uint32_t eventID, struct* touchEvent)",
  "sceSystemGestureGetTouchEventByIndex": "int sceSystemGestureGetTouchEventByIndex(int32_t gestureHandle, const struct* touchRecognizer, const uint32_t index, struct* touchEvent)",
  "sceSystemGestureGetTouchEvents": "int sceSystemGestureGetTouchEvents(int32_t gestureHandle, const struct* touchRecognizer, struct* eventBuffer, const uint32_t capacityOfBuffer, uint32_t* numberOfEvent)",
  "sceSystemGestureGetTouchEventsCount": "int sceSystemGestureGetTouchEventsCount(int32_t gestureHandle, const struct* touchRecognizer)",
  "sceSystemGestureGetTouchRecognizerInformation": "int sceSystemGestureGetTouchRecognizerInformation(int32_t gestureHandle, const struct* touchRecognizer, structInformation* information)",
  "sceSystemGestureInitializePrimitiveTouchRecognizer": "int sceSystemGestureInitializePrimitiveTouchRecognizer(struct* parameter)",
  "sceSystemGestureOpen": "int32_t sceSystemGestureOpen(int32_t inputType, struct* parameter)",
  "sceSystemGestureRemoveTouchRecognizer": "int sceSystemGestureRemoveTouchRecognizer(int32_t gestureHandle, struct* touchRecognizer)",
  "sceSystemGestureResetPrimitiveTouchRecognizer": "int sceSystemGestureResetPrimitiveTouchRecognizer(int32_t gestureHandle)",
  "sceSystemGestureResetTouchRecognizer": "int sceSystemGestureResetTouchRecognizer(int32_t gestureHandle, struct* touchRecognizer)",
  "sceSystemGestureUpdateAllTouchRecognizer": "int sceSystemGestureUpdateAllTouchRecognizer(int32_t gestureHandle)",
  "sceSystemGestureUpdatePrimitiveTouchRecognizer": "int sceSystemGestureUpdatePrimitiveTouchRecognizer(int32_t gestureHandle, const struct* pInputData)",
  "sceSystemGestureUpdateTouchRecognizer": "int sceSystemGestureUpdateTouchRecognizer(int32_t gestureHandle, struct* touchRecognizer)",
  "sceSystemGestureUpdateTouchRecognizerRectangle": "int sceSystemGestureUpdateTouchRecognizerRectangle(int32_t gestureHandle, struct* touchRecognizer, const struct* rectangle)",
  "sceSystemServiceDisableMusicPlayer": "int32_t sceSystemServiceDisableMusicPlayer()",
  "sceSystemServiceDisablePersonalEyeToEyeDistanceSetting": "int32_t sceSystemServiceDisablePersonalEyeToEyeDistanceSetting()",
  "sceSystemServiceDisableSuspendConfirmationDialog": "int32_t sceSystemServiceDisableSuspendConfirmationDialog()",
  "sceSystemServiceEnablePersonalEyeToEyeDistanceSetting": "int32_t sceSystemServiceEnablePersonalEyeToEyeDistanceSetting()",
  "sceSystemServiceEnableSuspendConfirmationDialog": "int32_t sceSystemServiceEnableSuspendConfirmationDialog()",
  "sceSystemServiceGetDisplaySafeAreaInfo": "int32_t sceSystemServiceGetDisplaySafeAreaInfo(struct* info)",
  "sceSystemServiceGetGpuLoadEmulationMode": "SceSystemServiceGpuLoadEmulationMode sceSystemServiceGetGpuLoadEmulationMode()",
  "sceSystemServiceGetStatus": "int32_t sceSystemServiceGetStatus(SceSystemServiceStatus* status)",
  "sceSystemServiceHideSplashScreen": "int32_t sceSystemServiceHideSplashScreen()",
  "sceSystemServiceIsEyeToEyeDistanceAdjusted": "int32_t sceSystemServiceIsEyeToEyeDistanceAdjusted(SceUserServiceUserId userId, bool *isAdjusted)",
  "sceSystemServiceLaunchEventDetails": "int32_t sceSystemServiceLaunchEventDetails(SceUserServiceUserId userId, const char* eventId)",
  "sceSystemServiceLaunchTournamentsTeamProfile": "int32_t sceSystemServiceLaunchTournamentsTeamProfile(SceUserServiceUserId userId, const char *teamId, const char *eventId, const char *teamPlatform)",
  "sceSystemServiceLaunchWebBrowser": "int32_t sceSystemServiceLaunchWebBrowser(const char *uri, const struct *param)",
  "sceSystemServicePowerTick": "int32_t sceSystemServicePowerTick()",
  "sceSystemServiceReceiveEvent": "int32_t sceSystemServiceReceiveEvent(SceSystemServiceEvent* event)",
  "sceSystemServiceReenableMusicPlayer": "int32_t sceSystemServiceReenableMusicPlayer()",
  "sceSystemServiceReportAbnormalTermination": "int32_t sceSystemServiceReportAbnormalTermination(const struct SceSystemServiceAbnormalTerminationInfo* info)",
  "sceSystemServiceSetGpuLoadEmulationMode": "int32_t sceSystemServiceSetGpuLoadEmulationMode(SceSystemServiceGpuLoadEmulationMode mode)",
  "sceSystemServiceShowControllerSettings": "int32_t sceSystemServiceShowControllerSettings()",
  "sceSystemServiceShowEyeToEyeDistanceSetting": "int32_t sceSystemServiceShowEyeToEyeDistanceSetting()",
  "sceUsbdAllocTransfer": "struct struct *sceUsbdAllocTransfer(int packets)",
  "sceUsbdAttachKernelDriver": "int sceUsbdAttachKernelDriver(struct libusb_deviceHandle *deviceHandle, int interface)",
  "sceUsbdBulkTransfer": "int sceUsbdBulkTransfer(struct libusb_deviceHandle *deviceHandle, uint8_t endpoint, uint8_t *data, int length, int *transferred, uint32_t timeout)",
  "sceUsbdCancelTransfer": "int sceUsbdCancelTransfer(struct struct *transfer)",
  "sceUsbdCheckConnected": "int sceUsbdCheckConnected(struct libusb_deviceHandle *deviceHandle)",
  "sceUsbdClaimInterface": "int sceUsbdClaimInterface(struct libusb_deviceHandle *deviceHandle, int interfaceNumber)",
  "sceUsbdClearHalt": "int sceUsbdClearHalt(struct libusb_deviceHandle *deviceHandle, uint8_t endpoint)",
  "sceUsbdClose": "void sceUsbdClose(struct libusb_deviceHandle *deviceHandle)",
  "sceUsbdControlTransfer": "int sceUsbdControlTransfer(struct libusb_deviceHandle *deviceHandle, uint8_t bmRequestType, uint8_t bRequest, uint16_t wValue, uint16_t wIndex, uint8_t *data, uint16_t wLength, uint32_t timeout)",
  "sceUsbdControlTransferGetData": "uint8_t *sceUsbdControlTransferGetData(struct struct *transfer)",
  "sceUsbdControlTransferGetSetup": "struct struct *sceUsbdControlTransferGetSetup(struct struct *transfer)",
  "sceUsbdDetachKernelDriver": "int sceUsbdDetachKernelDriver(struct libusb_deviceHandle *deviceHandle, int interface)",
  "sceUsbdEventHandlerActive": "int sceUsbdEventHandlerActive(void)",
  "sceUsbdEventHandlingOk": "int sceUsbdEventHandlingOk(void)",
  "sceUsbdExit": "void sceUsbdExit(void)",
  "sceUsbdFillBulkTransfer": "void sceUsbdFillBulkTransfer(struct struct *transfer, struct libusb_deviceHandle *deviceHandle, uint8_t endpoint, uint8_t *buf, int length, structCallback callback, void *userData, uint32_t timeout)",
  "sceUsbdFillControlSetup": "void sceUsbdFillControlSetup(uint8_t *buf, uint8_t bmRequestType, uint8_t bRequest, uint16_t wValue, uint16_t wIndex, uint16_t wLength)",
  "sceUsbdFillControlTransfer": "void sceUsbdFillControlTransfer(struct struct *transfer, struct libusb_deviceHandle *deviceHandle, uint8_t *buf, structCallback callback, void *userData, uint32_t timeout)",
  "sceUsbdFillInterruptTransfer": "void sceUsbdFillInterruptTransfer(struct struct *transfer, struct libusb_deviceHandle *deviceHandle, uint8_t endpoint, uint8_t *buf, int length, structCallback callback, void *userData, uint32_t timeout)",
  "sceUsbdFillIsoTransfer": "void sceUsbdFillIsoTransfer(struct struct *transfer, struct libusb_deviceHandle *deviceHandle, uint8_t endpoint, uint8_t *buf, int length, int npacket, structCallback callback, void *userData, uint32_t timeout)",
  "sceUsbdFreeConfigDescriptor": "void sceUsbdFreeConfigDescriptor(struct struct *config)",
  "sceUsbdFreeDeviceList": "void sceUsbdFreeDeviceList(struct libusb_device **list, int unrefDevices)",
  "sceUsbdFreeTransfer": "void sceUsbdFreeTransfer(struct struct *transfer)",
  "sceUsbdGetActiveConfigDescriptor": "int sceUsbdGetActiveConfigDescriptor(struct libusb_device *device, struct struct **config)",
  "sceUsbdGetBusNumber": "uint8_t sceUsbdGetBusNumber(struct libusb_device *device)",
  "sceUsbdGetConfigDescriptor": "int sceUsbdGetConfigDescriptor(struct libusb_device *device, uint8_t configIndex, struct struct **config)",
  "sceUsbdGetConfigDescriptorByValue": "int sceUsbdGetConfigDescriptorByValue(struct libusb_device *device, uint8_t bConfigurationValue, struct struct **config)",
  "sceUsbdGetConfiguration": "int sceUsbdGetConfiguration(struct libusb_deviceHandle *deviceHandle, int *configuration)",
  "sceUsbdGetDescriptor": "int sceUsbdGetDescriptor(struct libusb_deviceHandle *deviceHandle, uint8_t descType, uint8_t descIndex, uint8_t *data, int length)",
  "sceUsbdGetDevice": "struct libusb_device *sceUsbdGetDevice(struct libusb_deviceHandle *deviceHandle)",
  "sceUsbdGetDeviceAddress": "uint8_t sceUsbdGetDeviceAddress(struct libusb_device *device)",
  "sceUsbdGetDeviceDescriptor": "int sceUsbdGetDeviceDescriptor(struct libusb_device *device, struct struct libusb_deviceDescriptor *desc)",
  "sceUsbdGetDeviceList": "ssize_t sceUsbdGetDeviceList(struct libusb_device ***list)",
  "sceUsbdGetDeviceSpeed": "enum sceUsbdGetDeviceSpeed(struct libusb_device *device)",
  "sceUsbdGetIsoPacketBuffer": "uint8_t *sceUsbdGetIsoPacketBuffer(struct struct *transfer, uint32_t index)",
  "sceUsbdGetMaxIsoPacketSize": "int sceUsbdGetMaxIsoPacketSize(struct libusb_device *device, uint8_t endpoint)",
  "sceUsbdGetMaxPacketSize": "int sceUsbdGetMaxPacketSize(struct libusb_device *device, uint8_t endpoint)",
  "sceUsbdGetStringDescriptor": "int sceUsbdGetStringDescriptor(struct libusb_deviceHandle *deviceHandle, uint8_t descIndex, uint16_t langId, unsigned char *data, int length)",
  "sceUsbdGetStringDescriptorAscii": "int sceUsbdGetStringDescriptorAscii(struct libusb_deviceHandle *deviceHandle, uint8_t descIndex, uint8_t *data, int length)",
  "sceUsbdHandleEvents": "int sceUsbdHandleEvents(void)",
  "sceUsbdHandleEventsLocked": "int sceUsbdHandleEventsLocked(struct timeval *tv)",
  "sceUsbdHandleEventsTimeout": "int sceUsbdHandleEventsTimeout(struct timeval *tv)",
  "sceUsbdInit": "int sceUsbdInit(void)",
  "sceUsbdInterruptTransfer": "int sceUsbdInterruptTransfer(struct libusb_deviceHandle * devh, uint8_t endpoint, uint8_t *data, int length, int *transferred, uint32_t timeout)",
  "sceUsbdKernelDriverActive": "int sceUsbdKernelDriverActive(struct libusb_deviceHandle *deviceHandle, int interface)",
  "sceUsbdLockEventWaiters": "void sceUsbdLockEventWaiters(void)",
  "sceUsbdLockEvents": "void sceUsbdLockEvents(void)",
  "sceUsbdOpen": "int sceUsbdOpen(struct libusb_device *device, struct libusb_deviceHandle **deviceHandle)",
  "sceUsbdOpenDeviceWithVidPid": "struct libusb_deviceHandle *sceUsbdOpenDeviceWithVidPid(uint16_t vendorId, uint16_t productId)",
  "sceUsbdRefDevice": "struct libusb_device *sceUsbdRefDevice(struct libusb_device *device)",
  "sceUsbdReleaseInterface": "int sceUsbdReleaseInterface(struct libusb_deviceHandle *deviceHandle, int interfaceNumber)",
  "sceUsbdResetDevice": "int sceUsbdResetDevice(struct libusb_deviceHandle *deviceHandle)",
  "sceUsbdSetConfiguration": "int sceUsbdSetConfiguration(struct libusb_deviceHandle *deviceHandle, int configuration)",
  "sceUsbdSetInterfaceAltSetting": "int sceUsbdSetInterfaceAltSetting(struct libusb_deviceHandle *deviceHandle, int interfaceNumber, int alternateSetting)",
  "sceUsbdSetIsoPacketLengths": "void sceUsbdSetIsoPacketLengths(struct struct *transfer, uint32_t length)",
  "sceUsbdSubmitTransfer": "int sceUsbdSubmitTransfer(struct struct *transfer)",
  "sceUsbdTryLockEvents": "int sceUsbdTryLockEvents(void)",
  "sceUsbdUnlockEventWaiters": "void sceUsbdUnlockEventWaiters(void)",
  "sceUsbdUnlockEvents": "void sceUsbdUnlockEvents(void)",
  "sceUsbdUnrefDevice": "void sceUsbdUnrefDevice(struct libusb_device *device)",
  "sceUsbdWaitForEvent": "int sceUsbdWaitForEvent(struct timeval *tv)",
  "sceUserServiceGetEvent": "int32_t sceUserServiceGetEvent(struct *event)",
  "sceUserServiceGetInitialUser": "int32_t sceUserServiceGetInitialUser(SceUserServiceUserId *userId)",
  "sceUserServiceGetLoginUserIdList": "int32_t sceUserServiceGetLoginUserIdList(struct *userIdList)",
  "sceUserServiceGetUserColor": "int32_t sceUserServiceGetUserColor(const SceUserServiceUserId userId, enum *color)",
  "sceUserServiceGetUserName": "int32_t sceUserServiceGetUserName(const SceUserServiceUserId userId, char *userName, const size_t size)",
  "sceUserServiceInitialize": "int32_t sceUserServiceInitialize(const struct *initParams)",
  "sceUserServiceInitialize2": "int32_t sceUserServiceInitialize2(int threadPriority, SceKernelCpumask cpuAffinityMask)",
  "sceUserServiceTerminate": "int32_t sceUserServiceTerminate()",
  "sceVdecswAllocateComputeQueue": "int32_t sceVdecswAllocateComputeQueue(const struct *pComputeCfgInfoIn, const struct *pComputeMemInfoIn, void* *pComputeQueueOut)",
  "sceVdecswCreateDecoder": "int32_t sceVdecswCreateDecoder(const void*ConfigInfo *pDecoderConfigInfoIn, const void*MemoryInfo *pDecoderMemoryInfoIn, void* *pDecoderInstanceOut)",
  "sceVdecswDeleteDecoder": "int32_t sceVdecswDeleteDecoder(void* decoderInstanceIn)",
  "sceVdecswFinalizeDecodeSequence": "int32_t sceVdecswFinalizeDecodeSequence(void* decoderInstanceIn)",
  "sceVdecswGetAvcPictureInfo": "int32_t sceVdecswGetAvcPictureInfo(const struct *pOutputInfoIn, SceVdecswAvcPictureInfo *p1stPictureInfoOut, SceVdecswAvcPictureInfo *p2ndPictureInfoOut)",
  "sceVdecswGetHevcPictureInfo": "int32_t sceVdecswGetHevcPictureInfo(const struct *pOutputInfoIn, SceVdecswHevcPictureInfo *pPictureInfoOut)",
  "sceVdecswGetPictureInfo": "int32_t sceVdecswGetPictureInfo(const struct *pOutputInfoIn, void *p1stPictureInfoOut, void *p2ndPictureInfoOut)",
  "sceVdecswPresetDecoderConfigInfoAvc": "return sceVdecswPresetDecoderConfigInfoAvc(preset, computeQueue, pDecoderConfigInfoOut)",
  "sceVdecswQueryComputeMemoryInfo": "int32_t sceVdecswQueryComputeMemoryInfo(struct *pComputeMemInfoOut)",
  "sceVdecswQueryDecoderMemoryInfo": "int32_t sceVdecswQueryDecoderMemoryInfo(const void*ConfigInfo *pDecoderConfigInfoIn, void*MemoryInfo *pDecoderMemoryInfoOut)",
  "sceVdecswReleaseComputeQueue": "int32_t sceVdecswReleaseComputeQueue(void* computeQueueIn)",
  "sceVdecswResetDecoder": "int32_t sceVdecswResetDecoder(void* decoderInstanceIn)",
  "sceVdecswSetDecodeInput": "int32_t sceVdecswSetDecodeInput(void* decoderInstanceIn, const struct *pInputDataIn)",
  "sceVdecswSetDecodeOutput": "int32_t sceVdecswSetDecodeOutput(void* decoderInstanceIn, struct *pFrameBufferInOut)",
  "sceVdecswSyncDecodeInput": "int32_t sceVdecswSyncDecodeInput(void* decoderInstanceIn, struct *pInputResultOut)",
  "sceVdecswSyncDecodeOutput": "int32_t sceVdecswSyncDecodeOutput(void* decoderInstanceIn, struct *pOutputInfoOut)",
  "sceVdecswTrySyncDecodeInput": "int32_t sceVdecswTrySyncDecodeInput(void* decoderInstanceIn, struct *pInputResultOut)",
  "sceVdecswTrySyncDecodeOutput": "int32_t sceVdecswTrySyncDecodeOutput(void* decoderInstanceIn, struct *pOutputInfoOut)",
  "sceVideoOutAddFlipEvent": "int32_t sceVideoOutAddFlipEvent(SceKernelEqueue eq, int32_t handle, void *udata)",
  "sceVideoOutAddPreVblankStartEvent": "int32_t sceVideoOutAddPreVblankStartEvent(SceKernelEqueue eq, int32_t handle, void *udata)",
  "sceVideoOutAddVblankEvent": "int32_t sceVideoOutAddVblankEvent(SceKernelEqueue eq, int32_t handle, void *udata)",
  "sceVideoOutAdjustColor_": "int32_t sceVideoOutAdjustColor_(int32_t handle, struct *pSettings, uint32_t sizeOfSettings)",
  "sceVideoOutClose": "int32_t sceVideoOutClose(int32_t handle)",
  "sceVideoOutCloseVrTraceHook": "int32_t sceVideoOutCloseVrTraceHook(int32_t handle)",
  "sceVideoOutColorSettingsSetGamma_": "int32_t sceVideoOutColorSettingsSetGamma_(struct* p, float gamma, uint32_t sizeOfSettings)",
  "sceVideoOutConfigureOptionsInitialize_": "void sceVideoOutConfigureOptionsInitialize_(struct *pOptions, uint32_t sizeOfOptions)",
  "sceVideoOutConfigureOutputMode_": "int32_t sceVideoOutConfigureOutputMode_(int32_t handle, uint32_t reserved, struct const *pMode, struct const *pOptions, uint32_t sizeOfMode, uint32_t sizeOfOptions)",
  "sceVideoOutCursorDisable": "int32_t sceVideoOutCursorDisable(int32_t handle, int32_t index)",
  "sceVideoOutCursorEnable": "int32_t sceVideoOutCursorEnable(int32_t handle, int32_t index, const void *address)",
  "sceVideoOutCursorIsUpdatePending": "int32_t sceVideoOutCursorIsUpdatePending(int32_t handle, int32_t index, enum type)",
  "sceVideoOutCursorSet2xMagnify": "int32_t sceVideoOutCursorSet2xMagnify(int32_t handle, int32_t index, uint32_t enable)",
  "sceVideoOutCursorSetHotSpot": "int32_t sceVideoOutCursorSetHotSpot(int32_t handle, int32_t index, uint32_t hotX, uint32_t hotY)",
  "sceVideoOutCursorSetImageAddress": "int32_t sceVideoOutCursorSetImageAddress(int32_t handle, int32_t index, const void *address)",
  "sceVideoOutCursorSetPosition": "int32_t sceVideoOutCursorSetPosition(int32_t handle, int32_t index, uint32_t posX, uint32_t posY)",
  "sceVideoOutCursorSetPositionStereo": "int32_t sceVideoOutCursorSetPositionStereo(int32_t handle, int32_t index, uint32_t posX, uint32_t posY, uint32_t offset)",
  "sceVideoOutDeleteFlipEvent": "int32_t sceVideoOutDeleteFlipEvent(SceKernelEqueue eq, int32_t handle)",
  "sceVideoOutDeletePreVblankStartEvent": "int32_t sceVideoOutDeletePreVblankStartEvent(SceKernelEqueue eq, int32_t handle)",
  "sceVideoOutDeleteVblankEvent": "int32_t sceVideoOutDeleteVblankEvent(SceKernelEqueue eq, int32_t handle)",
  "sceVideoOutGetDeviceCapabilityInfo_": "int32_t sceVideoOutGetDeviceCapabilityInfo_(int32_t handle, struct *pInfo, size_t sizeOfInfo)",
  "sceVideoOutGetEventCount": "int32_t sceVideoOutGetEventCount(const SceKernelEvent *ev)",
  "sceVideoOutGetEventData": "int32_t sceVideoOutGetEventData(const SceKernelEvent *ev, int64_t *data)",
  "sceVideoOutGetEventId": "int32_t sceVideoOutGetEventId(const SceKernelEvent *ev)",
  "sceVideoOutGetFlipStatus": "int32_t sceVideoOutGetFlipStatus(int32_t handle, struct *status)",
  "sceVideoOutGetResolutionStatus": "int32_t sceVideoOutGetResolutionStatus(int32_t handle, struct *status)",
  "sceVideoOutGetVblankStatus": "int32_t sceVideoOutGetVblankStatus(int32_t handle, struct *status)",
  "sceVideoOutIsFlipPending": "int32_t sceVideoOutIsFlipPending(int32_t handle)",
  "sceVideoOutModeSetAny_": "void sceVideoOutModeSetAny_(struct *pMode, uint32_t sizeOfMode)",
  "sceVideoOutOpen": "int32_t sceVideoOutOpen(SceUserServiceUserId userId, int32_t type, int32_t index, const void *param)",
  "sceVideoOutOpenVrTraceHook": "int32_t sceVideoOutOpenVrTraceHook(SceUserServiceUserId userId, int32_t busType, int32_t index, const void *param)",
  "sceVideoOutRegisterBuffers": "int32_t sceVideoOutRegisterBuffers(int32_t handle, int32_t startIndex, void * const *addresses, int32_t bufferNum, const struct *attribute)",
  "sceVideoOutRegisterStereoBuffers": "int32_t sceVideoOutRegisterStereoBuffers(int32_t handle, int32_t startIndex, const struct *buffers, int32_t length, const struct *attribute)",
  "sceVideoOutSetBufferAttribute": "void sceVideoOutSetBufferAttribute(struct *attribute, uint32_t pixelFormat, uint32_t tilingMode, uint32_t aspectRatio, uint32_t width, uint32_t height, uint32_t pitchInPixel)",
  "sceVideoOutSetFlipRate": "int32_t sceVideoOutSetFlipRate(int32_t handle, int32_t rate)",
  "sceVideoOutSetWindowModeMargins": "int32_t sceVideoOutSetWindowModeMargins(int32_t handle, int top, int bottom)",
  "sceVideoOutSubmitChangeBufferAttribute": "int32_t sceVideoOutSubmitChangeBufferAttribute(int32_t handle, int32_t index, const struct *attribute)",
  "sceVideoOutSubmitFlip": "int32_t sceVideoOutSubmitFlip(int32_t handle, int32_t bufferIndex, uint32_t flipMode, int64_t flipArg)",
  "sceVideoOutUnregisterBuffers": "int32_t sceVideoOutUnregisterBuffers(int32_t handle, int32_t attributeIndex)",
  "sceVideoOutWaitVblank": "int32_t sceVideoOutWaitVblank(int32_t handle)",
  "sceVideoRecordingClose": "int32_t sceVideoRecordingClose(int32_t discard)",
  "sceVideoRecordingGetStatus": "int32_t sceVideoRecordingGetStatus(void)",
  "sceVideoRecordingOpen2": "int32_t sceVideoRecordingOpen2(const char *pPath, const struct *pParam, void *pHeap, int32_t heapSize)",
  "sceVideoRecordingQueryMemSize2": "int32_t sceVideoRecordingQueryMemSize2(const struct *pParam)",
  "sceVideoRecordingSetInfo": "int32_t sceVideoRecordingSetInfo(int32_t setInfo, const void *pInfo, size_t infoLen)",
  "sceVideoRecordingStart": "int32_t sceVideoRecordingStart(void)",
  "sceVideoRecordingStop": "int32_t sceVideoRecordingStop(void)",
  "sceVideodec2AllocateComputeQueue": "int32_t sceVideodec2AllocateComputeQueue(const struct *pComputeCfgInfoIn, const struct *pComputeMemInfoIn, void* *pComputeQueueOut)",
  "sceVideodec2CreateDecoder": "int32_t sceVideodec2CreateDecoder(const void*ConfigInfo *pDecoderConfigInfoIn, const void*MemoryInfo *pDecoderMemoryInfoIn, void* *pDecoderInstanceOut)",
  "sceVideodec2Decode": "int32_t sceVideodec2Decode(void* decoderInstanceIn, const struct *pInputDataInOut, struct *pFrameBufferInOut, struct *pOutputInfoOut)",
  "sceVideodec2DeleteDecoder": "int32_t sceVideodec2DeleteDecoder(void* decoderInstanceIn)",
  "sceVideodec2Flush": "int32_t sceVideodec2Flush(void* decoderInstanceIn, struct *pFrameBufferInOut, struct *pOutputInfoOut)",
  "sceVideodec2GetAvcPictureInfo": "int32_t sceVideodec2GetAvcPictureInfo(const struct *pOutputInfoIn, SceVideodec2AvcPictureInfo *p1stPictureInfoOut, SceVideodec2AvcPictureInfo *p2ndPictureInfoOut)",
  "sceVideodec2GetHevcPictureInfo": "int32_t sceVideodec2GetHevcPictureInfo(const struct *pOutputInfoIn, SceVideodec2HevcPictureInfo *pPictureInfoOut)",
  "sceVideodec2GetPictureInfo": "int32_t sceVideodec2GetPictureInfo(const struct *pOutputInfoIn, void *p1stPictureInfoOut, void *p2ndPictureInfoOut)",
  "sceVideodec2PresetDecoderConfigInfoAvc": "return sceVideodec2PresetDecoderConfigInfoAvc(preset, computeQueue, pDecoderConfigInfoOut)",
  "sceVideodec2QueryComputeMemoryInfo": "int32_t sceVideodec2QueryComputeMemoryInfo(struct *pComputeMemInfoOut)",
  "sceVideodec2QueryDecoderMemoryInfo": "int32_t sceVideodec2QueryDecoderMemoryInfo(const void*ConfigInfo *pDecoderConfigInfoIn, void*MemoryInfo *pDecoderMemoryInfoOut)",
  "sceVideodec2ReleaseComputeQueue": "int32_t sceVideodec2ReleaseComputeQueue(void* computeQueueIn)",
  "sceVideodec2Reset": "int32_t sceVideodec2Reset(void* decoderInstanceIn)",
  "sceVideodecCreateDecoder": "int32_t sceVideodecCreateDecoder(const struct *pDecCfgInfoIn, const struct *pRsrcInfoIn, struct *pCtrlOut)",
  "sceVideodecDecode": "int32_t sceVideodecDecode(struct *pCtrlIn, const struct *pInputDataIn, struct *pFrameBufferInOut, struct *pPictureInfoOut)",
  "sceVideodecDeleteDecoder": "int32_t sceVideodecDeleteDecoder(struct *pCtrlIn)",
  "sceVideodecFlush": "int32_t sceVideodecFlush(struct *pCtrlIn, struct *pFrameBufferInOut, struct *pPictureInfoOut)",
  "sceVideodecQueryResourceInfo": "int32_t sceVideodecQueryResourceInfo(const struct *pDecCfgInfoIn, struct *pRsrcInfoOut)",
  "sceVideodecReset": "int32_t sceVideodecReset(struct *pCtrlIn)",
  "sceVoiceConnectIPortToOPort": "int sceVoiceConnectIPortToOPort(uint32_t ips, uint32_t ops)",
  "sceVoiceCreatePort": "int sceVoiceCreatePort(uint32_t *portId, const SceVoicePortParam *pArg)",
  "sceVoiceDeletePort": "int sceVoiceDeletePort(uint32_t portId)",
  "sceVoiceDisconnectIPortFromOPort": "int sceVoiceDisconnectIPortFromOPort(uint32_t ips, uint32_t ops)",
  "sceVoiceEnd": "int sceVoiceEnd(void)",
  "sceVoiceGetBitRate": "int sceVoiceGetBitRate(uint32_t portId, uint32_t *bitrate)",
  "sceVoiceGetMuteFlag": "int sceVoiceGetMuteFlag(uint32_t portId, bool *bMuted)",
  "sceVoiceGetPortAttr": "int sceVoiceGetPortAttr(uint32_t portId, SceVoicePortAttr attr, void *pAttrValue, int attrSize)",
  "sceVoiceGetPortInfo": "int sceVoiceGetPortInfo(uint32_t portId, SceVoiceBasePortInfo *pInfo)",
  "sceVoiceGetResourceInfo": "int sceVoiceGetResourceInfo(SceVoiceResourceInfo *pInfo)",
  "sceVoiceGetVolume": "int sceVoiceGetVolume(uint32_t portId, float *volume)",
  "sceVoiceInit": "int sceVoiceInit(SceVoiceInitParam *pArg, SceVoiceVersion version)",
  "sceVoicePausePort": "int sceVoicePausePort(uint32_t portId)",
  "sceVoicePausePortAll": "int sceVoicePausePortAll(void)",
  "sceVoiceQoSConnect": "int sceVoiceQoSConnect(int* pConnectionId, int localId, int remoteId)",
  "sceVoiceQoSCreateLocalEndpoint": "int sceVoiceQoSCreateLocalEndpoint(int* pLocalId, SceUserServiceUserId userId, int32_t deviceInId, int32_t deviceOutId)",
  "sceVoiceQoSCreateRemoteEndpoint": "int sceVoiceQoSCreateRemoteEndpoint(int* pRemoteId)",
  "sceVoiceQoSDeleteLocalEndpoint": "int sceVoiceQoSDeleteLocalEndpoint(int localId)",
  "sceVoiceQoSDeleteRemoteEndpoint": "int sceVoiceQoSDeleteRemoteEndpoint(int remoteId)",
  "sceVoiceQoSDisconnect": "int sceVoiceQoSDisconnect(int connectionId)",
  "sceVoiceQoSEnd": "int sceVoiceQoSEnd(void)",
  "sceVoiceQoSGetConnectionAttribute": "int sceVoiceQoSGetConnectionAttribute(int connectionId, enum attributeId, void* pAttributeValue, int attributeSize)",
  "sceVoiceQoSGetLocalEndpoint": "int sceVoiceQoSGetLocalEndpoint(int connectionId, int* pLocalId)",
  "sceVoiceQoSGetLocalEndpointAttribute": "int sceVoiceQoSGetLocalEndpointAttribute(int localId, enum attributeId, void* pAttributeValue, int attributeSize)",
  "sceVoiceQoSGetRemoteEndpoint": "int sceVoiceQoSGetRemoteEndpoint(int connectionId, int* pRemoteId)",
  "sceVoiceQoSGetRemoteEndpointAttribute": "int sceVoiceQoSGetRemoteEndpointAttribute(int remoteId, enum attributeId, const void* pAttributeValue, int attributeSize)",
  "sceVoiceQoSGetStatus": "int sceVoiceQoSGetStatus(int connectionId, enum statusId, void* pStatusValue, int statusSize)",
  "sceVoiceQoSInit": "int sceVoiceQoSInit(void* pMemBlock, uint32_t memSize, int32_t appType)",
  "sceVoiceQoSReadPacket": "int sceVoiceQoSReadPacket(int connectionId, void* pData, unsigned int* pSize)",
  "sceVoiceQoSSetConnectionAttribute": "int sceVoiceQoSSetConnectionAttribute(int connectionId, enum attributeId, const void* pAttributeValue, int attributeSize)",
  "sceVoiceQoSSetLocalEndpointAttribute": "int sceVoiceQoSSetLocalEndpointAttribute(int localId, enum attributeId, const void* pAttributeValue, int attributeSize)",
  "sceVoiceQoSSetRemoteEndpointAttribute": "int sceVoiceQoSSetRemoteEndpointAttribute(int remoteId, enum attributeId, const void* pAttributeValue, int attributeSize)",
  "sceVoiceQoSWritePacket": "int sceVoiceQoSWritePacket(int connectionId, const void* pData, unsigned int* pSize)",
  "sceVoiceReadFromOPort": "int sceVoiceReadFromOPort(uint32_t ops, void *data, uint32_t *size)",
  "sceVoiceResetPort": "int sceVoiceResetPort(uint32_t portId)",
  "sceVoiceResumePort": "int sceVoiceResumePort(uint32_t portId)",
  "sceVoiceResumePortAll": "int sceVoiceResumePortAll(void)",
  "sceVoiceSetBitRate": "int sceVoiceSetBitRate(uint32_t portId, SceVoiceBitRate bitrate)",
  "sceVoiceSetMuteFlag": "int sceVoiceSetMuteFlag(uint32_t portId, bool bMuted)",
  "sceVoiceSetMuteFlagAll": "int sceVoiceSetMuteFlagAll(bool bMuted)",
  "sceVoiceSetThreadsParams": "int sceVoiceSetThreadsParams(SceVoiceThreadsParams *pParams)",
  "sceVoiceSetVolume": "int sceVoiceSetVolume(uint32_t portId, float volume)",
  "sceVoiceStart": "int sceVoiceStart(SceVoiceStartParam *pArg)",
  "sceVoiceStop": "int sceVoiceStop(void)",
  "sceVoiceUpdatePort": "int sceVoiceUpdatePort(uint32_t portId, const SceVoicePortParam *pArg)",
  "sceVoiceWriteToIPort": "int sceVoiceWriteToIPort(uint32_t ips, const void *data, uint32_t *size, int16_t frameGaps)",
  "sceVrServiceDialogClose": "int32_t sceVrServiceDialogClose(void)",
  "sceVrServiceDialogGetResult": "int32_t sceVrServiceDialogGetResult(struct *result)",
  "sceVrServiceDialogGetStatus": "SceCommonDialogStatus sceVrServiceDialogGetStatus(void)",
  "sceVrServiceDialogInitialize": "int32_t sceVrServiceDialogInitialize(void)",
  "sceVrServiceDialogOpen": "int32_t sceVrServiceDialogOpen(const struct *param)",
  "sceVrServiceDialogTerminate": "int32_t sceVrServiceDialogTerminate(void)",
  "sceVrServiceDialogUpdateStatus": "SceCommonDialogStatus sceVrServiceDialogUpdateStatus(void)",
  "sceVrTraceGetLiveCaptureId": "const char * sceVrTraceGetLiveCaptureId()",
  "sceVrTraceStartLiveCapture": "void sceVrTraceStartLiveCapture(struct *config)",
  "sceVrTraceStopLiveCapture": "void sceVrTraceStopLiveCapture()",
  "sceVrTrackerCpuProcess": "int32_t sceVrTrackerCpuProcess(const struct* param)",
  "sceVrTrackerCpuProcessVrTraceHook": "int32_t sceVrTrackerCpuProcessVrTraceHook(const SceVrTrackerCpuProcessParam* param)",
  "sceVrTrackerGetPlayAreaWarningInfo": "int32_t sceVrTrackerGetPlayAreaWarningInfo(struct* info)",
  "sceVrTrackerGetPlayAreaWarningInfoVrTraceHook": "int32_t sceVrTrackerGetPlayAreaWarningInfoVrTraceHook(SceVrTrackerPlayAreaWarningInfo* info)",
  "sceVrTrackerGetResult": "int32_t sceVrTrackerGetResult(const struct* param, struct* result)",
  "sceVrTrackerGetResultVrTraceHook": "int32_t sceVrTrackerGetResultVrTraceHook(const SceVrTrackerGetResultParam* param, SceVrTrackerResultData* result)",
  "sceVrTrackerGetTime": "int32_t sceVrTrackerGetTime(uint64_t* time)",
  "sceVrTrackerGpuSubmit": "int32_t sceVrTrackerGpuSubmit(const struct* param)",
  "sceVrTrackerGpuSubmitVrTraceHook": "int32_t sceVrTrackerGpuSubmitVrTraceHook(const SceVrTrackerGpuSubmitParam* param)",
  "sceVrTrackerGpuWait": "int32_t sceVrTrackerGpuWait(const struct* param)",
  "sceVrTrackerGpuWaitAndCpuProcess": "int32_t sceVrTrackerGpuWaitAndCpuProcess()",
  "sceVrTrackerGpuWaitAndCpuProcessVrTraceHook": "int32_t sceVrTrackerGpuWaitAndCpuProcessVrTraceHook(void)",
  "sceVrTrackerGpuWaitVrTraceHook": "int32_t sceVrTrackerGpuWaitVrTraceHook(const SceVrTrackerGpuWaitParam* param)",
  "sceVrTrackerInit": "int32_t sceVrTrackerInit(const struct* param)",
  "sceVrTrackerInitVrTraceHook": "int32_t sceVrTrackerInitVrTraceHook(const SceVrTrackerInitParam* param)",
  "sceVrTrackerNotifyEndOfCpuProcess": "int32_t sceVrTrackerNotifyEndOfCpuProcess(const struct* param)",
  "sceVrTrackerNotifyEndOfCpuProcessVrTraceHook": "int32_t sceVrTrackerNotifyEndOfCpuProcessVrTraceHook(const SceVrTrackerNotifyEndOfCpuProcessParam* param)",
  "sceVrTrackerQueryMemory": "int32_t sceVrTrackerQueryMemory(const struct* param, struct* result)",
  "sceVrTrackerQueryMemoryVrTraceHook": "int32_t sceVrTrackerQueryMemoryVrTraceHook(const SceVrTrackerQueryMemoryParam* param, SceVrTrackerQueryMemoryResult* result)",
  "sceVrTrackerRecalibrate": "int32_t sceVrTrackerRecalibrate(const struct* param)",
  "sceVrTrackerRecalibrateVrTraceHook": "int32_t sceVrTrackerRecalibrateVrTraceHook(const SceVrTrackerRecalibrateParam* param)",
  "sceVrTrackerRegisterDevice": "int32_t sceVrTrackerRegisterDevice(const enum deviceType, const int32_t handle)",
  "sceVrTrackerRegisterDeviceVrTraceHook": "int32_t sceVrTrackerRegisterDeviceVrTraceHook(const SceVrTrackerDeviceType deviceType, const int32_t deviceHandle)",
  "sceVrTrackerResetOrientationRelative": "int32_t sceVrTrackerResetOrientationRelative(const enum deviceType, const int32_t handle)",
  "sceVrTrackerResetOrientationRelativeVrTraceHook": "int32_t sceVrTrackerResetOrientationRelativeVrTraceHook(const SceVrTrackerDeviceType deviceType, const int32_t handle)",
  "sceVrTrackerSetDurationUntilStatusNotTracking": "int32_t sceVrTrackerSetDurationUntilStatusNotTracking(const enum deviceType, const uint32_t durationCameraFrames)",
  "sceVrTrackerSetDurationUntilStatusNotTrackingVrTraceHook": "int32_t sceVrTrackerSetDurationUntilStatusNotTrackingVrTraceHook(const SceVrTrackerDeviceType deviceType, const uint32_t durationCameraFrames)",
  "sceVrTrackerTerm": "int32_t sceVrTrackerTerm(void)",
  "sceVrTrackerTermVrTraceHook": "int32_t sceVrTrackerTermVrTraceHook(void)",
  "sceVrTrackerUnregisterDevice": "int32_t sceVrTrackerUnregisterDevice(const int32_t handle)",
  "sceVrTrackerUnregisterDeviceVrTraceHook": "int32_t sceVrTrackerUnregisterDeviceVrTraceHook(const int32_t handle)",
  "sceVrTrackerUpdateMotionSensorData": "int32_t sceVrTrackerUpdateMotionSensorData(const struct* param)",
  "sceVrTrackerUpdateMotionSensorDataVrTraceHook": "int32_t sceVrTrackerUpdateMotionSensorDataVrTraceHook(const SceVrTrackerUpdateMotionSensorDataParam* param)",
  "sceWebBrowserDialogClose": "int32_t sceWebBrowserDialogClose(void)",
  "sceWebBrowserDialogGetResult": "int32_t sceWebBrowserDialogGetResult(struct *result)",
  "sceWebBrowserDialogGetStatus": "SceCommonDialogStatus sceWebBrowserDialogGetStatus(void)",
  "sceWebBrowserDialogInitialize": "int32_t sceWebBrowserDialogInitialize(void)",
  "sceWebBrowserDialogOpen": "int32_t sceWebBrowserDialogOpen(const struct *param)",
  "sceWebBrowserDialogOpenForPredeterminedContent": "int32_t sceWebBrowserDialogOpenForPredeterminedContent(const struct *param, struct *param2)",
  "sceWebBrowserDialogResetCookie": "int32_t sceWebBrowserDialogResetCookie(const struct *param)",
  "sceWebBrowserDialogSetCookie": "int32_t sceWebBrowserDialogSetCookie(const struct *param)",
  "sceWebBrowserDialogTerminate": "int32_t sceWebBrowserDialogTerminate(void)",
  "sceWebBrowserDialogUpdateStatus": "SceCommonDialogStatus sceWebBrowserDialogUpdateStatus(void)",
  "sceZlibFinalize": "int sceZlibFinalize(void)",
  "sceZlibGetResult": "int sceZlibGetResult(uint64_t requestId, uint32_t *destinationLength, int *status)",
  "sceZlibInflate": "int sceZlibInflate(const void* source, uint32_t sourceLength, void *destination, uint32_t destinationLength, uint64_t *requestId)",
  "sceZlibInitialize": "int sceZlibInitialize(const void* buffer, size_t length)",
  "sceZlibWaitForDone": "int sceZlibWaitForDone(uint64_t *requestId, uint32_t *timeout)"
}